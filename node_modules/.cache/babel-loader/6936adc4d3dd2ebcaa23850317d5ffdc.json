{"ast":null,"code":"import axios from 'axios'; // Create User\n\nconst createUserStart = () => {\n  return {\n    type: 'CREATE_USER_START'\n  };\n};\n\nconst createUserFail = error => {\n  return {\n    type: 'CREATE_USER_FAIL',\n    error\n  };\n};\n\nconst createUserSuccess = user => {\n  return {\n    type: 'CREATE_USER_SUCCESS',\n    user\n  };\n};\n\nexport const createUser = user => {\n  return dispatch => {\n    dispatch(createUserStart());\n    axios({\n      method: 'POST',\n      url: 'http://localhost:8080/api/users',\n      data: user\n    }).then(response => {\n      console.log(response.data);\n      dispatch(createUserSuccess(response.data.newUser));\n    }).catch(error => {\n      dispatch(createUserFail(error));\n    });\n  };\n}; // Edit User\n\nconst editUserStart = () => {\n  return {\n    type: 'EDIT_USER_START'\n  };\n};\n\nconst editUserFail = error => {\n  return {\n    type: 'EDIT_USER_ERROR',\n    error\n  };\n};\n\nconst editUserSuccess = (id, user) => {\n  return {\n    type: 'EDIT_USER_SUCCESS',\n    id,\n    user\n  };\n};\n\nexport const editUser = (id, user) => {\n  return dispatch => {\n    dispatch(editUserStart());\n    axios.put(\"http://localhost:8080/api/users/\".concat(id), user).then(response => {\n      dispatch(editUserSuccess(id, user));\n      console.log('edit user success!!!');\n      console.log(id);\n      console.loh(user);\n      dispatch(getUsers());\n      console.log(getUsers());\n    }).catch(error => {\n      dispatch(editUserFail(error));\n    });\n  };\n}; // Delete User\n\nconst deleteUserStart = () => {\n  return {\n    type: 'DELETE_USER_START'\n  };\n};\n\nconst deleteUserFail = error => {\n  return {\n    type: 'DELETE_USER_ERROR',\n    error\n  };\n};\n\nconst deleteUserSuccess = id => {\n  return {\n    type: 'DELETE_USER_SUCCESS',\n    id\n  };\n};\n\nexport const deleteUser = (id, deleteUser) => {\n  return dispatch => {\n    dispatch(deleteUserStart());\n    axios.delete(\"http://localhost:8080/api/users/\".concat(id), deleteUser).then(response => {\n      dispatch(deleteUserSuccess(id));\n      dispatch(getUsers());\n      console.log('delete user success');\n    }).catch(error => {\n      dispatch(deleteUserFail(error));\n    });\n  };\n}; // // Get User\n// const getUserStart = () => {\n//   return {\n//     type: 'GET_USER_START'\n//   };\n// };\n// const getUserFail = (error) => {\n//   return {\n//     type: 'GET_USER_ERROR',\n//     error\n//   };\n// };\n// const getUserSuccess = (id) => {\n//   return {\n//     type: 'GET_USER_SUCCESS',\n//     id\n//   };\n// }\n// export const getUser = (id, getUser) => {\n//   return (dispatch) => {\n//     dispatch(getUserStart());\n//     axios\n//       .get(`http://localhost:8080/api/users/${id}`, getUser)\n//       .then(response => {\n//         dispatch(getUserSuccess(id));\n//         console.log('get user success');\n//       })\n//       .catch(error => {\n//         dispatch(getUserFail(error));\n//       });\n//   };\n// };\n// Get Userlist\n\nconst getUsersStart = () => {\n  return {\n    type: 'GET_USERS_START'\n  };\n};\n\nconst getUsersFail = error => {\n  return {\n    type: 'GET_USERS_ERROR',\n    error\n  };\n};\n\nconst getUsersSuccess = response => {\n  return {\n    type: 'GET_USERS_SUCCESS',\n    data: response\n  };\n};\n\nexport const getUsers = () => {\n  return dispatch => {\n    dispatch(getUsersStart());\n    axios.get('http://localhost:8080/api/users', getUsers).then(response => {\n      dispatch(getUsersSuccess(response.data));\n    }).catch(error => {\n      dispatch(getUsersFail(error));\n    });\n  };\n}; // Redirect\n\nexport const redirect = () => {\n  return {\n    type: 'REDIRECT'\n  };\n};\nexport const cancelRedirect = () => {\n  return {\n    type: 'CANCEL_REDIRECT'\n  };\n};","map":{"version":3,"sources":["/Users/Flora/myapp/src/redux/action-creators/index.js"],"names":["axios","createUserStart","type","createUserFail","error","createUserSuccess","user","createUser","dispatch","method","url","data","then","response","console","log","newUser","catch","editUserStart","editUserFail","editUserSuccess","id","editUser","put","loh","getUsers","deleteUserStart","deleteUserFail","deleteUserSuccess","deleteUser","delete","getUsersStart","getUsersFail","getUsersSuccess","get","redirect","cancelRedirect"],"mappings":"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","sourcesContent":["import axios from 'axios';\n// Create User\nconst createUserStart = () => {\n  return {\n    type: 'CREATE_USER_START'\n  };  \n};\nconst createUserFail = (error) => {\n  return {\n    type:'CREATE_USER_FAIL',\n    error\n  };\n};\n\nconst createUserSuccess = (user) => {\n  return {\n    type:'CREATE_USER_SUCCESS',\n    user\n  }\n};\n\n \nexport const createUser = (user) => {\n  return (dispatch) => {\n    dispatch(createUserStart());\n    axios({\n      method: 'POST',\n      url: 'http://localhost:8080/api/users',\n      data: user\n    })\n      .then(response => {\n        console.log(response.data);\n        dispatch(createUserSuccess(response.data.newUser));\n      })\n      .catch(error => {\n        dispatch(createUserFail(error));\n      });\n  };\n};\n\n// Edit User\nconst editUserStart = () => {\n  return {\n    type: 'EDIT_USER_START'\n  };\n};\n\nconst editUserFail = (error) => {\n  return {\n    type: 'EDIT_USER_ERROR',\n    error\n  };\n};\n\nconst editUserSuccess = (id, user) => {\n  return {\n    type: 'EDIT_USER_SUCCESS',\n    id,\n    user\n  };\n};\n\nexport const editUser = (id, user) => {\n  return (dispatch) => {\n    dispatch(editUserStart());\n    axios\n      .put(`http://localhost:8080/api/users/${id}`, user)\n      .then(response => {\n        dispatch(editUserSuccess(id, user));\n        console.log('edit user success!!!');\n        console.log(id);\n        console.loh(user);\n        dispatch(getUsers());\n        console.log(getUsers());\n      })\n      .catch(error => {\n        dispatch(editUserFail(error));\n      });\n   };\n};\n\n// Delete User\nconst deleteUserStart = () => {\n  return {\n    type: 'DELETE_USER_START'\n  };\n};\n\nconst deleteUserFail = (error) => {\n  return {\n    type: 'DELETE_USER_ERROR',\n    error\n  };\n};\n\nconst deleteUserSuccess = (id) => {\n  return {\n    type: 'DELETE_USER_SUCCESS',\n    id\n  };\n};\n\nexport const deleteUser = (id, deleteUser) => {\n  return (dispatch) => {\n    dispatch(deleteUserStart());\n    axios\n      .delete(`http://localhost:8080/api/users/${id}`, deleteUser)\n      .then(response => {\n        dispatch(deleteUserSuccess(id));\n        dispatch(getUsers());\n        console.log('delete user success');\n      })\n      .catch(error => {\n        dispatch(deleteUserFail(error));\n      });\n  };\n};\n\n// // Get User\n// const getUserStart = () => {\n//   return {\n//     type: 'GET_USER_START'\n//   };\n// };\n\n// const getUserFail = (error) => {\n//   return {\n//     type: 'GET_USER_ERROR',\n//     error\n//   };\n// };\n\n// const getUserSuccess = (id) => {\n//   return {\n//     type: 'GET_USER_SUCCESS',\n//     id\n//   };\n// }\n\n// export const getUser = (id, getUser) => {\n//   return (dispatch) => {\n//     dispatch(getUserStart());\n//     axios\n//       .get(`http://localhost:8080/api/users/${id}`, getUser)\n//       .then(response => {\n//         dispatch(getUserSuccess(id));\n//         console.log('get user success');\n//       })\n//       .catch(error => {\n//         dispatch(getUserFail(error));\n//       });\n//   };\n// };\n\n// Get Userlist\nconst getUsersStart = () => {\n  return {\n    type: 'GET_USERS_START'\n  };\n};\n\nconst getUsersFail = (error) => {\n  return {\n    type: 'GET_USERS_ERROR',\n    error\n  };\n};\n\nconst getUsersSuccess = (response) => {\n  return {\n    type: 'GET_USERS_SUCCESS',\n    data: response\n  };\n};\n\nexport const getUsers = () => {\n  return (dispatch) => {\n    dispatch(getUsersStart());\n    axios\n      .get('http://localhost:8080/api/users', getUsers)\n      .then(response => {\n        dispatch(getUsersSuccess(response.data));\n      })\n      .catch(error => {\n        dispatch(getUsersFail(error));\n      });\n  };\n};\n\n// Redirect\nexport const redirect = () => {\n  return {\n    type: 'REDIRECT'\n  };\n};\n\nexport const cancelRedirect = () => {\n  return {\n    type: 'CANCEL_REDIRECT'\n  };\n};\n\n\n"]},"metadata":{},"sourceType":"module"}