{"ast":null,"code":"var _jsxFileName = \"/Users/Flora/myapp/src/containers/Pagination/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPage, setStatusCurPage, resetRedirect } from '../../redux/action-creators';\n\nclass Pagination extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setCurPage = curPage => {\n      //const { dispatch } = this.props;\n      // this.props.getCount();\n      this.props.fetchPage(curPage, 5); // this.props.setStatusCurPage(curPage);\n      // dispatch(fetchPage(curPage, 5));\n      // dispatch(setStatusCurPage(curPage));\n\n      const pageSize = this.props.page.pageSize.pageSize;\n      const count = this.props.page.count.count;\n      const pageNumber = [];\n      const totalPages = Math.ceil(count / pageSize);\n      console.log('Testing totalPages is~~ ', totalPages);\n      let startPage = 1,\n          endPage = totalPages;\n\n      for (let i = startPage; i <= endPage; i++) {\n        pageNumber.push(i);\n      }\n\n      this.setState({\n        pageNumber\n      }); //console.log('Testing pageProp is~~ ', this.props.pageProp);\n\n      console.log('Testing count is~~ ', count);\n      console.log('Testing pageNumber is~~ ', pageNumber);\n      console.log('Testing pageSize is~~ ', pageSize);\n    };\n\n    this.state = {\n      pageNumber: []\n    };\n  } // componentDidMount() {\n  //   this.setCurPage(1);\n  //   this.props.resetRedirect();\n  // }\n  //一会加上\n\n\n  componentDidUpdate(prevProps) {\n    if (this.props.page.count !== prevProps.page.count) {\n      this.setCurPage(this.props.status.curPage);\n    }\n\n    console.log('componentDidUpdate count', this.props.page.count);\n  }\n\n  render() {\n    const pageProp = this.props.page;\n    const pageNumber = this.state.pageNumber;\n    const count = pageProp.count.count;\n    const pageSize = pageProp.pageSize.pageSize;\n    const totalPages = Math.ceil(count / pageSize);\n    return React.createElement(\"ul\", {\n      className: \"pagination\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"page-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, pageProp.curPage === 1 ? '' : React.createElement(\"a\", {\n      className: \"page-link\",\n      onClick: () => this.setCurPage(pageProp.curPage - 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Previous\")), pageNumber.map(page => {\n      return React.createElement(\"li\", {\n        key: page,\n        className: \"page-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: () => this.setCurPage(page),\n        className: \"page-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, page));\n    }), React.createElement(\"li\", {\n      className: \"page-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, pageProp.curPage === totalPages ? '' : React.createElement(\"a\", {\n      onClick: () => this.setCurPage(pageProp.curPage + 1),\n      className: \"page-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Next\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    //page: state.getUsers,\n    status: state.status,\n    pageOfUsers: state.getUsers.pageOfUsers,\n    curPage: state.getUsers.curPage,\n    startIndex: state.getUsers.startIndex,\n    pageSize: state.getUsers.pageSize\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    resetRedirect: () => {\n      dispatch(resetRedirect());\n    },\n    // getCount: () => {\n    //   dispatch(getCount());\n    // },\n    fetchPage: (page, size) => {\n      dispatch(fetchPage(page, size));\n    },\n    setStatusCurPage: page => {\n      dispatch(setStatusCurPage(page));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pagination);","map":{"version":3,"sources":["/Users/Flora/myapp/src/containers/Pagination/index.js"],"names":["React","Component","connect","fetchPage","setStatusCurPage","resetRedirect","Pagination","constructor","props","setCurPage","curPage","pageSize","page","count","pageNumber","totalPages","Math","ceil","console","log","startPage","endPage","i","push","setState","state","componentDidUpdate","prevProps","status","render","pageProp","map","mapStateToProps","pageOfUsers","getUsers","startIndex","mapDispatchToProps","dispatch","size"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPage, setStatusCurPage, resetRedirect } from '../../redux/action-creators';\n\nclass Pagination extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pageNumber: []\n    };\n  }\n\n  // componentDidMount() {\n  //   this.setCurPage(1);\n  //   this.props.resetRedirect();\n  // }\n\n  //一会加上\n  componentDidUpdate(prevProps) {\n    if (this.props.page.count !== prevProps.page.count) {\n      this.setCurPage(this.props.status.curPage);\n    }\n    console.log('componentDidUpdate count', this.props.page.count);\n  }\n\n  setCurPage = curPage => {\n    //const { dispatch } = this.props;\n    // this.props.getCount();\n    this.props.fetchPage(curPage, 5);\n    // this.props.setStatusCurPage(curPage);\n    // dispatch(fetchPage(curPage, 5));\n    // dispatch(setStatusCurPage(curPage));\n    const { pageSize } = this.props.page.pageSize;\n    const { count } = this.props.page.count;\n    const pageNumber = [];\n  \n    const totalPages = Math.ceil(count / pageSize);\n    console.log('Testing totalPages is~~ ', totalPages);\n    let startPage = 1, endPage = totalPages;\n    for (let i = startPage; i <= endPage; i++) {\n      pageNumber.push(i);\n    }\n    this.setState({ pageNumber });\n\n    //console.log('Testing pageProp is~~ ', this.props.pageProp);\n    console.log('Testing count is~~ ', count);\n    console.log('Testing pageNumber is~~ ', pageNumber);\n    console.log('Testing pageSize is~~ ', pageSize);\n  };\n\n\n\n  render() {\n    const pageProp = this.props.page;\n    const pageNumber = this.state.pageNumber;\n    const { count } = pageProp.count;\n    const { pageSize } = pageProp.pageSize;\n    const totalPages = Math.ceil(count / pageSize);\n\n    return (\n      <ul className=\"pagination\">\n        <li className=\"page-item\">\n          {pageProp.curPage === 1 ? '' : <a className=\"page-link\" onClick={() => this.setCurPage(pageProp.curPage - 1)} >Previous</a>}\n        </li>\n        {pageNumber.map(page => {\n          return (\n            <li key={page} className=\"page-item\">\n              <a onClick={() => this.setCurPage(page)} className=\"page-link\">{page}</a>\n            </li>\n          );\n        })}\n        <li className=\"page-item\">\n          {pageProp.curPage === totalPages ? '' : <a onClick={() => this.setCurPage(pageProp.curPage + 1)} className=\"page-link\" >Next</a>}\n        </li>\n      </ul>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    //page: state.getUsers,\n    status: state.status,\n    pageOfUsers: state.getUsers.pageOfUsers,\n    curPage: state.getUsers.curPage,\n    startIndex: state.getUsers.startIndex,\n    pageSize: state.getUsers.pageSize\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    resetRedirect: () => {\n      dispatch(resetRedirect());\n    },\n    // getCount: () => {\n    //   dispatch(getCount());\n    // },\n    fetchPage: (page, size) => {\n      dispatch(fetchPage(page, size));\n    },\n    setStatusCurPage: (page) => {\n      dispatch(setStatusCurPage(page));\n    }\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pagination);"]},"metadata":{},"sourceType":"module"}