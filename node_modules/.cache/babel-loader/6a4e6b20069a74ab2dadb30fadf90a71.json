{"ast":null,"code":"import axios from 'axios';\n\nconst getUserStart = () => {\n  return {\n    type: 'GET_USER_START'\n  };\n};\n\nconst getUserFail = error => {\n  return {\n    type: 'GET_USER_FAIL',\n    error\n  };\n};\n\nconst getUserSuccess = response => {\n  return {\n    type: 'GET_USER_SUCCESS',\n    data: response\n  };\n};\n\nexport const getAllUsers = () => {\n  return dispatch => {\n    dispatch(getUserStart());\n    axios.get('https://api.github.com/users?per_page=100').then(response => {\n      dispatch(getUserSuccess(response.data));\n    }).catch(error => {\n      dispatch(getUserFail(error));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/Flora/myapp/src/redux/action-creators/index.js"],"names":["axios","getUserStart","type","getUserFail","error","getUserSuccess","response","data","getAllUsers","dispatch","get","then","catch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACzB,SAAO;AACLC,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJD;;AAKA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACLF,IAAAA,IAAI,EAAC,eADA;AAELE,IAAAA;AAFK,GAAP;AAID,CALD;;AAOA,MAAMC,cAAc,GAAIC,QAAD,IAAc;AACnC,SAAO;AACLJ,IAAAA,IAAI,EAAC,kBADA;AAELK,IAAAA,IAAI,EAAED;AAFD,GAAP;AAID,CALD;;AAOA,OAAO,MAAME,WAAW,GAAG,MAAM;AAC/B,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACR,YAAY,EAAb,CAAR;AACAD,IAAAA,KAAK,CACFU,GADH,CACO,2CADP,EAEGC,IAFH,CAEQL,QAAQ,IAAI;AAChBG,MAAAA,QAAQ,CAACJ,cAAc,CAACC,QAAQ,CAACC,IAAV,CAAf,CAAR;AACD,KAJH,EAKGK,KALH,CAKSR,KAAK,IAAI;AACdK,MAAAA,QAAQ,CAACN,WAAW,CAACC,KAAD,CAAZ,CAAR;AACD,KAPH;AAQD,GAVD;AAWD,CAZM","sourcesContent":["import axios from 'axios';\n\nconst getUserStart = () => {\n  return {\n    type: 'GET_USER_START'\n  };  \n};\nconst getUserFail = (error) => {\n  return {\n    type:'GET_USER_FAIL',\n    error\n  };\n};\n\nconst getUserSuccess = (response) => {\n  return {\n    type:'GET_USER_SUCCESS',\n    data: response\n  }\n};\n\nexport const getAllUsers = () => {\n  return (dispatch) => {\n    dispatch(getUserStart());\n    axios\n      .get('https://api.github.com/users?per_page=100')\n      .then(response => {\n        dispatch(getUserSuccess(response.data));\n      })\n      .catch(error => {\n        dispatch(getUserFail(error));\n      });\n  };\n};\n\n\n"]},"metadata":{},"sourceType":"module"}