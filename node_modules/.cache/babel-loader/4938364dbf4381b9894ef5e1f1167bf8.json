{"ast":null,"code":"import _objectSpread from \"/Users/Flora/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nconst initState = {\n  soldiers: [],\n  isLoading: false,\n  isFetching: false,\n  err: null,\n  isSearching: false,\n  showSoldiers: [],\n  sorted: false\n};\n\nconst soldiers = (state = initState, action) => {\n  switch (action.type) {\n    // Delete User\n    case 'DELETE_SOLDIER_START':\n      return _objectSpread({}, state, {\n        isLoading: true\n      });\n\n    case 'DELETE_SOLDIER_ERROR':\n      return _objectSpread({}, state, {\n        isLoading: false,\n        err: action.error,\n        deleteErr: true\n      });\n\n    case 'DELETE_SOLDIER_SUCCESS':\n      let index = 0;\n      const soldiers = state.soldiers;\n\n      for (let i = 0; i < soldiers.length; i++) {\n        if (soldiers[i]._id === action.id) {\n          index = i;\n          break;\n        }\n      }\n\n      const deletedSoldiers = [...soldiers.slice(0, index), ...soldiers.slice(index + 1)];\n      return _objectSpread({}, state, {\n        isLoading: false,\n        soldiers: deletedSoldiers,\n        deleteErr: false,\n        err: null\n      });\n    // Create New User \n\n    case 'CREATE_SOLDIER_START':\n      return _objectSpread({}, state, {\n        isLoading: true\n      });\n\n    case 'CREATE_SOLDIER_FAIL':\n      return _objectSpread({}, state, {\n        isLoading: false,\n        err: action.error\n      });\n\n    case 'CREATE_SOLDIER_SUCCESS':\n      const newSoldiers = [...state.soldiers, action.newSoldier];\n      console.log('action newSoldier', action.newSoldier);\n      return _objectSpread({}, state, {\n        soldiers: newSoldiers,\n        isLoading: false,\n        err: '' // const totalPages = Math.ceil(state.count / state.pageSize);\n        // let newPage = totalPages;\n        // if(state.pageOfUsers.length === state.pageSize) {\n        //   newPage += 1;\n        // }\n        //   return {\n        //     ...state,\n        //     isLoading: false,\n        //     pageOfUsers:[\n        //       ...state.pageOfUsers,\n        //       action.user,\n        //     ],\n        //     curPage : newPage,\n        //   };\n        //Edit Soldier \n\n      });\n\n    case 'EDIT_SOLDIER_START':\n      return _objectSpread({}, state, {\n        isLoading: true\n      });\n\n    case 'EDIT_SOLDIER_ERROR':\n      return _objectSpread({}, state, {\n        isLoading: false,\n        err: action.error\n      });\n\n    case 'EDIT_SOLDIER_SUCCESS':\n      let editedSoldiers = state.soldiers.map(soldier => {\n        if (soldier._id === action._id) {\n          return action.soldier;\n        } else {\n          return soldier;\n        }\n      });\n      return _objectSpread({}, state, {\n        isLoading: false,\n        soldiers: editedSoldiers,\n        err: '',\n        showSoldiers: show\n      });\n    // Sort Users\n    // case 'SORT_USERS': {\n    //   const sortedUsers = [...state.pageOfUsers]; \n    //   const key = action.key;\n    //   sortedUsers.sort((user1, user2) => {\n    //     if (typeof(user1[key]) === 'number') {\n    //       if (user1[key] === user2[key]) {\n    //         return 0;\n    //       }\n    //       return user1[key] < user2[key] ? -1 : 1;\n    //     }\n    //     return user1[key].toLowerCase().localeCompare(user2[key].toLowerCase());\n    //   });\n    //   return {\n    //     ...state,\n    //     pageOfUsers: sortedUsers,\n    //   };\n    // }\n    // Fetch Soldiers\n\n    case 'FETCH_SOLDIERS_START':\n      return _objectSpread({}, state, {\n        isLoading: true,\n        isFetching: true\n      });\n\n    case 'FETCH_SOLDIERS_SUCCESS':\n      {\n        return _objectSpread({}, state, {\n          soldiers: action.soldiers,\n          isLoading: false,\n          isFetching: false,\n          err: null,\n          sorted: true\n        });\n      }\n\n    case 'FETCH_SOLDIERS_FAIL':\n      return {\n        // ...state,\n        isLoading: false,\n        isFetching: false,\n        err: action.error\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default soldiers; // Get UserList \n// case 'GET_USERS_START':\n//   return {\n//     ...state,\n//     isLoading: true,\n//     err: null\n//   };\n// case 'GET_USERS_FAIL':\n//   return {\n//     ...state,\n//     isLoading: false,\n//     err: action.error\n//   };\n// case 'GET_USERS_SUCCESS':\n//   return {\n//     ...state,\n//     isLoading: false,\n//     err: null,\n//     users: action.data\n//   };\n// Count Page\n//  case 'GET_COUNT_START':\n//   return {\n//     ...state,\n//     isLoading: true\n//   };\n// case 'GET_COUNT_SUCCESS':\n// return {\n//   ...state,\n//   count: action.count,\n//   isLoading: false,\n//   err: null\n// };\n// case 'GET_COUNT_FAIL':\n// return {\n//   ...state,\n//   isLoading: false,\n//   err: action.error\n// }\n// Search User\n// case 'SEARCH_START' : {\n//   return {\n//     ...state,\n//     isLoading: true,\n//   }\n// }\n// case 'SEARCH_SUCCESS' : {\n//   return {\n//       ...state,\n//       searchUsers : action.users,\n//       isSearching : true,\n//       isLoading: false,\n//   }\n// }\n// case 'SEARCH_FAIL' : {\n//   return {\n//     ...state,\n//     isLoading: false,\n//     isSearching: false,\n//     err: action.error\n//   }\n// }","map":{"version":3,"sources":["/Users/Flora/myapp/src/redux/reducer/soldiers.js"],"names":["initState","soldiers","isLoading","isFetching","err","isSearching","showSoldiers","sorted","state","action","type","error","deleteErr","index","i","length","_id","id","deletedSoldiers","slice","newSoldiers","newSoldier","console","log","editedSoldiers","map","soldier","show"],"mappings":"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","sourcesContent":["const initState = {\n  soldiers: [],\n  isLoading: false,\n  isFetching: false,\n  err: null,\n  isSearching: false,\n  showSoldiers: [],\n  sorted: false,\n};\n\nconst soldiers = (state = initState, action) => {\n  switch(action.type) {\n   \n    \n    // Delete User\n    case 'DELETE_SOLDIER_START':\n      return {\n        ...state,\n        isLoading: true\n      };\n    case 'DELETE_SOLDIER_ERROR':\n      return {\n        ...state,\n        isLoading: false,\n        err: action.error,\n        deleteErr: true\n      };\n    case 'DELETE_SOLDIER_SUCCESS':\n      let index = 0;\n      const { soldiers } = state;\n      for (let i = 0; i < soldiers.length; i++) {\n        if(soldiers[i]._id === action.id) {\n          index = i;\n          break;\n        }\n      }\n      const deletedSoldiers = [...soldiers.slice(0, index), ...soldiers.slice(index + 1)];\n      return {\n        ...state,\n        isLoading: false,\n        soldiers: deletedSoldiers,\n        deleteErr: false,\n        err: null,\n      };\n    \n    // Create New User \n    case 'CREATE_SOLDIER_START':\n      return {\n        ...state,\n        isLoading: true\n      };\n    case 'CREATE_SOLDIER_FAIL':\n      return {\n        ...state,\n        isLoading: false,\n        err: action.error\n      };\n    case 'CREATE_SOLDIER_SUCCESS':\n      const newSoldiers = [...state.soldiers, action.newSoldier];\n      console.log('action newSoldier', action.newSoldier);\n      return {\n        ...state,\n        soldiers: newSoldiers,\n        isLoading: false,\n        err: ''\n      }\n      // const totalPages = Math.ceil(state.count / state.pageSize);\n      // let newPage = totalPages;\n      // if(state.pageOfUsers.length === state.pageSize) {\n      //   newPage += 1;\n      // }\n      //   return {\n      //     ...state,\n      //     isLoading: false,\n      //     pageOfUsers:[\n      //       ...state.pageOfUsers,\n      //       action.user,\n      //     ],\n      //     curPage : newPage,\n      //   };\n    \n    //Edit Soldier \n    case 'EDIT_SOLDIER_START':\n      return {\n        ...state,\n        isLoading: true\n      };\n    case 'EDIT_SOLDIER_ERROR':\n      return {\n        ...state,\n        isLoading: false,\n        err: action.error\n      };\n    case 'EDIT_SOLDIER_SUCCESS':\n      let editedSoldiers = state.soldiers.map(soldier => {\n        if (soldier._id === action._id) {\n          return action.soldier;\n        } else {\n          return soldier;\n        }\n      });\n      return {\n        ...state,\n        isLoading: false,\n        soldiers: editedSoldiers,\n        err: '',\n        showSoldiers: show\n      };\n    \n    // Sort Users\n    // case 'SORT_USERS': {\n    //   const sortedUsers = [...state.pageOfUsers]; \n    //   const key = action.key;\n    //   sortedUsers.sort((user1, user2) => {\n    //     if (typeof(user1[key]) === 'number') {\n    //       if (user1[key] === user2[key]) {\n    //         return 0;\n    //       }\n    //       return user1[key] < user2[key] ? -1 : 1;\n    //     }\n    //     return user1[key].toLowerCase().localeCompare(user2[key].toLowerCase());\n    //   });\n    //   return {\n    //     ...state,\n    //     pageOfUsers: sortedUsers,\n    //   };\n    // }\n\n\n    // Fetch Soldiers\n    case 'FETCH_SOLDIERS_START':\n      return {\n        ...state,\n        isLoading: true,\n        isFetching: true,\n      };\n    case 'FETCH_SOLDIERS_SUCCESS': {   \n      return {\n        ...state,\n        soldiers: action.soldiers,\n        isLoading: false,\n        isFetching: false,\n        err: null,\n        sorted: true\n      };\n    }\n    case 'FETCH_SOLDIERS_FAIL':\n      return {\n        // ...state,\n        isLoading: false,\n        isFetching: false,\n        err: action.error\n      };\n    default:\n      return state;\n  }\n};\n\nexport default soldiers;\n\n\n\n // Get UserList \n// case 'GET_USERS_START':\n//   return {\n//     ...state,\n//     isLoading: true,\n//     err: null\n//   };\n// case 'GET_USERS_FAIL':\n//   return {\n//     ...state,\n//     isLoading: false,\n//     err: action.error\n//   };\n// case 'GET_USERS_SUCCESS':\n//   return {\n//     ...state,\n//     isLoading: false,\n//     err: null,\n//     users: action.data\n//   };\n\n // Count Page\n//  case 'GET_COUNT_START':\n//   return {\n//     ...state,\n//     isLoading: true\n//   };\n// case 'GET_COUNT_SUCCESS':\n// return {\n//   ...state,\n//   count: action.count,\n//   isLoading: false,\n//   err: null\n// };\n// case 'GET_COUNT_FAIL':\n// return {\n//   ...state,\n//   isLoading: false,\n//   err: action.error\n// }\n\n  // Search User\n// case 'SEARCH_START' : {\n//   return {\n//     ...state,\n//     isLoading: true,\n//   }\n// }\n// case 'SEARCH_SUCCESS' : {\n//   return {\n//       ...state,\n//       searchUsers : action.users,\n//       isSearching : true,\n//       isLoading: false,\n//   }\n// }\n// case 'SEARCH_FAIL' : {\n//   return {\n//     ...state,\n//     isLoading: false,\n//     isSearching: false,\n//     err: action.error\n//   }\n// }\n    \n\n"]},"metadata":{},"sourceType":"module"}