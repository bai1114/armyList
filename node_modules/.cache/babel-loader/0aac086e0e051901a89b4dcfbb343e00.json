{"ast":null,"code":"import axios from 'axios'; // Create User\n\nconst createUserStart = () => {\n  return {\n    type: 'CREATE_USER_START'\n  };\n};\n\nconst createUserFail = error => {\n  return {\n    type: 'CREATE_USER_FAIL',\n    error\n  };\n};\n\nconst createUserSuccess = user => {\n  return {\n    type: 'CREATE_USER_SUCCESS',\n    user\n  };\n};\n\nexport const createUser = user => {\n  return dispatch => {\n    dispatch(createUserStart());\n    axios({\n      method: 'POST',\n      url: 'http://localhost:8080/api/users',\n      data: user\n    }).then(response => {\n      dispatch(createUserSuccess(response.newUser));\n    }).catch(error => {\n      dispatch(createUserFail(error));\n    });\n  };\n}; // Edit User\n\nconst editUserStart = () => {\n  return {\n    type: 'EDIT_USER_START'\n  };\n};\n\nconst editUserFail = error => {\n  return {\n    type: 'EDIT_USER_ERROR',\n    error\n  };\n};\n\nconst editUserSuccess = id => {\n  return {\n    type: 'EDIT_USER_SUCCESS',\n    id\n  };\n};\n\nexport const editUser = (id, editUser) => {\n  return dispatch => {\n    dispatch(editUserStart());\n    axios.put(\"http://localhost:8080/api/users/\".concat(id), editUser).then(response => {\n      dispatch(editUserSuccess(id));\n      dispatch(getUsers());\n    }).catch(error => {\n      dispatch(editUserFail(error));\n    });\n  };\n}; // Delete User\n\nconst deleteUserStart = () => {\n  return {\n    type: 'DELETE_USER_START'\n  };\n};\n\nconst deleteUserFail = error => {\n  return {\n    type: 'DELETE_USER_ERROR',\n    error\n  };\n};\n\nconst deleteUserSuccess = id => {\n  return {\n    type: 'DELETE_USER_SUCCESS',\n    id\n  };\n};\n\nexport const deleteUser = (id, deleteUser) => {\n  return dispatch => {\n    dispatch(deleteUserStart());\n    axios.delete(\"http://localhost:8080/api/users/\".concat(id), deleteUser).then(response => {\n      dispatch(deleteUserSuccess(id));\n      dispatch(getUsers());\n      console.log('delete user success');\n    }).catch(error => {\n      dispatch(deleteUserFail(error));\n    });\n  };\n}; // Get Userlist\n\nconst getUserStart = () => {\n  return {\n    type: 'GET_USER_START'\n  };\n};\n\nconst getUserFail = error => {\n  return {\n    type: 'GET_USER_ERROR',\n    error\n  };\n};\n\nconst getUserSuccess = response => {\n  return {\n    type: 'GET_USER_SUCCESS',\n    data: response\n  };\n};\n\nexport const getUsers = () => {\n  return dispatch => {\n    dispatch(getUserStart());\n    axios.get('http://localhost:8080/api/users', getUsers).then(response => {\n      dispatch(getUserSuccess(response.data));\n    }).catch(error => {\n      dispatch(getUserFail(error));\n    });\n  };\n}; // Redirect\n\nexport const redirect = () => {\n  return {\n    type: 'REDIRECT'\n  };\n};\nexport const cancelRedirect = () => {\n  return {\n    type: 'CANCEL_REDIRECT'\n  };\n};","map":{"version":3,"sources":["/Users/Flora/myapp/src/redux/action-creators/index.js"],"names":["axios","createUserStart","type","createUserFail","error","createUserSuccess","user","createUser","dispatch","method","url","data","then","response","newUser","catch","editUserStart","editUserFail","editUserSuccess","id","editUser","put","getUsers","deleteUserStart","deleteUserFail","deleteUserSuccess","deleteUser","delete","console","log","getUserStart","getUserFail","getUserSuccess","get","redirect","cancelRedirect"],"mappings":"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","sourcesContent":["import axios from 'axios';\n// Create User\nconst createUserStart = () => {\n  return {\n    type: 'CREATE_USER_START'\n  };  \n};\nconst createUserFail = (error) => {\n  return {\n    type:'CREATE_USER_FAIL',\n    error\n  };\n};\n\nconst createUserSuccess = (user) => {\n  return {\n    type:'CREATE_USER_SUCCESS',\n    user\n  }\n};\n\n \nexport const createUser = (user) => {\n  return (dispatch) => {\n    dispatch(createUserStart());\n    axios({\n      method: 'POST',\n      url: 'http://localhost:8080/api/users',\n      data: user\n    })\n      .then(response => {\n        dispatch(createUserSuccess(response.newUser));\n      })\n      .catch(error => {\n        dispatch(createUserFail(error));\n      });\n  };\n};\n\n// Edit User\nconst editUserStart = () => {\n  return {\n    type: 'EDIT_USER_START'\n  };\n};\n\nconst editUserFail = (error) => {\n  return {\n    type: 'EDIT_USER_ERROR',\n    error\n  };\n};\n\nconst editUserSuccess = (id) => {\n  return {\n    type: 'EDIT_USER_SUCCESS',\n    id\n  };\n}\n\nexport const editUser = (id, editUser) => {\n  return (dispatch) => {\n    dispatch(editUserStart());\n    axios\n      .put(`http://localhost:8080/api/users/${id}`, editUser)\n      .then(response => {\n        dispatch(editUserSuccess(id));\n        dispatch(getUsers());\n      })\n      .catch(error => {\n        dispatch(editUserFail(error));\n      });\n  };\n};\n\n// Delete User\nconst deleteUserStart = () => {\n  return {\n    type: 'DELETE_USER_START'\n  };\n};\n\nconst deleteUserFail = (error) => {\n  return {\n    type: 'DELETE_USER_ERROR',\n    error\n  };\n};\n\nconst deleteUserSuccess = (id) => {\n  return {\n    type: 'DELETE_USER_SUCCESS',\n    id\n  };\n}\n\nexport const deleteUser = (id, deleteUser) => {\n  return (dispatch) => {\n    dispatch(deleteUserStart());\n    axios\n      .delete(`http://localhost:8080/api/users/${id}`, deleteUser)\n      .then(response => {\n        dispatch(deleteUserSuccess(id));\n        dispatch(getUsers());\n        console.log('delete user success');\n      })\n      .catch(error => {\n        dispatch(deleteUserFail(error));\n      });\n  };\n};\n\n// Get Userlist\nconst getUserStart = () => {\n  return {\n    type: 'GET_USER_START'\n  };\n};\n\nconst getUserFail = (error) => {\n  return {\n    type: 'GET_USER_ERROR',\n    error\n  };\n};\n\nconst getUserSuccess = (response) => {\n  return {\n    type: 'GET_USER_SUCCESS',\n    data: response\n  };\n}\n\nexport const getUsers = () => {\n  return (dispatch) => {\n    dispatch(getUserStart());\n    axios\n      .get('http://localhost:8080/api/users', getUsers)\n      .then(response => {\n        dispatch(getUserSuccess(response.data));\n      })\n      .catch(error => {\n        dispatch(getUserFail(error));\n      });\n  };\n};\n\n// Redirect\nexport const redirect = () => {\n  return {\n    type: 'REDIRECT'\n  };\n};\n\nexport const cancelRedirect = () => {\n  return {\n    type: 'CANCEL_REDIRECT'\n  };\n};\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}