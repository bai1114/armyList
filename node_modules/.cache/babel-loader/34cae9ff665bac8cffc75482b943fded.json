{"ast":null,"code":"import axios from 'axios'; // Fetch Page\n\nconst fetchSoldiersStart = () => {\n  return {\n    type: 'FETCH_SOLDIERS_START'\n  };\n};\n\nconst fetchSoldiersSuccess = soldiers => {\n  return {\n    type: 'FETCH_SOLDIERS_SUCCESS',\n    soldiers\n  };\n};\n\nconst fetchSoldiersFail = err => {\n  return {\n    type: 'FETCH_SOLDIERS_FAIL',\n    err\n  };\n};\n\nexport const fetchSoldiers = () => {\n  return dispatch => {\n    dispatch(fetchSoldiersStart());\n    axios.get('http://localhost:5000/api/range/0/10').then(response => {\n      // console.log('!!!soldiers',response.data.soldiers);\n      dispatch(fetchSoldiersSuccess(response.data.soldiers));\n    }).catch(err => {\n      dispatch(fetchSoldiersFail(err));\n    });\n  };\n}; // add range\n\nconst addRangeSoldiersStart = () => {\n  return {\n    type: 'ADD_RANGE_SOLDIERS_START'\n  };\n};\n\nconst addRangeSoldiersSuccess = (soldiers, hasMore) => {\n  return {\n    type: 'ADD_RANGE_SOLDIERS_SUCCESS',\n    soldiers,\n    hasMore\n  };\n};\n\nconst addRangeSoldiersFail = err => {\n  return {\n    type: 'ADD_RANGE_SOLDIERS_FAIL',\n    err\n  };\n};\n\nexport const addRangeSoldiers = (offset, limit) => {\n  return dispatch => {\n    dispatch(addRangeSoldiersStart());\n    axios({\n      method: 'get',\n      url: \"http://localhost:5000/api/range/\".concat(offset, \"/\").concat(limit)\n    }).then(response => {\n      const soldiers = response.data.soldiers;\n      const hasMore = soldiers.length >= limit; // console.log('add range soldiers', soldiers);\n      // console.log('add range hasmore', hasMore);\n\n      dispatch(addRangeSoldiersSuccess(soldiers, hasMore));\n    }).catch(err => {\n      dispatch(addRangeSoldiersFail(err));\n    });\n  };\n}; // load\n\nexport const reload = () => {\n  return dispatch => {\n    dispatch(fetchSoldiersStart());\n    axios({\n      method: 'get',\n      url: 'http://localhost:5000/api/'\n    }).then(response => {\n      dispatch(fetchSoldiersSuccess(response.data.soldiers));\n    }) // .then(res => {\n    //   dispatch(sortEmployees(\"\", true));\n    // })\n    .catch(err => {\n      dispatch(fetchSoldiersFail(err));\n    });\n  };\n}; // Fetch Sub Page\n\nconst fetchDirectSubsStart = () => {\n  return {\n    type: 'FETCH_DIRECT_SUBS_START'\n  };\n};\n\nconst fetchDirectSubsSuccess = directSubs => {\n  return {\n    type: 'FETCH_DIRECT_SUBS_SUCCESS',\n    directSubs\n  };\n};\n\nconst fetchDirectSubsFail = err => {\n  return {\n    type: 'FETCH_DIRECT_SUBS_FAIL',\n    err\n  };\n};\n\nexport const fetchDirectSubs = _id => {\n  return dispatch => {\n    dispatch(fetchDirectSubsStart());\n    axios({\n      method: 'get',\n      url: \"http://localhost:5000/api/\".concat(_id, \"/directSubs\")\n    }).then(response => {\n      dispatch(fetchDirectSubsSuccess(response.data.directSubs));\n    }).catch(err => {\n      dispatch(fetchDirectSubsFail(err));\n    });\n  };\n}; // Fetch Sup Page\n\nconst fetchSupStart = () => {\n  return {\n    type: 'FETCH_SUP_START'\n  };\n};\n\nconst fetchSupSuccess = soldier => {\n  return {\n    type: 'FETCH_SUP_SUCCESS',\n    soldier\n  };\n};\n\nconst fetchSupFail = err => {\n  return {\n    type: 'FETCH_SUP_FAIL',\n    err\n  };\n};\n\nexport const fetchSup = _id => {\n  return dispatch => {\n    dispatch(fetchSupStart());\n    axios({\n      method: 'get',\n      url: \"http://localhost:5000/api/\".concat(_id)\n    }).then(response => {\n      dispatch(fetchSupSuccess(response.data.soldier)); // console.log('fetch soldier response.data', response.data.soldier);\n    }).catch(err => {\n      dispatch(fetchSupFail(err));\n    });\n  };\n}; // Create User\n\nconst createSoldierStart = () => {\n  return {\n    type: 'CREATE_SOLDIER_START'\n  };\n};\n\nconst createSoldierFail = error => {\n  return {\n    type: 'CREATE_SOLDIER_FAIL',\n    error\n  };\n};\n\nconst createSoldierSuccess = newSoldier => {\n  return {\n    type: 'CREATE_SOLDIER_SUCCESS',\n    newSoldier\n  };\n};\n\nexport const createSoldier = soldier => {\n  return dispatch => {\n    dispatch(createSoldierStart());\n    axios({\n      method: 'POST',\n      url: 'http://localhost:5000/api/create',\n      data: soldier\n    }).then(response => {\n      // console.log('response.data.soldier', response.data.soldier);\n      dispatch(createSoldierSuccess(response.data.soldier));\n    }).then(response => {\n      dispatch(reload());\n    }).catch(error => {\n      dispatch(createSoldierFail(error));\n    });\n  };\n}; // Edit User\n\nconst editSoldierStart = () => {\n  return {\n    type: 'EDIT_SOLDIER_START'\n  };\n};\n\nconst editSoldierFail = error => {\n  return {\n    type: 'EDIT_SOLDIER_ERROR',\n    error\n  };\n};\n\nconst editSoldierSuccess = (id, soldier) => {\n  return {\n    type: 'EDIT_SOLDIER_SUCCESS',\n    id,\n    soldier\n  };\n};\n\nexport const editSoldier = (id, soldier) => {\n  return dispatch => {\n    dispatch(editSoldierStart()); // console.log('id', id);\n\n    axios({\n      method: 'put',\n      url: \"http://localhost:5000/api/edit/\".concat(id),\n      data: soldier\n    }).then(response => {\n      dispatch(editSoldierSuccess(id, response.data.soldier));\n      dispatch(fetchSoldiers());\n    }) // .then(response => {\n    //   dispatch(reload());  \n    // })\n    .catch(error => {\n      dispatch(editSoldierFail(error));\n    });\n  };\n}; // Delete User\n\nconst deleteSoldierStart = () => {\n  return {\n    type: 'DELETE_SOLDIER_START'\n  };\n};\n\nconst deleteSoldierFail = error => {\n  return {\n    type: 'DELETE_SOLDIER_ERROR',\n    error\n  };\n};\n\nconst deleteSoldierSuccess = id => {\n  return {\n    type: 'DELETE_SOLDIER_SUCCESS',\n    id\n  };\n};\n\nexport const deleteSoldier = id => {\n  return dispatch => {\n    dispatch(deleteSoldierStart()); // console.log('delete id is ', id);\n\n    axios.delete(\"http://localhost:5000/api/delete/\".concat(id)).then(response => {\n      dispatch(deleteSoldierSuccess(id)); // console.log('delete soldier success');\n    }).then(response => {\n      dispatch(reload());\n    }).catch(error => {\n      dispatch(deleteSoldierFail(error));\n    });\n  };\n}; // Upload Image\n\nconst uploadImageStart = () => {\n  return {\n    type: 'UPLOAD_IMAGE_START'\n  };\n};\n\nconst uploadImageSuccess = (image, filename, imgUrl) => {\n  return {\n    type: 'UPLOAD_IMAGE_SUCCESS',\n    image,\n    filename,\n    imgUrl\n  };\n};\n\nconst uploadImageFail = err => {\n  return {\n    type: 'UPLOAD_IMAGE_FAIL',\n    err\n  };\n};\n\nexport const uploadImage = (image, filename) => {\n  let data = new FormData();\n  data.append('image', image);\n  data.append('filename', filename);\n  let formData = new FormData();\n  formData.append('username', 'Chris');\n  console.log('formdata', formData.get('username'));\n  console.log('data', data);\n  console.log('image', image);\n  return dispatch => {\n    dispatch(uploadImageStart());\n    axios({\n      method: 'post',\n      url: 'http://localhost:5000/api/image',\n      data: data\n    }).then(response => {\n      dispatch(uploadImageSuccess(image, filename, response.data.imgUrl));\n      console.log('response:', response.data);\n    }).catch(err => {\n      dispatch(uploadImageFail(err));\n    });\n  };\n};\nexport const sortSoldiers = (key, keep) => {\n  return {\n    type: 'SORT_SOLDIERS',\n    key,\n    keep\n  };\n}; // Sort\n// export const sortUsers = key => {\n//   return {\n//     type: 'SORT_USERS',\n//     key\n//   };\n// };\n// Search\n// const searchStart = () => {\n//   return {\n//     type: 'SEARCH_START'\n//   };\n// };\n// const searchSuccess = (users) => {\n//   return {\n//     type: 'SEARCH_SUCCESS',\n//     users,\n//   };\n// };\n// const searchFail = error => {\n//   return {\n//     type: 'SEARCH_FAIL',\n//     error\n//   };\n// };\n// export const search = (keyword) => {\n//   return (dispatch) => {\n//     dispatch(searchStart());\n//     axios\n//       .get(`http://localhost:8080/api/search/${keyword}`)\n//       .then(response => {\n//         console.log(`keyword is ${keyword}`);\n//         dispatch(searchSuccess(response.data));\n//       })\n//       .catch(error => {\n//         dispatch(searchFail(error));\n//       });\n//   }\n// }\n// export const changeSearchInput = (input) => {\n//   return {\n//     type: 'CHANGE_SEARCH_INPUT',\n//     input\n//   };\n// };","map":{"version":3,"sources":["/Users/Flora/myapp/src/redux/action-creators/index.js"],"names":["axios","fetchSoldiersStart","type","fetchSoldiersSuccess","soldiers","fetchSoldiersFail","err","fetchSoldiers","dispatch","get","then","response","data","catch","addRangeSoldiersStart","addRangeSoldiersSuccess","hasMore","addRangeSoldiersFail","addRangeSoldiers","offset","limit","method","url","length","reload","fetchDirectSubsStart","fetchDirectSubsSuccess","directSubs","fetchDirectSubsFail","fetchDirectSubs","_id","fetchSupStart","fetchSupSuccess","soldier","fetchSupFail","fetchSup","createSoldierStart","createSoldierFail","error","createSoldierSuccess","newSoldier","createSoldier","editSoldierStart","editSoldierFail","editSoldierSuccess","id","editSoldier","deleteSoldierStart","deleteSoldierFail","deleteSoldierSuccess","deleteSoldier","delete","uploadImageStart","uploadImageSuccess","image","filename","imgUrl","uploadImageFail","uploadImage","FormData","append","formData","console","log","sortSoldiers","key","keep"],"mappings":"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","sourcesContent":["import axios from 'axios';\n// Fetch Page\nconst fetchSoldiersStart = () => {\n  return {\n    type: 'FETCH_SOLDIERS_START'\n  };\n};\n\nconst fetchSoldiersSuccess = (soldiers) => {\n  return {\n    type: 'FETCH_SOLDIERS_SUCCESS',\n    soldiers\n  };\n};\n\nconst fetchSoldiersFail = err => {\n  return {\n    type: 'FETCH_SOLDIERS_FAIL',\n    err\n  };\n};\n\nexport const fetchSoldiers = () => {\n  return (dispatch) => {\n    dispatch(fetchSoldiersStart());\n    axios\n      .get('http://localhost:5000/api/range/0/10')\n      .then(response => {\n        // console.log('!!!soldiers',response.data.soldiers);\n        dispatch(fetchSoldiersSuccess(response.data.soldiers));\n      })\n      .catch(err => {\n        dispatch(fetchSoldiersFail(err));\n      });\n  }\n}\n\n// add range\nconst addRangeSoldiersStart = () => {\n  return {\n    type: 'ADD_RANGE_SOLDIERS_START'\n  };\n};\n\nconst addRangeSoldiersSuccess = (soldiers, hasMore) => {\n  return {\n    type: 'ADD_RANGE_SOLDIERS_SUCCESS',\n    soldiers,\n    hasMore\n  };\n};\n\nconst addRangeSoldiersFail = err => {\n  return {\n    type: 'ADD_RANGE_SOLDIERS_FAIL',\n    err\n  };\n};\n\nexport const addRangeSoldiers = (offset, limit) => {\n  return dispatch => {\n    dispatch(addRangeSoldiersStart());\n    axios({\n      method: 'get',\n      url: `http://localhost:5000/api/range/${offset}/${limit}`\n    })\n      .then(response => {\n        const soldiers = response.data.soldiers;\n        const hasMore = soldiers.length >= limit;\n        // console.log('add range soldiers', soldiers);\n        // console.log('add range hasmore', hasMore);\n        dispatch(addRangeSoldiersSuccess(soldiers, hasMore));\n      })\n      .catch(err => {\n        dispatch(addRangeSoldiersFail(err));\n      });\n  };\n};\n\n// load\nexport const reload = () => {\n  return (dispatch) => {\n    dispatch(fetchSoldiersStart());\n    axios({\n      method: 'get',\n      url: 'http://localhost:5000/api/'\n    })\n      .then(response => {\n        dispatch(fetchSoldiersSuccess(response.data.soldiers));\n      })\n      // .then(res => {\n      //   dispatch(sortEmployees(\"\", true));\n      // })\n      .catch(err => {\n        dispatch(fetchSoldiersFail(err));\n      });\n  }\n};\n\n\n\n// Fetch Sub Page\nconst fetchDirectSubsStart = () => {\n  return {\n    type: 'FETCH_DIRECT_SUBS_START'\n  };\n};\n\nconst fetchDirectSubsSuccess = directSubs => {\n  return {\n    type: 'FETCH_DIRECT_SUBS_SUCCESS',\n    directSubs\n  };\n};\n\nconst fetchDirectSubsFail = err => {\n  return {\n    type: 'FETCH_DIRECT_SUBS_FAIL',\n    err\n  };\n};\n\nexport const fetchDirectSubs = _id => {\n  return (dispatch) => {\n    dispatch(fetchDirectSubsStart());\n    axios({\n      method: 'get',\n      url: `http://localhost:5000/api/${_id}/directSubs`\n    })\n      .then(response => {\n        dispatch(fetchDirectSubsSuccess(response.data.directSubs));\n      })\n      .catch(err => {\n        dispatch(fetchDirectSubsFail(err));\n      });\n  };\n};\n\n\n// Fetch Sup Page\nconst fetchSupStart = () => {\n  return {\n    type: 'FETCH_SUP_START'\n  };\n};\n\nconst fetchSupSuccess = soldier => {\n  return {\n    type: 'FETCH_SUP_SUCCESS',\n    soldier\n  };\n};\n\nconst fetchSupFail = err => {\n  return {\n    type: 'FETCH_SUP_FAIL',\n    err\n  };\n};\n\nexport const fetchSup = _id => {\n  return (dispatch) => {\n    dispatch(fetchSupStart());\n    axios({\n      method: 'get',\n      url: `http://localhost:5000/api/${_id}`\n    })\n      .then(response => {\n        dispatch(fetchSupSuccess(response.data.soldier));\n        // console.log('fetch soldier response.data', response.data.soldier);\n      })\n      .catch(err => {\n        dispatch(fetchSupFail(err));\n      });\n  };\n};\n\n\n// Create User\nconst createSoldierStart = () => {\n  return {\n    type: 'CREATE_SOLDIER_START'\n  };  \n};\nconst createSoldierFail = (error) => {\n  return {\n    type:'CREATE_SOLDIER_FAIL',\n    error\n  };\n};\n\nconst createSoldierSuccess = (newSoldier) => {\n  return {\n    type:'CREATE_SOLDIER_SUCCESS',\n    newSoldier\n  }\n};\n\n \nexport const createSoldier = (soldier) => {\n  return (dispatch) => {\n    dispatch(createSoldierStart());\n    axios({\n      method: 'POST',\n      url: 'http://localhost:5000/api/create',\n      data: soldier\n    })\n      .then(response => {\n        // console.log('response.data.soldier', response.data.soldier);\n        dispatch(createSoldierSuccess(response.data.soldier));\n      })\n      .then(response => {\n        dispatch(reload());  \n      })\n      .catch(error => {\n        dispatch(createSoldierFail(error));\n      });\n  };\n};\n\n// Edit User\nconst editSoldierStart = () => {\n  return {\n    type: 'EDIT_SOLDIER_START'\n  };\n};\n\nconst editSoldierFail = (error) => {\n  return {\n    type: 'EDIT_SOLDIER_ERROR',\n    error\n  };\n};\n\nconst editSoldierSuccess = (id, soldier) => {\n  return {\n    type: 'EDIT_SOLDIER_SUCCESS',\n    id,\n    soldier\n  };\n};\n\nexport const editSoldier = (id, soldier) => {\n  return (dispatch) => {\n    dispatch(editSoldierStart());\n    // console.log('id', id);\n    axios({\n      method: 'put',\n      url: `http://localhost:5000/api/edit/${id}`,\n      data: soldier\n    })\n      .then(response => {\n        dispatch(editSoldierSuccess(id, response.data.soldier));\n        dispatch(fetchSoldiers());\n      })\n      // .then(response => {\n      //   dispatch(reload());  \n      // })\n      .catch(error => {\n        dispatch(editSoldierFail(error));\n      });\n   };\n};\n\n// Delete User\nconst deleteSoldierStart = () => {\n  return {\n    type: 'DELETE_SOLDIER_START'\n  };\n};\n\nconst deleteSoldierFail = (error) => {\n  return {\n    type: 'DELETE_SOLDIER_ERROR',\n    error\n  };\n};\n\nconst deleteSoldierSuccess = (id) => {\n  return {\n    type: 'DELETE_SOLDIER_SUCCESS',\n    id\n  };\n};\n\nexport const deleteSoldier = (id) => {\n  return (dispatch) => {\n    dispatch(deleteSoldierStart());\n    // console.log('delete id is ', id);\n    axios\n      .delete(`http://localhost:5000/api/delete/${id}`)\n      .then(response => {\n        dispatch(deleteSoldierSuccess(id));\n        // console.log('delete soldier success');\n      })\n      .then(response => {\n        dispatch(reload());  \n      })\n      .catch(error => {\n        dispatch(deleteSoldierFail(error));\n      });\n  };\n};\n\n\n// Upload Image\nconst uploadImageStart = () => {\n  return {\n    type: 'UPLOAD_IMAGE_START'\n  };\n};\n\nconst uploadImageSuccess = (image, filename, imgUrl) => {\n  return {\n    type: 'UPLOAD_IMAGE_SUCCESS',\n    image,\n    filename,\n    imgUrl\n  };\n};\n\nconst uploadImageFail= err => {\n  return {\n    type: 'UPLOAD_IMAGE_FAIL',\n    err\n  };\n};\n\nexport const uploadImage = (image, filename) => {\n  let data = new FormData();\n  data.append('image', image);\n  data.append('filename', filename);\n\n  let formData = new FormData();\n  formData.append('username', 'Chris');\n  console.log('formdata', formData.get('username'));\n\n  console.log('data', data);\n  console.log('image', image);\n  return (dispatch) => {\n    dispatch(uploadImageStart());\n    axios({\n      method: 'post',\n      url: 'http://localhost:5000/api/image',\n      data: data\n    })\n      .then(response => {\n        dispatch(uploadImageSuccess(image, filename, response.data.imgUrl));\n        console.log('response:', response.data);\n      })\n      .catch(err => {\n        dispatch(uploadImageFail(err));\n      });\n  }\n};\nexport const sortSoldiers = (key,keep) => {\n  return {\n    type: 'SORT_SOLDIERS',\n    key,\n    keep,\n  };\n};\n\n// Sort\n// export const sortUsers = key => {\n//   return {\n//     type: 'SORT_USERS',\n//     key\n//   };\n// };\n\n\n// Search\n// const searchStart = () => {\n//   return {\n//     type: 'SEARCH_START'\n//   };\n// };\n\n// const searchSuccess = (users) => {\n//   return {\n//     type: 'SEARCH_SUCCESS',\n//     users,\n//   };\n// };\n\n// const searchFail = error => {\n//   return {\n//     type: 'SEARCH_FAIL',\n//     error\n//   };\n// };\n\n// export const search = (keyword) => {\n//   return (dispatch) => {\n//     dispatch(searchStart());\n//     axios\n//       .get(`http://localhost:8080/api/search/${keyword}`)\n//       .then(response => {\n//         console.log(`keyword is ${keyword}`);\n//         dispatch(searchSuccess(response.data));\n//       })\n//       .catch(error => {\n//         dispatch(searchFail(error));\n//       });\n//   }\n// }\n\n// export const changeSearchInput = (input) => {\n//   return {\n//     type: 'CHANGE_SEARCH_INPUT',\n//     input\n//   };\n// };\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}