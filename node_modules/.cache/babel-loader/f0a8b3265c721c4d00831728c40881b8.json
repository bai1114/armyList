{"ast":null,"code":"import _objectSpread from \"/Users/Flora/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nconst initState = {\n  isLoading: false,\n  users: [],\n  err: null,\n  isSearching: false\n};\n\nconst getUsers = (state = initState, action) => {\n  switch (action.type) {\n    // Get UserList \n    case 'GET_USERS_START':\n      return _objectSpread({}, state, {\n        isLoading: true,\n        err: null\n      });\n\n    case 'GET_USERS_FAIL':\n      return _objectSpread({}, state, {\n        isLoading: false,\n        err: action.error\n      });\n\n    case 'GET_USERS_SUCCESS':\n      return _objectSpread({}, state, {\n        isLoading: false,\n        err: null,\n        users: action.data\n      });\n    // Delete User\n\n    case 'DELETE_USER_START':\n      return _objectSpread({}, state, {\n        isLoading: true\n      });\n\n    case 'DELETE_USER_ERROR':\n      return _objectSpread({}, state, {\n        isLoading: false,\n        err: action.error\n      });\n\n    case 'DELETE_USER_SUCCESS':\n      return _objectSpread({}, state, {\n        users: state.users.filter(user => user._id !== action.id),\n        isLoading: false,\n        err: null\n      });\n    // Create New User \n\n    case 'CREATE_USER_START':\n      return _objectSpread({}, state, {\n        isLoading: true,\n        err: null\n      });\n\n    case 'CREATE_USER_FAIL':\n      return _objectSpread({}, state, {\n        isLoading: false,\n        err: action.error\n      });\n\n    case 'CREATE_USER_SUCCESS':\n      const newUsers = state.users;\n      newUsers.push(action.user);\n      return _objectSpread({}, state, {\n        isLoading: false,\n        err: null,\n        users: newUsers\n      });\n    // Edit User \n\n    case 'EDIT_USER_START':\n      return _objectSpread({}, state, {\n        isLoading: true\n      });\n\n    case 'EDIT_USER_ERROR':\n      return _objectSpread({}, state, {\n        isLoading: false,\n        err: action.error\n      });\n\n    case 'EDIT_USER_SUCCESS':\n      let newUser = state.users.map(user => {\n        if (user._id === action.id) {\n          return action.user;\n        } else {\n          return user;\n        }\n      });\n      return _objectSpread({}, state, {\n        isLoading: false,\n        // err: null,\n        users: newUser\n      });\n    // Sort Users\n\n    case 'SORT_USERS':\n      {\n        const sortedUsers = [...state.users]; //user -- page of users pagination之后需要改\n\n        const key = action.key;\n        sortedUsers.sort((user1, user2) => {\n          if (user1[key] === user2[key]) {\n            return 0;\n          }\n\n          return user1[key] < user2[key] ? -1 : 1;\n        }); //做完search之后需要加的\n        // const newSearch = [...state.searchUsers]; \n        // newUsers.sort((user1, user2) => {\n        //   if (user1[key] === user2[key]) {\n        //     return 0;\n        //   }\n        //   return user1[key] < user2[key] ? -1 : 1;\n        // });\n\n        return _objectSpread({}, state, {\n          users: sortedUsers //pageOfUsers: newUsers,\n          //searchUsers : newSearch\n\n        });\n      }\n\n    case 'SEARCH_START':\n      {\n        return _objectSpread({}, state, {\n          isLoading: true\n        });\n      }\n\n    case 'SEARCH_SUCCESS':\n      {\n        return _objectSpread({}, state, {\n          searchUsers: action.users,\n          isSearching: true,\n          isFetching: false\n        });\n      }\n\n    case 'SEARCH_FAIL':\n      {\n        return _objectSpread({}, state, {\n          isLoading: false,\n          isSearching: false,\n          err: action.error\n        });\n      }\n\n    case 'BACK_TO_HOME':\n      {\n        return _objectSpread({}, state, {\n          searchedUser: [],\n          isSearching: false\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default getUsers; // case 'GET_USER_START':\n//   return {\n//     ...state,\n//     isLoading: true\n//   };\n// case 'GET_USER_ERROR':\n//   return {\n//     ...state,\n//     isLoading: false,\n//     err: action.error\n//   };\n// case 'GET_USER_SUCCESS':\n//   return {\n//     ...state,\n//     users: state.users.filter(user => user._id === action.id),\n//     isLoading:false,\n//     err: null,\n//   };","map":{"version":3,"sources":["/Users/Flora/myapp/src/redux/reducer/getUsers.js"],"names":["initState","isLoading","users","err","isSearching","getUsers","state","action","type","error","data","filter","user","_id","id","newUsers","push","newUser","map","sortedUsers","key","sort","user1","user2","searchUsers","isFetching","searchedUser"],"mappings":"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","sourcesContent":["const initState = {\n  isLoading: false,\n  users:[],\n  err: null,\n  isSearching: false\n};\n\nconst getUsers = (state = initState, action) => {\n  switch(action.type) {\n    // Get UserList \n    case 'GET_USERS_START':\n      return {\n        ...state,\n        isLoading: true,\n        err: null\n      };\n    case 'GET_USERS_FAIL':\n      return {\n        ...state,\n        isLoading: false,\n        err: action.error\n      };\n    case 'GET_USERS_SUCCESS':\n      return {\n        ...state,\n        isLoading: false,\n        err: null,\n        users: action.data\n      };\n    \n    // Delete User\n    case 'DELETE_USER_START':\n      return {\n        ...state,\n        isLoading: true\n      };\n    case 'DELETE_USER_ERROR':\n      return {\n        ...state,\n        isLoading: false,\n        err: action.error\n      };\n    case 'DELETE_USER_SUCCESS':\n      return {\n        ...state,\n        users: state.users.filter(user => user._id !== action.id),\n        isLoading:false,\n        err: null,\n      };\n    \n    // Create New User \n    case 'CREATE_USER_START':\n      return {\n        ...state,\n        isLoading: true,\n        err: null\n      };\n    case 'CREATE_USER_FAIL':\n      return {\n        ...state,\n        isLoading: false,\n        err: action.error\n      };\n    case 'CREATE_USER_SUCCESS':\n      const newUsers = state.users;\n      newUsers.push(action.user);\n      return {\n        ...state,\n        isLoading: false,\n        err: null,\n        users: newUsers\n      };\n    \n    // Edit User \n    case 'EDIT_USER_START':\n      return {\n        ...state,\n        isLoading: true\n      };\n    case 'EDIT_USER_ERROR':\n      return {\n        ...state,\n        isLoading: false,\n        err: action.error\n      };\n    case 'EDIT_USER_SUCCESS':\n      let newUser = state.users.map(user => {\n        if (user._id === action.id) {\n          return action.user;\n        } else {\n          return user;\n        }\n      });\n      return {\n        ...state,\n        isLoading: false,\n        // err: null,\n        users: newUser\n      };\n    \n    // Sort Users\n    case 'SORT_USERS': {\n      const sortedUsers = [...state.users]; //user -- page of users pagination之后需要改\n      const key = action.key;\n      sortedUsers.sort((user1, user2) => {\n        if (user1[key] === user2[key]) {\n          return 0;\n        }\n        return user1[key] < user2[key] ? -1 : 1;\n      });\n      //做完search之后需要加的\n      // const newSearch = [...state.searchUsers]; \n      // newUsers.sort((user1, user2) => {\n      //   if (user1[key] === user2[key]) {\n      //     return 0;\n      //   }\n      //   return user1[key] < user2[key] ? -1 : 1;\n      // });\n      return {\n        ...state,\n        users: sortedUsers\n        //pageOfUsers: newUsers,\n        //searchUsers : newSearch\n      };\n    }\n\n    case 'SEARCH_START' : {\n      return {\n        ...state,\n        isLoading: true,\n      }\n    }\n    case 'SEARCH_SUCCESS' : {\n      return {\n          ...state,\n          searchUsers : action.users,\n          isSearching :true,\n          isFetching: false,\n      }\n    }\n    case 'SEARCH_FAIL' : {\n      return {\n        ...state,\n        isLoading: false,\n        isSearching: false,\n        err: action.error\n      }\n    }\n    case 'BACK_TO_HOME' : {\n      \n      return{\n        ...state,\n        searchedUser : [],\n        isSearching : false,\n      }\n      \n    }\n\n    default:\n      return state;\n  }\n}\n\nexport default getUsers;\n\n\n  // case 'GET_USER_START':\n    //   return {\n    //     ...state,\n    //     isLoading: true\n    //   };\n    // case 'GET_USER_ERROR':\n    //   return {\n    //     ...state,\n    //     isLoading: false,\n    //     err: action.error\n    //   };\n    // case 'GET_USER_SUCCESS':\n    //   return {\n    //     ...state,\n    //     users: state.users.filter(user => user._id === action.id),\n    //     isLoading:false,\n    //     err: null,\n    //   };"]},"metadata":{},"sourceType":"module"}