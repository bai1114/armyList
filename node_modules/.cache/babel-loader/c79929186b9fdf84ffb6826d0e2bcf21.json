{"ast":null,"code":"var _jsxFileName = \"/Users/Flora/myapp/src/containers/Pagination/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPage, setStatusCurPage, resetRedirect } from '../../redux/action-creators';\n\nclass Pagination extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setCurPage = curPage => {\n      //const { dispatch } = this.props;\n      // this.props.getCount();\n      this.props.fetchPage(curPage, 5); // this.props.setStatusCurPage(curPage);\n      // dispatch(fetchPage(curPage, 5));\n      // dispatch(setStatusCurPage(curPage));\n\n      const pageSize = this.props.page.pageSize.pageSize;\n      const count = this.props.page.count.count;\n      const pageNumber = [];\n      const totalPages = Math.ceil(count / pageSize);\n      let startPage = 1,\n          endPage = totalPages;\n\n      for (let i = startPage; i <= endPage; i++) {\n        pageNumber.push(i);\n      }\n\n      this.setState({\n        pageNumber\n      });\n    };\n\n    this.state = {\n      pageNumber: []\n    };\n  } // componentDidMount() {\n  //   this.setCurPage(1);\n  //   this.props.resetRedirect();\n  // }\n  //一会加上\n\n\n  componentDidUpdate(prevProps) {\n    if (this.props.page.count !== prevProps.page.count) {\n      this.setCurPage(this.props.status.curPage);\n    }\n  }\n\n  render() {\n    const pageProp = this.props.page;\n    const pageNumber = this.state.pageNumber;\n    const count = pageProp.count.count;\n    const pageSize = pageProp.pageSize.pageSize;\n    const totalPages = Math.ceil(count / pageSize);\n    return React.createElement(\"ul\", {\n      className: \"pagination\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"page-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, pageProp.curPage === 1 ? '' : React.createElement(\"a\", {\n      className: \"page-link\",\n      onClick: () => this.setCurPage(pageProp.curPage - 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Previous\")), pageNumber.map(page => {\n      return React.createElement(\"li\", {\n        key: page,\n        className: \"page-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: () => this.setCurPage(page),\n        className: \"page-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, page));\n    }), React.createElement(\"li\", {\n      className: \"page-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, pageProp.curPage === totalPages ? '' : React.createElement(\"a\", {\n      onClick: () => this.setCurPage(pageProp.curPage + 1),\n      className: \"page-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Next\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    page: state.getUsers,\n    status: state.status\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    resetRedirect: () => {\n      dispatch(resetRedirect());\n    },\n    // getCount: () => {\n    //   dispatch(getCount());\n    // },\n    fetchPage: (page, size) => {\n      dispatch(fetchPage(page, size));\n    },\n    setStatusCurPage: page => {\n      dispatch(setStatusCurPage(page));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pagination);","map":{"version":3,"sources":["/Users/Flora/myapp/src/containers/Pagination/index.js"],"names":["React","Component","connect","fetchPage","setStatusCurPage","resetRedirect","Pagination","constructor","props","setCurPage","curPage","pageSize","page","count","pageNumber","totalPages","Math","ceil","startPage","endPage","i","push","setState","state","componentDidUpdate","prevProps","status","render","pageProp","map","mapStateToProps","getUsers","mapDispatchToProps","dispatch","size"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPage, setStatusCurPage, resetRedirect } from '../../redux/action-creators';\n\nclass Pagination extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pageNumber: []\n    };\n  }\n\n  // componentDidMount() {\n  //   this.setCurPage(1);\n  //   this.props.resetRedirect();\n  // }\n\n  //一会加上\n  componentDidUpdate(prevProps) {\n    if (this.props.page.count !== prevProps.page.count) {\n      this.setCurPage(this.props.status.curPage);\n    }\n  }\n\n  setCurPage = curPage => {\n    //const { dispatch } = this.props;\n    // this.props.getCount();\n    this.props.fetchPage(curPage, 5);\n    // this.props.setStatusCurPage(curPage);\n    // dispatch(fetchPage(curPage, 5));\n    // dispatch(setStatusCurPage(curPage));\n    const { pageSize } = this.props.page.pageSize;\n    const { count } = this.props.page.count;\n    const pageNumber = [];\n    \n    const totalPages = Math.ceil(count / pageSize);\n    let startPage = 1, endPage = totalPages;\n    for (let i = startPage; i <= endPage; i++) {\n      pageNumber.push(i);\n    }\n    this.setState({ pageNumber });\n  };\n\n\n\n  render() {\n    const pageProp = this.props.page;\n    const pageNumber = this.state.pageNumber;\n    const { count } = pageProp.count;\n    const { pageSize } = pageProp.pageSize;\n    const totalPages = Math.ceil(count / pageSize);\n    return (\n      <ul className=\"pagination\">\n        <li className=\"page-item\">\n          {pageProp.curPage === 1 ? '' : <a className=\"page-link\" onClick={() => this.setCurPage(pageProp.curPage - 1)} >Previous</a>}\n        </li>\n        {pageNumber.map(page => {\n          return (\n            <li key={page} className=\"page-item\">\n              <a onClick={() => this.setCurPage(page)} className=\"page-link\">{page}</a>\n            </li>\n          );\n        })}\n        <li className=\"page-item\">\n          {pageProp.curPage === totalPages ? '' : <a onClick={() => this.setCurPage(pageProp.curPage + 1)} className=\"page-link\" >Next</a>}\n        </li>\n      </ul>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    page: state.getUsers,\n    status: state.status\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    resetRedirect: () => {\n      dispatch(resetRedirect());\n    },\n    // getCount: () => {\n    //   dispatch(getCount());\n    // },\n    fetchPage: (page, size) => {\n      dispatch(fetchPage(page, size));\n    },\n    setStatusCurPage: (page) => {\n      dispatch(setStatusCurPage(page));\n    }\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pagination);"]},"metadata":{},"sourceType":"module"}