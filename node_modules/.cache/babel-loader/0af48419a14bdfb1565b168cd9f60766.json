{"ast":null,"code":"var _jsxFileName = \"/Users/Flora/myapp/src/components/App/index.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getAllUsers } from \"../../redux/action-creators\";\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.getAll();\n  }\n\n  render() {\n    const _this$props$userList = this.props.userList,\n          isLoading = _this$props$userList.isLoading,\n          err = _this$props$userList.err,\n          list = _this$props$userList.list;\n    {\n      isLoading && React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n    {\n      !isLoading && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, err && React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"Error Occured!\"), list.length > 0 && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"List\"), React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"ID\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"username\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"image\")), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, list.map(user => {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, user.id), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, user.login), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: user.avatar_url,\n          alt: \"\".concat(user.login, \" avatar>\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        })));\n      })))));\n    }\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    userList: state.userList\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getAll: () => {\n      dispatch(getAllUsers());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/Flora/myapp/src/components/App/index.js"],"names":["React","Component","connect","getAllUsers","App","componentDidMount","props","getAll","render","userList","isLoading","err","list","length","map","user","id","login","avatar_url","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,6BAA5B;;AAGA,MAAMC,GAAN,SAAkBJ,KAAK,CAACC,SAAxB,CAAkC;AAChCI,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,MAAX;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,iCACyB,KAAKF,KAAL,CAAWG,QADpC;AAAA,UACCC,SADD,wBACCA,SADD;AAAA,UACYC,GADZ,wBACYA,GADZ;AAAA,UACiBC,IADjB,wBACiBA,IADjB;AAEP;AAACF,MAAAA,SAAS,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAb;AAAiC;AAClC;AAAC,OAACA,SAAD,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGC,GAAG,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADV,EAEGC,IAAI,CAACC,MAAL,GAAc,CAAd,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,IAAI,CAACE,GAAL,CAAUC,IAAD,IAAU;AAClB,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,IAAI,CAACC,EAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,IAAI,CAACE,KAAV,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,GAAG,EAAIF,IAAI,CAACG,UAAjB;AAA6B,UAAA,GAAG,YAAOH,IAAI,CAACE,KAAZ,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAHF,CADF;AASD,OAVA,CADH,CANF,CAFF,CAHJ,CADD;AA6BA;AACF;;AAtC+B;;AAuCjC;;AAED,MAAME,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLX,IAAAA,QAAQ,EAAEW,KAAK,CAACX;AADX,GAAP;AAGD,CAJD;;AAKA,MAAMY,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLf,IAAAA,MAAM,EAAE,MAAM;AACZe,MAAAA,QAAQ,CAACnB,WAAW,EAAZ,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;AAQA,eAAeD,OAAO,CAACiB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CjB,GAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getAllUsers } from \"../../redux/action-creators\";\n\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.getAll();\n  }\n  \n  render() {\n    const { isLoading, err, list} = this.props.userList;\n    {isLoading && <h1>Loading...</h1>}\n    {!isLoading &&\n      <div>\n        {err && <h1>Error Occured!</h1>}\n        {list.length > 0 &&\n          <div>\n            <h1>List</h1>\n            <table>\n              <thead>\n                <th>ID</th>\n                <th>username</th>\n                <th>image</th>\n              </thead>\n              <tbody>\n                {list.map((user) => {\n                  return (\n                    <tr>\n                      <td>{user.id}</td>\n                      <td>{user.login}</td>\n                      <td>\n                        <img src = {user.avatar_url} alt = {`${user.login} avatar>`}/>\n                      </td> \n                    </tr>\n                  );\n                })} \n              </tbody>\n            </table>\n          </div>\n        }\n      </div>\n    }\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    userList: state.userList,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getAll: () => {\n      dispatch(getAllUsers());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}