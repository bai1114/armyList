{"ast":null,"code":"import axios from 'axios';\n\nconst createUserStart = () => {\n  return {\n    type: 'CREATE_USER_START'\n  };\n};\n\nconst createUserFail = error => {\n  return {\n    type: 'CREATE_USER_FAIL',\n    error\n  };\n};\n\nconst createUserSuccess = response => {\n  return {\n    type: 'CREATE_USER_SUCCESS',\n    data: response\n  };\n};\n\nconst editUserStart = () => {\n  return {\n    type: 'EDIT_USER_START'\n  };\n};\n\nconst editUserFail = error => {\n  return {\n    type: 'EDIT_USER_ERROR',\n    error\n  };\n};\n\nconst editUserSuccess = response => {\n  return {\n    type: 'EDIT_USER_SUCCESS',\n    data: response\n  };\n};\n\nconst deleteUserStart = () => {\n  return {\n    type: 'DELETE_USER_START'\n  };\n};\n\nconst deleteUserFail = error => {\n  return {\n    type: 'DELETE_USER_ERROR',\n    error\n  };\n};\n\nconst deleteUserSuccess = id => {\n  return {\n    type: 'DELETE_USER_SUCCESS',\n    id\n  };\n};\n\nconst getUserStart = () => {\n  return {\n    type: 'GET_USER_START'\n  };\n};\n\nconst getUserFail = error => {\n  return {\n    type: 'GET_USER_ERROR',\n    error\n  };\n};\n\nconst getUserSuccess = response => {\n  return {\n    type: 'GET_USER_SUCCESS',\n    data: response\n  };\n};\n\nexport const createUser = () => {\n  return dispatch => {\n    dispatch(createUserStart());\n    axios.put('http://localhost:8080/api/users').then(response => {\n      dispatch(createUserSuccess(response.data));\n    }).catch(error => {\n      dispatch(createUserFail(error));\n    });\n  };\n};\nexport const editUser = (id, editUser) => {\n  return dispatch => {\n    dispatch(editUserStart());\n    axios.put(\"http://localhost:8080/api/users/\".concat(id), editUser).then(response => {\n      dispatch(editUserSuccess(response.data));\n    }).catch(error => {\n      dispatch(editUserFail(error));\n    });\n  };\n};\nexport const deleteUser = (id, deleteUser) => {\n  return dispatch => {\n    dispatch(deleteUserStart());\n    axios.delete(\"http://localhost:8080/api/users/\".concat(id), deleteUser).then(response => {\n      dispatch(deleteUserSuccess(id));\n      console.log('delete user success');\n    }).catch(error => {\n      dispatch(deleteUserFail(error));\n    });\n  };\n};\nexport const getUsers = () => {\n  return dispatch => {\n    dispatch(getUserStart());\n    axios.get('http://localhost:8080/api/users', getUsers).then(response => {\n      dispatch(getUserSuccess(response.data));\n    }).catch(error => {\n      dispatch(getUserFail(error));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/Flora/myapp/src/redux/action-creators/index.js"],"names":["axios","createUserStart","type","createUserFail","error","createUserSuccess","response","data","editUserStart","editUserFail","editUserSuccess","deleteUserStart","deleteUserFail","deleteUserSuccess","id","getUserStart","getUserFail","getUserSuccess","createUser","dispatch","put","then","catch","editUser","deleteUser","delete","console","log","getUsers","get"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nconst createUserStart = () => {\n  return {\n    type: 'CREATE_USER_START'\n  };  \n};\nconst createUserFail = (error) => {\n  return {\n    type:'CREATE_USER_FAIL',\n    error\n  };\n};\n\nconst createUserSuccess = (response) => {\n  return {\n    type:'CREATE_USER_SUCCESS',\n    data: response\n  }\n};\n\nconst editUserStart = () => {\n  return {\n    type: 'EDIT_USER_START'\n  };\n};\n\nconst editUserFail = (error) => {\n  return {\n    type: 'EDIT_USER_ERROR',\n    error\n  };\n};\n\nconst editUserSuccess = (response) => {\n  return {\n    type: 'EDIT_USER_SUCCESS',\n    data: response\n  };\n}\n\nconst deleteUserStart = () => {\n  return {\n    type: 'DELETE_USER_START'\n  };\n};\n\nconst deleteUserFail = (error) => {\n  return {\n    type: 'DELETE_USER_ERROR',\n    error\n  };\n};\n\nconst deleteUserSuccess = id => {\n  return {\n    type: 'DELETE_USER_SUCCESS',\n    id\n  };\n}\n\n\nconst getUserStart = () => {\n  return {\n    type: 'GET_USER_START'\n  };\n};\n\nconst getUserFail = (error) => {\n  return {\n    type: 'GET_USER_ERROR',\n    error\n  };\n};\n\nconst getUserSuccess = (response) => {\n  return {\n    type: 'GET_USER_SUCCESS',\n    data: response\n  };\n}\n\n \nexport const createUser = () => {\n  return (dispatch) => {\n    dispatch(createUserStart());\n    axios\n      .put('http://localhost:8080/api/users')\n      .then(response => {\n        dispatch(createUserSuccess(response.data));\n      })\n      .catch(error => {\n        dispatch(createUserFail(error));\n      });\n  };\n};\n\n\n\nexport const editUser = (id, editUser) => {\n  return (dispatch) => {\n    dispatch(editUserStart());\n    axios\n      .put(`http://localhost:8080/api/users/${id}`, editUser)\n      .then(response => {\n        dispatch(editUserSuccess(response.data));\n      })\n      .catch(error => {\n        dispatch(editUserFail(error));\n      });\n  };\n};\n\nexport const deleteUser = (id, deleteUser) => {\n  return (dispatch) => {\n    dispatch(deleteUserStart());\n    axios\n      .delete(`http://localhost:8080/api/users/${id}`, deleteUser)\n      .then(response => {\n        dispatch(deleteUserSuccess(id));\n        console.log('delete user success');\n      })\n      .catch(error => {\n        dispatch(deleteUserFail(error));\n      });\n  };\n};\n\nexport const getUsers = () => {\n  return (dispatch) => {\n    dispatch(getUserStart());\n    axios\n      .get('http://localhost:8080/api/users', getUsers)\n      .then(response => {\n        dispatch(getUserSuccess(response.data));\n      })\n      .catch(error => {\n        dispatch(getUserFail(error));\n      });\n  };\n};\n\n"]},"metadata":{},"sourceType":"module"}