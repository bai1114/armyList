{"ast":null,"code":"import axios from 'axios'; // Create User\n\nconst createSoldierStart = () => {\n  return {\n    type: 'CREATE_SOLDIER_START'\n  };\n};\n\nconst createSoldierFail = error => {\n  return {\n    type: 'CREATE_SOLDIER_FAIL',\n    error\n  };\n};\n\nconst createSoldierSuccess = user => {\n  return {\n    type: 'CREATE_SOLDIER_SUCCESS',\n    user\n  };\n};\n\nexport const createUser = user => {\n  return dispatch => {\n    dispatch(createUserStart());\n    axios({\n      method: 'POST',\n      url: 'http://localhost:8080/api/users',\n      data: user\n    }).then(response => {\n      console.log(response.data);\n      dispatch(createUserSuccess(response.data.newUser));\n    }).catch(error => {\n      dispatch(createUserFail(error));\n    });\n  };\n}; // Edit User\n\nconst editSoldierStart = () => {\n  return {\n    type: 'EDIT_SOLDIER_START'\n  };\n};\n\nconst editSoldierFail = error => {\n  return {\n    type: 'EDIT_SOLDIER_ERROR',\n    error\n  };\n};\n\nconst editSoldierSuccess = (id, user) => {\n  return {\n    type: 'EDIT_SOLDIER_SUCCESS',\n    id,\n    user\n  };\n};\n\nexport const editSoldier = (id, soldier) => {\n  return dispatch => {\n    dispatch(editSoldierStart());\n    axios.put(\"http://localhost:5000/api/edit/\".concat(id), soldier).then(response => {\n      dispatch(editSoldierSuccess(id, soldier)); //redirect home\n    }).catch(error => {\n      dispatch(editSoldierFail(error));\n    });\n  };\n}; // Delete User\n\nconst deleteSoldierStart = () => {\n  return {\n    type: 'DELETE_SOLDIER_START'\n  };\n};\n\nconst deleteSoldierFail = error => {\n  return {\n    type: 'DELETE_SOLDIER_ERROR',\n    error\n  };\n};\n\nconst deleteSoldierSuccess = id => {\n  return {\n    type: 'DELETE_SOLDIER_SUCCESS',\n    id\n  };\n};\n\nexport const deleteSoldier = id => {\n  return dispatch => {\n    dispatch(deleteSoldierStart());\n    console.log('delete id is ', id);\n    axios.delete(\"http://localhost:5000/api/delete/\".concat(id)).then(response => {\n      dispatch(deleteSoldierSuccess(id));\n      console.log('delete soldier success');\n    }).catch(error => {\n      dispatch(deleteSoldierFail(error));\n    });\n  };\n}; // Get Users\n// const getUsersStart = () => {\n//   return {\n//     type: 'GET_USERS_START'\n//   };\n// };\n// const getUsersFail = (error) => {\n//   return {\n//     type: 'GET_USERS_ERROR',\n//     error\n//   };\n// };\n// const getUsersSuccess = (response) => {\n//   return {\n//     type: 'GET_USERS_SUCCESS',\n//     data: response\n//   };\n// };\n// export const getUsers = () => {\n//   return (dispatch) => {\n//     dispatch(getUsersStart());\n//     axios\n//       .get('http://localhost:8080/api/', getUsers)\n//       .then(response => {\n//         dispatch(getUsersSuccess(response.data.users));\n//       })\n//       .catch(error => {\n//         dispatch(getUsersFail(error));\n//       });\n//   };\n// };\n// Redirect\n// export const redirect = () => {\n//   return {\n//     type: 'REDIRECT'\n//   };\n// };\n// export const resetRedirect = () => {\n//   return {\n//     type: 'RESET_REDIRECT'\n//   };\n// };\n// Sort\n// export const sortUsers = key => {\n//   return {\n//     type: 'SORT_USERS',\n//     key\n//   };\n// };\n// Search\n// const searchStart = () => {\n//   return {\n//     type: 'SEARCH_START'\n//   };\n// };\n// const searchSuccess = (users) => {\n//   return {\n//     type: 'SEARCH_SUCCESS',\n//     users,\n//   };\n// };\n// const searchFail = error => {\n//   return {\n//     type: 'SEARCH_FAIL',\n//     error\n//   };\n// };\n// export const search = (keyword) => {\n//   return (dispatch) => {\n//     dispatch(searchStart());\n//     axios\n//       .get(`http://localhost:8080/api/search/${keyword}`)\n//       .then(response => {\n//         console.log(`keyword is ${keyword}`);\n//         dispatch(searchSuccess(response.data));\n//       })\n//       .catch(error => {\n//         dispatch(searchFail(error));\n//       });\n//   }\n// }\n// export const changeSearchInput = (input) => {\n//   return {\n//     type: 'CHANGE_SEARCH_INPUT',\n//     input\n//   };\n// };\n// Fetch Page\n\nconst fetchSoldiersStart = () => {\n  return {\n    type: 'FETCH_SOLDIERS_START'\n  };\n};\n\nconst fetchSoldiersSuccess = soldiers => {\n  return {\n    type: 'FETCH_SOLDIERS_SUCCESS',\n    soldiers\n  };\n};\n\nconst fetchSoldiersFail = err => {\n  return {\n    type: 'FETCH_SOLDIERS_FAIL',\n    err\n  };\n};\n\nexport const fetchSoldiers = () => {\n  return dispatch => {\n    dispatch(fetchSoldiersStart());\n    axios.get('http://localhost:5000/api/').then(response => {\n      console.log('action test', response.data.soldiers);\n      dispatch(fetchSoldiersSuccess(response.data.soldiers));\n    }).catch(err => {\n      dispatch(fetchSoldiersFail(err));\n    });\n  };\n}; // // Count Page\n// const getCountStart = () => {\n//   return {\n//     type: 'GET_COUNT_START'\n//   };\n// };\n// const getCountSuccess = count => {\n//   return {\n//     type: 'GET_COUNT_SUCCESS',\n//     count\n//   };\n// };\n// const getCountFail = err => {\n//   return {\n//     type: 'GET_COUNT_FAIL',\n//     err\n//   };\n// };\n// export const getCount = () => {\n//   return (dispatch) => {\n//     dispatch(getCountStart());\n//     axios\n//       .get('http://localhost:8080/api/count')\n//       .then(response => {\n//         const count = parseInt(response.data.count);\n//         dispatch(getCountSuccess(count));\n//       })\n//       .catch(err => {\n//         dispatch(getCountFail(err));\n//       });\n//   };\n// };\n// Set Status\n// export const setStatusCurPage = curPage => {\n//   return {\n//     type: 'SET_STATUS_CUR_PAGE',\n//     curPage\n//   };\n// };","map":{"version":3,"sources":["/Users/Flora/myapp/src/redux/action-creators/index.js"],"names":["axios","createSoldierStart","type","createSoldierFail","error","createSoldierSuccess","user","createUser","dispatch","createUserStart","method","url","data","then","response","console","log","createUserSuccess","newUser","catch","createUserFail","editSoldierStart","editSoldierFail","editSoldierSuccess","id","editSoldier","soldier","put","deleteSoldierStart","deleteSoldierFail","deleteSoldierSuccess","deleteSoldier","delete","fetchSoldiersStart","fetchSoldiersSuccess","soldiers","fetchSoldiersFail","err","fetchSoldiers","get"],"mappings":"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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,MAAM6B,kBAAkB,GAAG,MAAM;AAC/B,SAAO;AACL/B,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJD;;AAMA,MAAMgC,oBAAoB,GAAIC,QAAD,IAAc;AACzC,SAAO;AACLjC,IAAAA,IAAI,EAAE,wBADD;AAELiC,IAAAA;AAFK,GAAP;AAID,CALD;;AAOA,MAAMC,iBAAiB,GAAGC,GAAG,IAAI;AAC/B,SAAO;AACLnC,IAAAA,IAAI,EAAE,qBADD;AAELmC,IAAAA;AAFK,GAAP;AAID,CALD;;AAOA,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC,SAAQ9B,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACyB,kBAAkB,EAAnB,CAAR;AACAjC,IAAAA,KAAK,CACFuC,GADH,CACO,4BADP,EAEG1B,IAFH,CAEQC,QAAQ,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BF,QAAQ,CAACF,IAAT,CAAcuB,QAAxC;AACA3B,MAAAA,QAAQ,CAAC0B,oBAAoB,CAACpB,QAAQ,CAACF,IAAT,CAAcuB,QAAf,CAArB,CAAR;AACD,KALH,EAMGhB,KANH,CAMSkB,GAAG,IAAI;AACZ7B,MAAAA,QAAQ,CAAC4B,iBAAiB,CAACC,GAAD,CAAlB,CAAR;AACD,KARH;AASD,GAXD;AAYD,CAbM,C,CAeP;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from 'axios';\n// Create User\nconst createSoldierStart = () => {\n  return {\n    type: 'CREATE_SOLDIER_START'\n  };  \n};\nconst createSoldierFail = (error) => {\n  return {\n    type:'CREATE_SOLDIER_FAIL',\n    error\n  };\n};\n\nconst createSoldierSuccess = (user) => {\n  return {\n    type:'CREATE_SOLDIER_SUCCESS',\n    user\n  }\n};\n\n \nexport const createUser = (user) => {\n  return (dispatch) => {\n    dispatch(createUserStart());\n    axios({\n      method: 'POST',\n      url: 'http://localhost:8080/api/users',\n      data: user\n    })\n      .then(response => {\n        console.log(response.data);\n        dispatch(createUserSuccess(response.data.newUser));\n      })\n      .catch(error => {\n        dispatch(createUserFail(error));\n      });\n  };\n};\n\n// Edit User\nconst editSoldierStart = () => {\n  return {\n    type: 'EDIT_SOLDIER_START'\n  };\n};\n\nconst editSoldierFail = (error) => {\n  return {\n    type: 'EDIT_SOLDIER_ERROR',\n    error\n  };\n};\n\nconst editSoldierSuccess = (id, user) => {\n  return {\n    type: 'EDIT_SOLDIER_SUCCESS',\n    id,\n    user\n  };\n};\n\nexport const editSoldier = (id, soldier) => {\n  return (dispatch) => {\n    dispatch(editSoldierStart());\n    axios\n      .put(`http://localhost:5000/api/edit/${id}`, soldier)\n      .then(response => {\n        dispatch(editSoldierSuccess(id, soldier));\n        //redirect home\n      })\n      .catch(error => {\n        dispatch(editSoldierFail(error));\n      });\n   };\n};\n\n// Delete User\nconst deleteSoldierStart = () => {\n  return {\n    type: 'DELETE_SOLDIER_START'\n  };\n};\n\nconst deleteSoldierFail = (error) => {\n  return {\n    type: 'DELETE_SOLDIER_ERROR',\n    error\n  };\n};\n\nconst deleteSoldierSuccess = (id) => {\n  return {\n    type: 'DELETE_SOLDIER_SUCCESS',\n    id\n  };\n};\n\nexport const deleteSoldier = (id) => {\n  return (dispatch) => {\n    dispatch(deleteSoldierStart());\n    console.log('delete id is ', id);\n    axios\n      .delete(`http://localhost:5000/api/delete/${id}`)\n      \n      .then(response => {\n        dispatch(deleteSoldierSuccess(id));\n        console.log('delete soldier success');\n      })\n      .catch(error => {\n        dispatch(deleteSoldierFail(error));\n      });\n  };\n};\n\n// Get Users\n// const getUsersStart = () => {\n//   return {\n//     type: 'GET_USERS_START'\n//   };\n// };\n\n// const getUsersFail = (error) => {\n//   return {\n//     type: 'GET_USERS_ERROR',\n//     error\n//   };\n// };\n\n// const getUsersSuccess = (response) => {\n//   return {\n//     type: 'GET_USERS_SUCCESS',\n//     data: response\n//   };\n// };\n\n// export const getUsers = () => {\n//   return (dispatch) => {\n//     dispatch(getUsersStart());\n//     axios\n//       .get('http://localhost:8080/api/', getUsers)\n//       .then(response => {\n//         dispatch(getUsersSuccess(response.data.users));\n//       })\n//       .catch(error => {\n//         dispatch(getUsersFail(error));\n//       });\n//   };\n// };\n\n// Redirect\n// export const redirect = () => {\n//   return {\n//     type: 'REDIRECT'\n//   };\n// };\n\n// export const resetRedirect = () => {\n//   return {\n//     type: 'RESET_REDIRECT'\n//   };\n// };\n\n\n// Sort\n// export const sortUsers = key => {\n//   return {\n//     type: 'SORT_USERS',\n//     key\n//   };\n// };\n\n\n// Search\n// const searchStart = () => {\n//   return {\n//     type: 'SEARCH_START'\n//   };\n// };\n\n// const searchSuccess = (users) => {\n//   return {\n//     type: 'SEARCH_SUCCESS',\n//     users,\n//   };\n// };\n\n// const searchFail = error => {\n//   return {\n//     type: 'SEARCH_FAIL',\n//     error\n//   };\n// };\n\n// export const search = (keyword) => {\n//   return (dispatch) => {\n//     dispatch(searchStart());\n//     axios\n//       .get(`http://localhost:8080/api/search/${keyword}`)\n//       .then(response => {\n//         console.log(`keyword is ${keyword}`);\n//         dispatch(searchSuccess(response.data));\n//       })\n//       .catch(error => {\n//         dispatch(searchFail(error));\n//       });\n//   }\n// }\n\n// export const changeSearchInput = (input) => {\n//   return {\n//     type: 'CHANGE_SEARCH_INPUT',\n//     input\n//   };\n// };\n\n// Fetch Page\nconst fetchSoldiersStart = () => {\n  return {\n    type: 'FETCH_SOLDIERS_START'\n  };\n};\n\nconst fetchSoldiersSuccess = (soldiers) => {\n  return {\n    type: 'FETCH_SOLDIERS_SUCCESS',\n    soldiers\n  };\n};\n\nconst fetchSoldiersFail = err => {\n  return {\n    type: 'FETCH_SOLDIERS_FAIL',\n    err\n  };\n};\n\nexport const fetchSoldiers = () => {\n  return (dispatch) => {\n    dispatch(fetchSoldiersStart());\n    axios\n      .get('http://localhost:5000/api/')\n      .then(response => {\n        console.log('action test',response.data.soldiers);\n        dispatch(fetchSoldiersSuccess(response.data.soldiers));\n      })\n      .catch(err => {\n        dispatch(fetchSoldiersFail(err));\n      });\n  }\n}\n\n// // Count Page\n// const getCountStart = () => {\n//   return {\n//     type: 'GET_COUNT_START'\n//   };\n// };\n\n// const getCountSuccess = count => {\n//   return {\n//     type: 'GET_COUNT_SUCCESS',\n//     count\n//   };\n// };\n\n// const getCountFail = err => {\n//   return {\n//     type: 'GET_COUNT_FAIL',\n//     err\n//   };\n// };\n\n// export const getCount = () => {\n//   return (dispatch) => {\n//     dispatch(getCountStart());\n//     axios\n//       .get('http://localhost:8080/api/count')\n//       .then(response => {\n//         const count = parseInt(response.data.count);\n//         dispatch(getCountSuccess(count));\n//       })\n//       .catch(err => {\n//         dispatch(getCountFail(err));\n//       });\n//   };\n// };\n\n\n// Set Status\n// export const setStatusCurPage = curPage => {\n//   return {\n//     type: 'SET_STATUS_CUR_PAGE',\n//     curPage\n//   };\n// };\n\n"]},"metadata":{},"sourceType":"module"}