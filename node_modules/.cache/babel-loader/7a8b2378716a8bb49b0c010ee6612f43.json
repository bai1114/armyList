{"ast":null,"code":"var _jsxFileName = \"/Users/Flora/myapp/src/containers/App/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport HomePage from '../../components/HomePage'; // import CreateUser from '../../components/CreateUser';\n// import EditUser from '../../components/EditUser';\n\nimport { fetchSoldiers, deleteSoldier, editSoldier, createSoldier } from \"../../redux/action-creators\";\n\nclass App extends Component {\n  render() {\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => React.createElement(HomePage, {\n        soldiers: this.props.soldiers,\n        err: this.props.err,\n        fetchSoldiers: this.props.fetchSoldiers,\n        deleteSoldier: this.props.deleteSoldier,\n        editSoldier: this.props.editSoldier,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/create\",\n      render: () => React.createElement(CreateSoldier, {\n        createSoldier: this.props.createSoldier // redirect = {this.props.redirect}\n        // redirectToUserlist = {this.props.redirectToUserlist}\n        ,\n        isLoading: this.props.isLoading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    soldiers: state.soldiers.soldiers,\n    err: state.soldiers.err,\n    // redirect: state.redirect,\n    isLoading: state.soldiers.isLoading // isSearching: state.searchInput.isSearching,\n    // searchUsers: state.getUsers.searchUsers,\n    // searchInput: state.searchInput.searchInput,\n    // pageOfUsers: state.getUsers.pageOfUsers,\n    // status : state.status,\n    // pageNumber: state.getUsers.pageNumber,\n    // curPage: state.getUsers.curPage,\n    // users: state.getUsers.users,\n\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchSoldiers: () => {\n      dispatch(fetchSoldiers());\n    },\n    // getUsers: () => {\n    //   dispatch(getUsers());\n    // },\n    deleteSoldier: _id => {\n      dispatch(deleteSoldier(_id));\n    },\n    createSoldier: soldier => {\n      dispatch(createSoldier(soldier));\n    },\n    // redirectToUserlist: () => {\n    //   dispatch(redirect());\n    // },\n    // resetRedirect: () => {\n    //   dispatch(resetRedirect());\n    // },\n    editSoldier: (id, soldier) => {\n      dispatch(editSoldier(id, soldier));\n    } // sortUsers: (key) => {\n    //   dispatch(sortUsers(key));\n    // },\n    // search: (keyword) => {\n    //   dispatch(search(keyword));\n    // },\n    // changeSearchInput: (input) => {\n    //   dispatch(changeSearchInput(input));\n    // },\n    // getCount: () => {\n    //   dispatch(getCount());\n    // }\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/Flora/myapp/src/containers/App/index.js"],"names":["React","Component","connect","BrowserRouter","Route","Switch","HomePage","fetchSoldiers","deleteSoldier","editSoldier","createSoldier","App","render","props","soldiers","err","isLoading","mapStateToProps","state","mapDispatchToProps","dispatch","_id","soldier","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,QAA6C,kBAA7C;AACA,OAAOC,QAAP,MAAqB,2BAArB,C,CACA;AACA;;AACA,SAASC,aAAT,EAAwBC,aAAxB,EAAuCC,WAAvC,EAAoDC,aAApD,QAAyE,6BAAzE;;AAEA,MAAMC,GAAN,SAAkBV,SAAlB,CAA4B;AAC1BW,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,IAAd;AAAoB,MAAA,IAAI,EAAC,GAAzB;AAA6B,MAAA,MAAM,EAAI,MACrC,oBAAC,QAAD;AACE,QAAA,QAAQ,EAAI,KAAKC,KAAL,CAAWC,QADzB;AAEE,QAAA,GAAG,EAAI,KAAKD,KAAL,CAAWE,GAFpB;AAGE,QAAA,aAAa,EAAI,KAAKF,KAAL,CAAWN,aAH9B;AAIE,QAAA,aAAa,EAAI,KAAKM,KAAL,CAAWL,aAJ9B;AAKE,QAAA,WAAW,EAAI,KAAKK,KAAL,CAAWJ,WAL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAUE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAI,IADX;AAEE,MAAA,IAAI,EAAG,SAFT;AAGE,MAAA,MAAM,EAAI,MACR,oBAAC,aAAD;AACE,QAAA,aAAa,EAAI,KAAKI,KAAL,CAAWH,aAD9B,CAEE;AACA;AAHF;AAIE,QAAA,SAAS,EAAI,KAAKG,KAAL,CAAWG,SAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CADF,CADF;AA6CD;;AA/CyB;;AAkD5B,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLJ,IAAAA,QAAQ,EAAEI,KAAK,CAACJ,QAAN,CAAeA,QADpB;AAELC,IAAAA,GAAG,EAAEG,KAAK,CAACJ,QAAN,CAAeC,GAFf;AAGL;AACAC,IAAAA,SAAS,EAAEE,KAAK,CAACJ,QAAN,CAAeE,SAJrB,CAKL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAZK,GAAP;AAcD,CAfD;;AAiBA,MAAMG,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLb,IAAAA,aAAa,EAAE,MAAM;AACnBa,MAAAA,QAAQ,CAACb,aAAa,EAAd,CAAR;AACD,KAHI;AAIL;AACA;AACA;AACAC,IAAAA,aAAa,EAAGa,GAAD,IAAS;AACtBD,MAAAA,QAAQ,CAACZ,aAAa,CAACa,GAAD,CAAd,CAAR;AACD,KATI;AAULX,IAAAA,aAAa,EAAGY,OAAD,IAAa;AAC1BF,MAAAA,QAAQ,CAACV,aAAa,CAACY,OAAD,CAAd,CAAR;AACD,KAZI;AAaL;AACA;AACA;AACA;AACA;AACA;AACAb,IAAAA,WAAW,EAAE,CAACc,EAAD,EAAKD,OAAL,KAAiB;AAC5BF,MAAAA,QAAQ,CAACX,WAAW,CAACc,EAAD,EAAKD,OAAL,CAAZ,CAAR;AACD,KArBI,CAsBL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAjCK,GAAP;AAmCD,CApCD;;AAqCA,eAAepB,OAAO,CAACe,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CR,GAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport HomePage from '../../components/HomePage';\n// import CreateUser from '../../components/CreateUser';\n// import EditUser from '../../components/EditUser';\nimport { fetchSoldiers, deleteSoldier, editSoldier, createSoldier } from \"../../redux/action-creators\";\n\nclass App extends Component { \n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route exact={true} path='/' render = {() => \n            <HomePage \n              soldiers = {this.props.soldiers}\n              err = {this.props.err}\n              fetchSoldiers = {this.props.fetchSoldiers}\n              deleteSoldier = {this.props.deleteSoldier}\n              editSoldier = {this.props.editSoldier}\n            />\n          } />\n          <Route \n            exact = {true}\n            path = '/create' \n            render = {() => \n              <CreateSoldier \n                createSoldier = {this.props.createSoldier} \n                // redirect = {this.props.redirect}\n                // redirectToUserlist = {this.props.redirectToUserlist}\n                isLoading = {this.props.isLoading}\n              />\n            } \n          /> \n           {/* <Route \n            path = '/edit/:soldierId' \n            render = {({ match }) => {\n              return (\n                <EditSoldier\n                  soldiers = {this.props.soldiers}\n                  id = {match.params.soldierId}\n                  editSoldier = {this.props.editSoldier}\n                  err = {this.props.err}\n                  //geters = {this.props.getUsers}\n                  // getUser = {this.getUser}\n                  // redirect = {this.props.redirect}\n                  // redirectToUserlist = {this.props.redirectToUserlist}\n                  isLoading = {this.props.isLoading}\n                /> \n              );\n            }}\n          />  */}\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    soldiers: state.soldiers.soldiers,\n    err: state.soldiers.err,\n    // redirect: state.redirect,\n    isLoading: state.soldiers.isLoading,\n    // isSearching: state.searchInput.isSearching,\n    // searchUsers: state.getUsers.searchUsers,\n    // searchInput: state.searchInput.searchInput,\n    // pageOfUsers: state.getUsers.pageOfUsers,\n    // status : state.status,\n    // pageNumber: state.getUsers.pageNumber,\n    // curPage: state.getUsers.curPage,\n    // users: state.getUsers.users,\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchSoldiers: () => {\n      dispatch(fetchSoldiers());\n    },\n    // getUsers: () => {\n    //   dispatch(getUsers());\n    // },\n    deleteSoldier: (_id) => {\n      dispatch(deleteSoldier(_id));\n    },\n    createSoldier: (soldier) => {\n      dispatch(createSoldier(soldier));\n    },\n    // redirectToUserlist: () => {\n    //   dispatch(redirect());\n    // },\n    // resetRedirect: () => {\n    //   dispatch(resetRedirect());\n    // },\n    editSoldier: (id, soldier) => {\n      dispatch(editSoldier(id, soldier));\n    },\n    // sortUsers: (key) => {\n    //   dispatch(sortUsers(key));\n    // },\n    // search: (keyword) => {\n    //   dispatch(search(keyword));\n    // },\n    // changeSearchInput: (input) => {\n    //   dispatch(changeSearchInput(input));\n    // },\n    // getCount: () => {\n    //   dispatch(getCount());\n    // }\n  }\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n"]},"metadata":{},"sourceType":"module"}