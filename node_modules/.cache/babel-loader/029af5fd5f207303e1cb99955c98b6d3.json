{"ast":null,"code":"import _objectSpread from \"/Users/Flora/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/Flora/myapp/src/components/EditSoldier/index.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nclass EditSoldier extends Component {\n  constructor(props) {\n    super(props);\n\n    this.filterSuperior = () => {\n      const result = [];\n      this.setState({\n        filteredSuperiors: result\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      let changedInfo = _objectSpread({}, this.state.changedInfo);\n\n      this.props.editSoldier(this.props.id, changedInfo);\n    };\n\n    this.handleChange = (e, key) => {\n      e.preventDefault();\n      const newObject = {};\n      newObject[key] = e.target.value;\n\n      const info = _objectSpread({}, this.state.info, newObject);\n\n      const changed = _objectSpread({}, this.state.changedInfo);\n\n      changed[key] = e.target.value;\n      this.setState({\n        info,\n        changedInfo: changed\n      });\n    };\n\n    this.handleSuperiorChange = e => {\n      let idName = e.target.value.split(' ');\n      const superiorId = idName[0];\n      const superiorName = idName[1];\n      const newObject = {\n        superiorId,\n        superiorName\n      };\n\n      const info = _objectSpread({}, this.state.info, newObject);\n\n      const changed = _objectSpread({}, this.state.changedInfo, {\n        superiorId\n      });\n\n      this.setState({\n        info,\n        changedInfo: changed\n      });\n    };\n\n    this.state = {\n      info: {\n        _id: null,\n        name: '',\n        sex: '',\n        rank: '',\n        startDate: '',\n        phone: '',\n        email: '',\n        superiorId: null,\n        superiorName: ''\n      },\n      changedInfo: {},\n      redirect: false,\n      filteredSuperiors: []\n    };\n  }\n\n  componentDidMount() {\n    console.log('EDIT tesing', this.props.soldiers);\n    console.log('EDIT id', this.props._id);\n\n    for (let i = 0; i < this.props.soldiers.length; i++) {\n      if (this.props.soldiers[i]._id === this.props._id) {\n        this.setState({\n          info: this.props.soldiers[i]\n        });\n      }\n    }\n\n    this.filterSuperior();\n    setTimeout(() => {\n      this.setState({\n        filteredSuperiors: [...this.state.filteredSuperiors, this.state.info.superiorId]\n      });\n    }, 0);\n  }\n\n  render() {\n    const candidateSuperiors = this.props.soldiers.filter(superior => {\n      return !this.state.filteredSuperiors.includes(superior._id);\n    });\n    const _this$state = this.state,\n          info = _this$state.info,\n          redirect = _this$state.redirect;\n\n    if (redirect && !this.props.isLoading) {\n      return React.createElement(Redirect, {\n        to: {\n          pathname: '/'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        className: \"edit_user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Edit Soldier\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group col-md-50\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Name:\"), React.createElement(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        id: \"name\",\n        value: info.name,\n        onChange: e => this.handleChange(e, 'name'),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group col-md-50\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"sex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Sex:\"), React.createElement(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        id: \"sex\",\n        value: info.sex,\n        onChange: e => this.handleChange(e, 'sex'),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group col-md-50\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"rank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Rank:\"), React.createElement(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        id: \"rank\",\n        value: info.rank,\n        onChange: e => this.handleChange(e, 'rank'),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group col-md-50\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"startDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Start Date:\"), React.createElement(\"input\", {\n        type: \"date\",\n        class: \"form-control\",\n        id: \"startDate\",\n        value: info.startDate,\n        onChange: e => this.handleChange(e, 'startDate'),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group col-md-50\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"phone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Phone:\"), React.createElement(\"input\", {\n        type: \"number\",\n        class: \"form-control\",\n        id: \"phone\",\n        value: info.phone,\n        onChange: e => this.handleChange(e, 'phone'),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group col-md-50\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Email:\"), React.createElement(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        id: \"email\",\n        value: info.email,\n        onChange: e => this.handleChange(e, 'email'),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group col-md-50\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Superior:\"), React.createElement(\"div\", {\n        className: \"col col-sm-10 col-lg-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        id: \"manager\",\n        onChange: this.handleSuperiorChange,\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, info.superiorName), candidateSuperiors.map(superior => {\n        return React.createElement(\"option\", {\n          key: superior._id,\n          value: superior._id + \" \" + superior.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, superior.name);\n      })))), React.createElement(\"button\", {\n        className: \"btn btn-success\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Save Change\")));\n    }\n  }\n\n}\n\nexport default EditSoldier;","map":{"version":3,"sources":["/Users/Flora/myapp/src/components/EditSoldier/index.js"],"names":["React","Component","Redirect","EditSoldier","constructor","props","filterSuperior","result","setState","filteredSuperiors","handleSubmit","e","preventDefault","changedInfo","state","editSoldier","id","handleChange","key","newObject","target","value","info","changed","handleSuperiorChange","idName","split","superiorId","superiorName","_id","name","sex","rank","startDate","phone","email","redirect","componentDidMount","console","log","soldiers","i","length","setTimeout","render","candidateSuperiors","filter","superior","includes","isLoading","pathname","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nclass EditSoldier extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      info: {\n        _id: null,\n        name: '',\n        sex:'',\n        rank: '',\n        startDate: '',\n        phone: '',\n        email: '',\n        superiorId: null,\n        superiorName: '',\n      },\n      changedInfo: {},\n      redirect: false,\n      filteredSuperiors: []\n    };\n  }\n\n  componentDidMount() {\n    console.log('EDIT tesing', this.props.soldiers);\n    console.log('EDIT id', this.props._id);\n\n    for (let i = 0; i < this.props.soldiers.length; i++){\n      if (this.props.soldiers[i]._id === this.props._id) {\n        this.setState({info : this.props.soldiers[i]});\n        \n      }\n    }\n    this.filterSuperior();\n    setTimeout(() => {\n      this.setState({filteredSuperiors: [...this.state.filteredSuperiors,this.state.info.superiorId]});\n    }, 0); \n  }\n\n  filterSuperior = () => {\n    const result = [];\n    this.setState({filteredSuperiors: result});\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    let changedInfo = {...this.state.changedInfo};\n    this.props.editSoldier(this.props.id, changedInfo);\n  }\n\n  handleChange = (e, key) => {\n    e.preventDefault();\n    const newObject = {};\n    newObject[key] = e.target.value;\n    const info = {\n      ...this.state.info,\n      ...newObject\n    };\n    const changed = {...this.state.changedInfo};\n    changed[key] = e.target.value;\n    this.setState({ info, changedInfo: changed});\n  }\n\n  handleSuperiorChange = e => {\n    let idName = e.target.value.split(' ');\n    const superiorId = idName[0];\n    const superiorName = idName[1];\n    const newObject = { superiorId, superiorName };\n    const info = {\n      ...this.state.info,\n      ...newObject\n    };\n    const changed = {...this.state.changedInfo, superiorId};\n    this.setState({ info, changedInfo: changed });\n  };\n\n  render() {\n    const candidateSuperiors = this.props.soldiers.filter(superior => {\n      return !this.state.filteredSuperiors.includes(superior._id);\n    });\n    const { info, redirect } = this.state;\n\n    if (redirect && !this.props.isLoading) {\n      return <Redirect to = {{ pathname: '/' }}/>\n    } else {\n      return (\n        <div className='edit_user'>\n          <h2>Edit Soldier</h2>\n          <br></br>\n          <form onSubmit = {this.handleSubmit}>\n            <div className=\"form-group col-md-50\" >\n              <label for = 'name'>\n                Name:\n              </label>\n              <input type = 'text' class = 'form-control' id = 'name' value = {info.name} onChange = {e => this.handleChange(e, 'name')} required = {true} />\n            </div> \n\n            <div className=\"form-group col-md-50\" >\n              <label htmlFor=\"sex\">\n                Sex:\n              </label>\n              <input type = 'text' class = 'form-control' id = 'sex' value = {info.sex} onChange = {e => this.handleChange(e, 'sex')} required = {true} />\n            </div>  \n            \n            <div className=\"form-group col-md-50\" >\n              <label  htmlFor=\"rank\">\n                Rank:\n              </label>\n              <input type = 'text' class = 'form-control' id = 'rank' value = {info.rank} onChange = {e => this.handleChange(e, 'rank')} required = {true}/>\n            </div>\n\n            <div className=\"form-group col-md-50\" >\n              <label htmlFor=\"startDate\">\n                Start Date:\n              </label>\n              <input type = 'date' class = 'form-control' id = 'startDate' value = {info.startDate} onChange = {e => this.handleChange(e, 'startDate')} required = {true}/>\n            </div>\n\n            <div className=\"form-group col-md-50\" >\n              <label htmlFor=\"phone\">\n                Phone:\n              </label>\n              <input type = 'number' class = 'form-control' id = 'phone' value = {info.phone} onChange = {e => this.handleChange(e, 'phone')} required = {true} />\n            </div>\n\n            <div className=\"form-group col-md-50\" > \n              <label htmlFor='text'>\n                Email: \n              </label> \n              <input type = 'text' class = 'form-control' id = 'email' value = {info.email} onChange = {e => this.handleChange(e, 'email')} required = {true} />\n            </div>\n\n            <div className=\"form-group col-md-50\" > \n              <label htmlFor='text'>\n                Superior: \n              </label> \n              <div className=\"col col-sm-10 col-lg-4\">\n                <select id=\"manager\" onChange={this.handleSuperiorChange} className=\"form-control\">\n                <option value={null}>{info.superiorName}</option>\n                {candidateSuperiors.map(superior => {\n                  return (\n                    <option key={superior._id} value={superior._id + \" \" + superior.name}>\n                      {superior.name}\n                    </option>\n                  );\n                })}\n                </select>\n              </div>\n            </div>\n\n            <button className=\"btn btn-success\" type = \"submit\">Save Change</button> \n          </form>\n        </div>\n      );\n    } \n  }\n}\n\nexport default EditSoldier;\n\n"]},"metadata":{},"sourceType":"module"}