{"ast":null,"code":"var _jsxFileName = \"/Users/Flora/myapp/src/containers/App/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\"; // import { deleteUser, createUser, resetRedirect, redirect, editUser, sortUsers, search, changeSearchInput, getCount, getUsers} from '../../redux/action-creators';\n\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'; // import UserList from '../../components/UserList';\n// import CreateUser from '../../components/CreateUser';\n// import EditUser from '../../components/EditUser';\n\nclass App extends Component {\n  render() {\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => React.createElement(HomePage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    redirect: state.redirect,\n    isLoading: state.getUsers.isLoading,\n    isSearching: state.searchInput.isSearching,\n    searchUsers: state.getUsers.searchUsers,\n    searchInput: state.searchInput.searchInput,\n    pageOfUsers: state.getUsers.pageOfUsers,\n    status: state.status,\n    pageNumber: state.getUsers.pageNumber,\n    curPage: state.getUsers.curPage,\n    users: state.getUsers.users\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUsers: () => {\n      dispatch(getUsers());\n    },\n    deleteUser: _id => {\n      dispatch(deleteUser(_id));\n    },\n    createUser: user => {\n      dispatch(createUser(user));\n    },\n    redirectToUserlist: () => {\n      dispatch(redirect());\n    },\n    resetRedirect: () => {\n      dispatch(resetRedirect());\n    },\n    editUser: (id, user) => {\n      dispatch(editUser(id, user));\n    },\n    sortUsers: key => {\n      dispatch(sortUsers(key));\n    },\n    search: keyword => {\n      dispatch(search(keyword));\n    },\n    changeSearchInput: input => {\n      dispatch(changeSearchInput(input));\n    },\n    getCount: () => {\n      dispatch(getCount());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/Flora/myapp/src/containers/App/index.js"],"names":["React","Component","connect","BrowserRouter","Route","Switch","App","render","mapStateToProps","state","redirect","isLoading","getUsers","isSearching","searchInput","searchUsers","pageOfUsers","status","pageNumber","curPage","users","mapDispatchToProps","dispatch","deleteUser","_id","createUser","user","redirectToUserlist","resetRedirect","editUser","id","sortUsers","key","search","keyword","changeSearchInput","input","getCount"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\n// import { deleteUser, createUser, resetRedirect, redirect, editUser, sortUsers, search, changeSearchInput, getCount, getUsers} from '../../redux/action-creators';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n// import UserList from '../../components/UserList';\n// import CreateUser from '../../components/CreateUser';\n// import EditUser from '../../components/EditUser';\n\nclass App extends Component { \n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route exact={true} path='/' render = {() => \n            <HomePage />\n          } />\n          {/* <Route\n            exact = {true} \n            path = '/' \n            render = {() => \n              <ArmyList \n                // pageOfUsers = {this.props.pageOfUsers}\n                getUsers = {this.props.getUsers}\n                deleteUser = {this.props.deleteUser}\n                // sortUsers = {this.props.sortUsers}\n                isLoading = {this.props.isLoading}\n                resetRedirect = {this.props.resetRedirect}\n                search = {this.props.search}\n                isSearching = {this.props.isSearching}\n                searchUsers = {this.props.searchUsers}\n                searchChange = {this.props.changeSearchInput}\n                searchInput = {this.props.searchInput}\n                getCount = {this.props.getCount}\n                curPage = {this.props.curPage}\n                users = {this.props.users}\n              /> \n            } \n          /> */}\n          {/* <Route \n            exact = {true}\n            path = '/users' \n            render = {() => \n              <CreateUser \n                createUser = {this.props.createUser} \n                redirect = {this.props.redirect}\n                redirectToUserlist = {this.props.redirectToUserlist}\n                isLoading = {this.props.isLoading}\n              />\n            }\n          />\n           <Route \n            path = '/users/:user_id' \n            render = {({ match }) => {\n              return (\n                <EditUser\n                  users = {this.props.users}\n                  id = {match.params.user_id}\n                  editUser = {this.props.editUser}\n                  getUsers = {this.props.getUsers}\n                  getUser = {this.getUser}\n                  redirect = {this.props.redirect}\n                  redirectToUserlist = {this.props.redirectToUserlist}\n                  isLoading = {this.props.isLoading}\n                /> \n              );\n            }}\n          /> */}\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    redirect: state.redirect,\n    isLoading: state.getUsers.isLoading,\n    isSearching: state.searchInput.isSearching,\n    searchUsers: state.getUsers.searchUsers,\n    searchInput: state.searchInput.searchInput,\n    pageOfUsers: state.getUsers.pageOfUsers,\n    status : state.status,\n    pageNumber: state.getUsers.pageNumber,\n    curPage: state.getUsers.curPage,\n    users: state.getUsers.users,\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getUsers: () => {\n      dispatch(getUsers());\n    },\n    deleteUser: (_id) => {\n      dispatch(deleteUser(_id));\n    },\n    createUser: (user) => {\n      dispatch(createUser(user));\n    },\n    redirectToUserlist: () => {\n      dispatch(redirect());\n    },\n    resetRedirect: () => {\n      dispatch(resetRedirect());\n    },\n    editUser: (id, user) => {\n      dispatch(editUser(id, user));\n    },\n    sortUsers: (key) => {\n      dispatch(sortUsers(key));\n    },\n    search: (keyword) => {\n      dispatch(search(keyword));\n    },\n    changeSearchInput: (input) => {\n      dispatch(changeSearchInput(input));\n    },\n    getCount: () => {\n      dispatch(getCount());\n    }\n  }\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n"]},"metadata":{},"sourceType":"module"}