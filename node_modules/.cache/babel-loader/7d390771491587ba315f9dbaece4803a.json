{"ast":null,"code":"var _jsxFileName = \"/Users/Flora/myapp/src/containers/Pagination/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPage, getCount, setStatusCurPage, resetRedirect } from '../../redux/action-creators';\n\nclass Pagination extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setCurPage = curPage => {\n      //const { dispatch } = this.props;\n      this.props.getCount();\n      this.props.fetchPage(curPage, 5);\n      this.props.setStatusCurPage(curPage); // dispatch(fetchPage(curPage, 5));\n      // dispatch(setStatusCurPage(curPage));\n\n      const _this$props$page = this.props.page,\n            pageSize = _this$props$page.pageSize,\n            count = _this$props$page.count;\n      const pageNumber = [];\n      const totalPages = Math.ceil(count / pageSize);\n      let startPage = 1;\n      let endPage = totalPages;\n\n      for (let i = startPage; i <= endPage; i++) {\n        pageNumber.push(i);\n      }\n\n      this.setState({\n        pageNumber\n      });\n    };\n\n    this.state = {\n      pageNumber: []\n    };\n  }\n\n  componentDidMount() {\n    this.setCurPage(1);\n    this.props.resetRedirect();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.page.count !== prevProps.page.count) {\n      this.setCurPage(this.props.status.curPage);\n    }\n  }\n\n  render() {\n    const pageProp = this.props.page;\n    const pageNumber = this.state.pageNumber;\n    const count = pageProp.count,\n          pageSize = pageProp.pageSize;\n    const totalPages = Math.ceil(count / pageSize);\n    return React.createElement(\"ul\", {\n      className: \"pagination\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"page-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, pageProp.curPage === 1 ? '' : React.createElement(\"a\", {\n      className: \"page-link\",\n      onClick: () => this.setCurPage(pageProp.curPage - 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Previous\")), pageNumber.map(page => {\n      return React.createElement(\"li\", {\n        key: page,\n        className: \"page-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: () => this.setCurPage(page),\n        className: \"page-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, page));\n    }), React.createElement(\"li\", {\n      className: \"page-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, pageProp.curPage === totalPages ? '' : React.createElement(\"a\", {\n      onClick: () => this.setCurPage(pageProp.curPage + 1),\n      className: \"page-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Next\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    page: state.getUsers,\n    status: state.status\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    resetRedirect: () => {\n      dispatch(resetRedirect());\n    },\n    getCount: () => {\n      dispatch(getCount());\n    },\n    fetchPage: (page, size) => {\n      dispatch(fetchPage(page, size));\n    },\n    setStatusCurPage: page => {\n      dispatch(setStatusCurPage(page));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pagination);","map":{"version":3,"sources":["/Users/Flora/myapp/src/containers/Pagination/index.js"],"names":["React","Component","connect","fetchPage","getCount","setStatusCurPage","resetRedirect","Pagination","constructor","props","setCurPage","curPage","page","pageSize","count","pageNumber","totalPages","Math","ceil","startPage","endPage","i","push","setState","state","componentDidMount","componentDidUpdate","prevProps","prevState","status","render","pageProp","map","mapStateToProps","getUsers","mapDispatchToProps","dispatch","size"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPage, getCount, setStatusCurPage, resetRedirect } from '../../redux/action-creators';\n\nclass Pagination extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pageNumber: []\n    };\n  }\n\n  componentDidMount() {\n    this.setCurPage(1);\n    this.props.resetRedirect();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.page.count !== prevProps.page.count) {\n      this.setCurPage(this.props.status.curPage);\n    }\n  }\n\n  setCurPage = curPage => {\n    //const { dispatch } = this.props;\n    this.props.getCount();\n    this.props.fetchPage(curPage, 5);\n    this.props.setStatusCurPage(curPage);\n    // dispatch(fetchPage(curPage, 5));\n    // dispatch(setStatusCurPage(curPage));\n    const { pageSize, count } = this.props.page;\n    const pageNumber = [];\n    \n    const totalPages = Math.ceil(count / pageSize);\n    let startPage = 1;\n    let endPage = totalPages;\n    for (let i = startPage; i <= endPage; i++) {\n      pageNumber.push(i);\n    }\n    this.setState({ pageNumber });\n  };\n\n\n\n  render() {\n    const pageProp = this.props.page;\n    const pageNumber = this.state.pageNumber;\n    const { count, pageSize } = pageProp;\n    const totalPages = Math.ceil(count / pageSize);\n    return (\n      <ul className=\"pagination\">\n        <li className=\"page-item\">\n          {pageProp.curPage === 1 ? '' : <a className=\"page-link\" onClick={() => this.setCurPage(pageProp.curPage - 1)} >Previous</a>}\n        </li>\n        {pageNumber.map(page => {\n          return (\n            <li key={page} className=\"page-item\">\n              <a onClick={() => this.setCurPage(page)} className=\"page-link\">{page}</a>\n            </li>\n          );\n        })}\n        <li className=\"page-item\">\n          {pageProp.curPage === totalPages ? '' : <a onClick={() => this.setCurPage(pageProp.curPage + 1)} className=\"page-link\" >Next</a>}\n        </li>\n      </ul>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    page: state.getUsers,\n    status: state.status\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    resetRedirect: () => {\n      dispatch(resetRedirect());\n    },\n    getCount: () => {\n      dispatch(getCount());\n    },\n    fetchPage: (page, size) => {\n      dispatch(fetchPage(page, size));\n    },\n    setStatusCurPage: (page) => {\n      dispatch(setStatusCurPage(page));\n    }\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pagination);"]},"metadata":{},"sourceType":"module"}