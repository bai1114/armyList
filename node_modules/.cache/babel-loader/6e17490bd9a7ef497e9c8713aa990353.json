{"ast":null,"code":"import axios from 'axios';\n\nconst createUserStart = () => {\n  return {\n    type: 'CREATE_USER_START'\n  };\n};\n\nconst createUserFail = error => {\n  return {\n    type: 'CREATE_USER_FAIL',\n    error\n  };\n};\n\nconst createUserSuccess = response => {\n  return {\n    type: 'CREATE_USER_SUCCESS',\n    data: response\n  };\n};\n\nconst editUserStart = () => {\n  return {\n    type: 'EDIT_USER_START'\n  };\n};\n\nconst editUserFail = error => {\n  return {\n    type: 'EDIT_USER_ERROR',\n    error\n  };\n};\n\nconst editUserSuccess = response => {\n  return {\n    type: 'EDIT_USER_SUCCESS',\n    data: response\n  };\n};\n\nconst deleteUserStart = () => {\n  return {\n    type: 'DELETE_USER_START'\n  };\n};\n\nconst deleteUserFail = error => {\n  return {\n    type: 'DELETE_USER_ERROR',\n    error\n  };\n};\n\nconst deleteUserSuccess = response => {\n  return {\n    type: 'DELETE_USER_SUCCESS',\n    data: response\n  };\n};\n\nconst getUserStart = () => {\n  return {\n    type: 'GET_USER_START'\n  };\n};\n\nconst getUserFail = error => {\n  return {\n    type: 'GET_USER_ERROR',\n    error\n  };\n};\n\nconst getUserSuccess = response => {\n  return {\n    type: 'GET_USER_SUCCESS',\n    data: response\n  };\n};\n\nexport const createUser = () => {\n  return dispatch => {\n    dispatch(createUserStart());\n    axios.put('https://localhost:8080/api/users').then(response => {\n      dispatch(createUserSuccess(response.data));\n    }).catch(error => {\n      dispatch(createUserFail(error));\n    });\n  };\n};\nexport const editUser = (id, editUser) => {\n  return dispatch => {\n    dispatch(editUserStart());\n    axios.put(\"https://localhost:8080/api/users/\".concat(id), editUser).then(response => {\n      dispatch(editUserSuccess(response.data));\n    }).catch(error => {\n      dispatch(editUserFail(error));\n    });\n  };\n};\nexport const deleteUser = (id, deleteUser) => {\n  return dispatch => {\n    dispatch(deleteUserStart());\n    axios.delete(\"https://localhost:8080/api/users/\".concat(id), deleteUser).then(response => {\n      dispatch(deleteUserSuccess(response.data));\n    }).catch(error => {\n      dispatch(deleteUserFail(error));\n    });\n  };\n};\nexport const getUsers = () => {\n  return dispatch => {\n    dispatch(getUserStart());\n    axios.get(\"http://localhost:8080/api/users\", getUsers).then(response => {\n      dispatch(getUserSuccess(response.data));\n    }).catch(error => {\n      dispatch(getUserFail(error));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/Flora/myapp/src/redux/action-creators/index.js"],"names":["axios","createUserStart","type","createUserFail","error","createUserSuccess","response","data","editUserStart","editUserFail","editUserSuccess","deleteUserStart","deleteUserFail","deleteUserSuccess","getUserStart","getUserFail","getUserSuccess","createUser","dispatch","put","then","catch","editUser","id","deleteUser","delete","getUsers","get"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nconst createUserStart = () => {\n  return {\n    type: 'CREATE_USER_START'\n  };  \n};\nconst createUserFail = (error) => {\n  return {\n    type:'CREATE_USER_FAIL',\n    error\n  };\n};\n\nconst createUserSuccess = (response) => {\n  return {\n    type:'CREATE_USER_SUCCESS',\n    data: response\n  }\n};\n\nconst editUserStart = () => {\n  return {\n    type: 'EDIT_USER_START'\n  };\n};\n\nconst editUserFail = (error) => {\n  return {\n    type: 'EDIT_USER_ERROR',\n    error\n  };\n};\n\nconst editUserSuccess = (response) => {\n  return {\n    type: 'EDIT_USER_SUCCESS',\n    data: response\n  };\n}\n\nconst deleteUserStart = () => {\n  return {\n    type: 'DELETE_USER_START'\n  };\n};\n\nconst deleteUserFail = (error) => {\n  return {\n    type: 'DELETE_USER_ERROR',\n    error\n  };\n};\n\nconst deleteUserSuccess = (response) => {\n  return {\n    type: 'DELETE_USER_SUCCESS',\n    data: response\n  };\n}\n\n\nconst getUserStart = () => {\n  return {\n    type: 'GET_USER_START'\n  };\n};\n\nconst getUserFail = (error) => {\n  return {\n    type: 'GET_USER_ERROR',\n    error\n  };\n};\n\nconst getUserSuccess = (response) => {\n  return {\n    type: 'GET_USER_SUCCESS',\n    data: response\n  };\n}\n\n \nexport const createUser = () => {\n  return (dispatch) => {\n    dispatch(createUserStart());\n    axios.put('https://localhost:8080/api/users')\n      .then(response => {\n        dispatch(createUserSuccess(response.data));\n      })\n      .catch(error => {\n        dispatch(createUserFail(error));\n      });\n  };\n};\n\n\n\nexport const editUser = (id, editUser) => {\n  return (dispatch) => {\n    dispatch(editUserStart());\n    axios.put(`https://localhost:8080/api/users/${id}`, editUser)\n      .then(response => {\n        dispatch(editUserSuccess(response.data));\n      })\n      .catch(error => {\n        dispatch(editUserFail(error));\n      });\n  };\n};\n\nexport const deleteUser = (id, deleteUser) => {\n  return (dispatch) => {\n    dispatch(deleteUserStart());\n    axios.delete(`https://localhost:8080/api/users/${id}`, deleteUser)\n      .then(response => {\n        dispatch(deleteUserSuccess(response.data));\n      })\n      .catch(error => {\n        dispatch(deleteUserFail(error));\n      });\n  };\n};\n\nexport const getUsers = () => {\n  return (dispatch) => {\n    dispatch(getUserStart());\n    axios.get(`http://localhost:8080/api/users`, getUsers)\n      .then(response => {\n        dispatch(getUserSuccess(response.data));\n      })\n      .catch(error => {\n        dispatch(getUserFail(error));\n      });\n  };\n};\n\n"]},"metadata":{},"sourceType":"module"}