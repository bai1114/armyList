{"ast":null,"code":"import axios from 'axios'; // Create User\n\nconst createSoldierStart = () => {\n  return {\n    type: 'CREATE_SOLDIER_START'\n  };\n};\n\nconst createSoldierFail = error => {\n  return {\n    type: 'CREATE_SOLDIER_FAIL',\n    error\n  };\n};\n\nconst createSoldierSuccess = newSoldier => {\n  return {\n    type: 'CREATE_SOLDIER_SUCCESS',\n    newSoldier\n  };\n};\n\nexport const createSoldier = soldier => {\n  return dispatch => {\n    dispatch(createSoldierStart());\n    axios({\n      method: 'POST',\n      url: 'http://localhost:5000/api/create',\n      data: soldier\n    }).then(response => {\n      console.log('response.data.newSoldier', response.data.newSoldier);\n      dispatch(createSoldierSuccess(response.data.newSoldier));\n      dispatch(fetchSoldiersSuccess(response.data.soldiers));\n    }).catch(error => {\n      dispatch(createSoldierFail(error));\n    });\n  };\n}; // Edit User\n\nconst editSoldierStart = () => {\n  return {\n    type: 'EDIT_SOLDIER_START'\n  };\n};\n\nconst editSoldierFail = error => {\n  return {\n    type: 'EDIT_SOLDIER_ERROR',\n    error\n  };\n};\n\nconst editSoldierSuccess = (id, user) => {\n  return {\n    type: 'EDIT_SOLDIER_SUCCESS',\n    id,\n    user\n  };\n};\n\nexport const editSoldier = (id, soldier) => {\n  return dispatch => {\n    dispatch(editSoldierStart());\n    axios.put(\"http://localhost:5000/api/edit/\".concat(id), soldier).then(response => {\n      dispatch(editSoldierSuccess(id, soldier)); //redirect home\n    }).catch(error => {\n      dispatch(editSoldierFail(error));\n    });\n  };\n}; // Delete User\n\nconst deleteSoldierStart = () => {\n  return {\n    type: 'DELETE_SOLDIER_START'\n  };\n};\n\nconst deleteSoldierFail = error => {\n  return {\n    type: 'DELETE_SOLDIER_ERROR',\n    error\n  };\n};\n\nconst deleteSoldierSuccess = id => {\n  return {\n    type: 'DELETE_SOLDIER_SUCCESS',\n    id\n  };\n};\n\nexport const deleteSoldier = id => {\n  return dispatch => {\n    dispatch(deleteSoldierStart());\n    console.log('delete id is ', id);\n    axios.delete(\"http://localhost:5000/api/delete/\".concat(id)).then(response => {\n      dispatch(deleteSoldierSuccess(id));\n      console.log('delete soldier success');\n    }).catch(error => {\n      dispatch(deleteSoldierFail(error));\n    });\n  };\n}; // Get Users\n// const getUsersStart = () => {\n//   return {\n//     type: 'GET_USERS_START'\n//   };\n// };\n// const getUsersFail = (error) => {\n//   return {\n//     type: 'GET_USERS_ERROR',\n//     error\n//   };\n// };\n// const getUsersSuccess = (response) => {\n//   return {\n//     type: 'GET_USERS_SUCCESS',\n//     data: response\n//   };\n// };\n// export const getUsers = () => {\n//   return (dispatch) => {\n//     dispatch(getUsersStart());\n//     axios\n//       .get('http://localhost:8080/api/', getUsers)\n//       .then(response => {\n//         dispatch(getUsersSuccess(response.data.users));\n//       })\n//       .catch(error => {\n//         dispatch(getUsersFail(error));\n//       });\n//   };\n// };\n// Redirect\n// export const redirect = () => {\n//   return {\n//     type: 'REDIRECT'\n//   };\n// };\n// export const resetRedirect = () => {\n//   return {\n//     type: 'RESET_REDIRECT'\n//   };\n// };\n// Sort\n// export const sortUsers = key => {\n//   return {\n//     type: 'SORT_USERS',\n//     key\n//   };\n// };\n// Search\n// const searchStart = () => {\n//   return {\n//     type: 'SEARCH_START'\n//   };\n// };\n// const searchSuccess = (users) => {\n//   return {\n//     type: 'SEARCH_SUCCESS',\n//     users,\n//   };\n// };\n// const searchFail = error => {\n//   return {\n//     type: 'SEARCH_FAIL',\n//     error\n//   };\n// };\n// export const search = (keyword) => {\n//   return (dispatch) => {\n//     dispatch(searchStart());\n//     axios\n//       .get(`http://localhost:8080/api/search/${keyword}`)\n//       .then(response => {\n//         console.log(`keyword is ${keyword}`);\n//         dispatch(searchSuccess(response.data));\n//       })\n//       .catch(error => {\n//         dispatch(searchFail(error));\n//       });\n//   }\n// }\n// export const changeSearchInput = (input) => {\n//   return {\n//     type: 'CHANGE_SEARCH_INPUT',\n//     input\n//   };\n// };\n// Fetch Page\n\nconst fetchSoldiersStart = () => {\n  return {\n    type: 'FETCH_SOLDIERS_START'\n  };\n};\n\nconst fetchSoldiersSuccess = soldiers => {\n  return {\n    type: 'FETCH_SOLDIERS_SUCCESS',\n    soldiers\n  };\n};\n\nconst fetchSoldiersFail = err => {\n  return {\n    type: 'FETCH_SOLDIERS_FAIL',\n    err\n  };\n};\n\nexport const fetchSoldiers = () => {\n  return dispatch => {\n    dispatch(fetchSoldiersStart());\n    axios.get('http://localhost:5000/api/').then(response => {\n      console.log('action test', response.data.soldiers);\n      dispatch(fetchSoldiersSuccess(response.data.soldiers));\n    }).catch(err => {\n      dispatch(fetchSoldiersFail(err));\n    });\n  };\n}; // // Count Page\n// const getCountStart = () => {\n//   return {\n//     type: 'GET_COUNT_START'\n//   };\n// };\n// const getCountSuccess = count => {\n//   return {\n//     type: 'GET_COUNT_SUCCESS',\n//     count\n//   };\n// };\n// const getCountFail = err => {\n//   return {\n//     type: 'GET_COUNT_FAIL',\n//     err\n//   };\n// };\n// export const getCount = () => {\n//   return (dispatch) => {\n//     dispatch(getCountStart());\n//     axios\n//       .get('http://localhost:8080/api/count')\n//       .then(response => {\n//         const count = parseInt(response.data.count);\n//         dispatch(getCountSuccess(count));\n//       })\n//       .catch(err => {\n//         dispatch(getCountFail(err));\n//       });\n//   };\n// };\n// Set Status\n// export const setStatusCurPage = curPage => {\n//   return {\n//     type: 'SET_STATUS_CUR_PAGE',\n//     curPage\n//   };\n// };","map":{"version":3,"sources":["/Users/Flora/myapp/src/redux/action-creators/index.js"],"names":["axios","createSoldierStart","type","createSoldierFail","error","createSoldierSuccess","newSoldier","createSoldier","soldier","dispatch","method","url","data","then","response","console","log","fetchSoldiersSuccess","soldiers","catch","editSoldierStart","editSoldierFail","editSoldierSuccess","id","user","editSoldier","put","deleteSoldierStart","deleteSoldierFail","deleteSoldierSuccess","deleteSoldier","delete","fetchSoldiersStart","fetchSoldiersFail","err","fetchSoldiers","get"],"mappings":"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M,C,CAiBP;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,MAAM4B,kBAAkB,GAAG,MAAM;AAC/B,SAAO;AACL9B,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJD;;AAMA,MAAMe,oBAAoB,GAAIC,QAAD,IAAc;AACzC,SAAO;AACLhB,IAAAA,IAAI,EAAE,wBADD;AAELgB,IAAAA;AAFK,GAAP;AAID,CALD;;AAOA,MAAMe,iBAAiB,GAAGC,GAAG,IAAI;AAC/B,SAAO;AACLhC,IAAAA,IAAI,EAAE,qBADD;AAELgC,IAAAA;AAFK,GAAP;AAID,CALD;;AAOA,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC,SAAQ1B,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACuB,kBAAkB,EAAnB,CAAR;AACAhC,IAAAA,KAAK,CACFoC,GADH,CACO,4BADP,EAEGvB,IAFH,CAEQC,QAAQ,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BF,QAAQ,CAACF,IAAT,CAAcM,QAAxC;AACAT,MAAAA,QAAQ,CAACQ,oBAAoB,CAACH,QAAQ,CAACF,IAAT,CAAcM,QAAf,CAArB,CAAR;AACD,KALH,EAMGC,KANH,CAMSe,GAAG,IAAI;AACZzB,MAAAA,QAAQ,CAACwB,iBAAiB,CAACC,GAAD,CAAlB,CAAR;AACD,KARH;AASD,GAXD;AAYD,CAbM,C,CAeP;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from 'axios';\n// Create User\nconst createSoldierStart = () => {\n  return {\n    type: 'CREATE_SOLDIER_START'\n  };  \n};\nconst createSoldierFail = (error) => {\n  return {\n    type:'CREATE_SOLDIER_FAIL',\n    error\n  };\n};\n\nconst createSoldierSuccess = (newSoldier) => {\n  return {\n    type:'CREATE_SOLDIER_SUCCESS',\n    newSoldier\n  }\n};\n\n \nexport const createSoldier = (soldier) => {\n  return (dispatch) => {\n    dispatch(createSoldierStart());\n    axios({\n      method: 'POST',\n      url: 'http://localhost:5000/api/create',\n      data: soldier\n    })\n      .then(response => {\n        console.log('response.data.newSoldier', response.data.newSoldier);\n        dispatch(createSoldierSuccess(response.data.newSoldier));\n        dispatch(fetchSoldiersSuccess(response.data.soldiers));\n      })\n      .catch(error => {\n        dispatch(createSoldierFail(error));\n      });\n  };\n};\n\n// Edit User\nconst editSoldierStart = () => {\n  return {\n    type: 'EDIT_SOLDIER_START'\n  };\n};\n\nconst editSoldierFail = (error) => {\n  return {\n    type: 'EDIT_SOLDIER_ERROR',\n    error\n  };\n};\n\nconst editSoldierSuccess = (id, user) => {\n  return {\n    type: 'EDIT_SOLDIER_SUCCESS',\n    id,\n    user\n  };\n};\n\nexport const editSoldier = (id, soldier) => {\n  return (dispatch) => {\n    dispatch(editSoldierStart());\n    axios\n      .put(`http://localhost:5000/api/edit/${id}`, soldier)\n      .then(response => {\n        dispatch(editSoldierSuccess(id, soldier));\n        //redirect home\n      })\n      .catch(error => {\n        dispatch(editSoldierFail(error));\n      });\n   };\n};\n\n// Delete User\nconst deleteSoldierStart = () => {\n  return {\n    type: 'DELETE_SOLDIER_START'\n  };\n};\n\nconst deleteSoldierFail = (error) => {\n  return {\n    type: 'DELETE_SOLDIER_ERROR',\n    error\n  };\n};\n\nconst deleteSoldierSuccess = (id) => {\n  return {\n    type: 'DELETE_SOLDIER_SUCCESS',\n    id\n  };\n};\n\nexport const deleteSoldier = (id) => {\n  return (dispatch) => {\n    dispatch(deleteSoldierStart());\n    console.log('delete id is ', id);\n    axios\n      .delete(`http://localhost:5000/api/delete/${id}`)\n      \n      .then(response => {\n        dispatch(deleteSoldierSuccess(id));\n        console.log('delete soldier success');\n      })\n      .catch(error => {\n        dispatch(deleteSoldierFail(error));\n      });\n  };\n};\n\n// Get Users\n// const getUsersStart = () => {\n//   return {\n//     type: 'GET_USERS_START'\n//   };\n// };\n\n// const getUsersFail = (error) => {\n//   return {\n//     type: 'GET_USERS_ERROR',\n//     error\n//   };\n// };\n\n// const getUsersSuccess = (response) => {\n//   return {\n//     type: 'GET_USERS_SUCCESS',\n//     data: response\n//   };\n// };\n\n// export const getUsers = () => {\n//   return (dispatch) => {\n//     dispatch(getUsersStart());\n//     axios\n//       .get('http://localhost:8080/api/', getUsers)\n//       .then(response => {\n//         dispatch(getUsersSuccess(response.data.users));\n//       })\n//       .catch(error => {\n//         dispatch(getUsersFail(error));\n//       });\n//   };\n// };\n\n// Redirect\n// export const redirect = () => {\n//   return {\n//     type: 'REDIRECT'\n//   };\n// };\n\n// export const resetRedirect = () => {\n//   return {\n//     type: 'RESET_REDIRECT'\n//   };\n// };\n\n\n// Sort\n// export const sortUsers = key => {\n//   return {\n//     type: 'SORT_USERS',\n//     key\n//   };\n// };\n\n\n// Search\n// const searchStart = () => {\n//   return {\n//     type: 'SEARCH_START'\n//   };\n// };\n\n// const searchSuccess = (users) => {\n//   return {\n//     type: 'SEARCH_SUCCESS',\n//     users,\n//   };\n// };\n\n// const searchFail = error => {\n//   return {\n//     type: 'SEARCH_FAIL',\n//     error\n//   };\n// };\n\n// export const search = (keyword) => {\n//   return (dispatch) => {\n//     dispatch(searchStart());\n//     axios\n//       .get(`http://localhost:8080/api/search/${keyword}`)\n//       .then(response => {\n//         console.log(`keyword is ${keyword}`);\n//         dispatch(searchSuccess(response.data));\n//       })\n//       .catch(error => {\n//         dispatch(searchFail(error));\n//       });\n//   }\n// }\n\n// export const changeSearchInput = (input) => {\n//   return {\n//     type: 'CHANGE_SEARCH_INPUT',\n//     input\n//   };\n// };\n\n// Fetch Page\nconst fetchSoldiersStart = () => {\n  return {\n    type: 'FETCH_SOLDIERS_START'\n  };\n};\n\nconst fetchSoldiersSuccess = (soldiers) => {\n  return {\n    type: 'FETCH_SOLDIERS_SUCCESS',\n    soldiers\n  };\n};\n\nconst fetchSoldiersFail = err => {\n  return {\n    type: 'FETCH_SOLDIERS_FAIL',\n    err\n  };\n};\n\nexport const fetchSoldiers = () => {\n  return (dispatch) => {\n    dispatch(fetchSoldiersStart());\n    axios\n      .get('http://localhost:5000/api/')\n      .then(response => {\n        console.log('action test',response.data.soldiers);\n        dispatch(fetchSoldiersSuccess(response.data.soldiers));\n      })\n      .catch(err => {\n        dispatch(fetchSoldiersFail(err));\n      });\n  }\n}\n\n// // Count Page\n// const getCountStart = () => {\n//   return {\n//     type: 'GET_COUNT_START'\n//   };\n// };\n\n// const getCountSuccess = count => {\n//   return {\n//     type: 'GET_COUNT_SUCCESS',\n//     count\n//   };\n// };\n\n// const getCountFail = err => {\n//   return {\n//     type: 'GET_COUNT_FAIL',\n//     err\n//   };\n// };\n\n// export const getCount = () => {\n//   return (dispatch) => {\n//     dispatch(getCountStart());\n//     axios\n//       .get('http://localhost:8080/api/count')\n//       .then(response => {\n//         const count = parseInt(response.data.count);\n//         dispatch(getCountSuccess(count));\n//       })\n//       .catch(err => {\n//         dispatch(getCountFail(err));\n//       });\n//   };\n// };\n\n\n// Set Status\n// export const setStatusCurPage = curPage => {\n//   return {\n//     type: 'SET_STATUS_CUR_PAGE',\n//     curPage\n//   };\n// };\n\n"]},"metadata":{},"sourceType":"module"}