{"ast":null,"code":"import axios from 'axios'; // Create User\n\nconst createUserStart = () => {\n  return {\n    type: 'CREATE_USER_START'\n  };\n};\n\nconst createUserFail = error => {\n  return {\n    type: 'CREATE_USER_FAIL',\n    error\n  };\n};\n\nconst createUserSuccess = user => {\n  return {\n    type: 'CREATE_USER_SUCCESS',\n    user\n  };\n};\n\nexport const createUser = user => {\n  return dispatch => {\n    dispatch(createUserStart());\n    axios({\n      method: 'POST',\n      url: 'http://localhost:8080/api/users',\n      data: user\n    }).then(response => {\n      console.log(response.data);\n      dispatch(createUserSuccess(response.data.newUser));\n    }).catch(error => {\n      dispatch(createUserFail(error));\n    });\n  };\n}; // Edit User\n\nconst editUserStart = () => {\n  return {\n    type: 'EDIT_USER_START'\n  };\n};\n\nconst editUserFail = error => {\n  return {\n    type: 'EDIT_USER_ERROR',\n    error\n  };\n};\n\nconst editUserSuccess = (id, user) => {\n  return {\n    type: 'EDIT_USER_SUCCESS',\n    id,\n    user\n  };\n};\n\nexport const editUser = (id, user) => {\n  return dispatch => {\n    dispatch(editUserStart());\n    axios.put(\"http://localhost:8080/api/users/\".concat(id), user).then(response => {\n      dispatch(editUserSuccess(id, user)); // console.log('this is in the edit user');\n      // console.log('test: edit user success!!!');\n      // console.log('test edit user id is', id);\n      // console.log('test edit user is', user);\n      //dispatch(getUsers());\n      //console.log(getUsers());\n    }).catch(error => {\n      dispatch(editUserFail(error));\n    });\n  };\n}; // Delete User\n\nconst deleteUserStart = () => {\n  return {\n    type: 'DELETE_USER_START'\n  };\n};\n\nconst deleteUserFail = error => {\n  return {\n    type: 'DELETE_USER_ERROR',\n    error\n  };\n};\n\nconst deleteUserSuccess = id => {\n  return {\n    type: 'DELETE_USER_SUCCESS',\n    id\n  };\n};\n\nexport const deleteUser = (id, deleteUser) => {\n  return dispatch => {\n    dispatch(deleteUserStart());\n    axios.delete(\"http://localhost:8080/api/users/\".concat(id), deleteUser).then(response => {\n      dispatch(deleteUserSuccess(id));\n      dispatch(fetchPage(this.props.curPage, 5));\n      console.log('delete user success');\n    }).catch(error => {\n      dispatch(deleteUserFail(error));\n    });\n  };\n}; // // Get User\n// const getUserStart = () => {\n//   return {\n//     type: 'GET_USER_START'\n//   };\n// };\n// const getUserFail = (error) => {\n//   return {\n//     type: 'GET_USER_ERROR',\n//     error\n//   };\n// };\n// const getUserSuccess = (id) => {\n//   return {\n//     type: 'GET_USER_SUCCESS',\n//     id\n//   };\n// }\n// export const getUser = (id, getUser) => {\n//   return (dispatch) => {\n//     dispatch(getUserStart());\n//     axios\n//       .get(`http://localhost:8080/api/users/${id}`, getUser)\n//       .then(response => {\n//         dispatch(getUserSuccess(id));\n//         console.log('get user success');\n//       })\n//       .catch(error => {\n//         dispatch(getUserFail(error));\n//       });\n//   };\n// };\n// Get Userlist\n// const getUsersStart = () => {\n//   return {\n//     type: 'GET_USERS_START'\n//   };\n// };\n// const getUsersFail = (error) => {\n//   return {\n//     type: 'GET_USERS_ERROR',\n//     error\n//   };\n// };\n// const getUsersSuccess = (response) => {\n//   return {\n//     type: 'GET_USERS_SUCCESS',\n//     data: response\n//   };\n// };\n// export const getUsers = () => {\n//   return (dispatch) => {\n//     dispatch(getUsersStart());\n//     axios\n//       .get('http://localhost:8080/api/users', getUsers)\n//       .then(response => {\n//         dispatch(getUsersSuccess(response.data));\n//       })\n//       .catch(error => {\n//         dispatch(getUsersFail(error));\n//       });\n//   };\n// };\n// Redirect\n\nexport const redirect = () => {\n  return {\n    type: 'REDIRECT'\n  };\n};\nexport const resetRedirect = () => {\n  return {\n    type: 'RESET_REDIRECT'\n  };\n}; // Sort\n\nexport const sortUsers = key => {\n  return {\n    type: 'SORT_USERS',\n    key\n  };\n}; // Search\n\nconst searchStart = () => {\n  return {\n    type: 'SEARCH_START'\n  };\n};\n\nconst searchSuccess = users => {\n  return {\n    type: 'SEARCH_SUCCESS',\n    users\n  };\n};\n\nconst searchFail = error => {\n  return {\n    type: 'SEARCH_FAIL',\n    error\n  };\n};\n\nexport const backToHome = () => {\n  return {\n    type: 'BACK_TO_HOME'\n  };\n};\nexport const search = keyword => {\n  return dispatch => {\n    dispatch(searchStart());\n    axios.get(\"http://localhost:8080/api/search/\".concat(keyword)).then(response => {\n      console.log(\"keyword is \".concat(keyword));\n      dispatch(searchSuccess(response.data)); //dispatch(getUsers());\n    }).catch(error => {\n      dispatch(searchFail(error));\n    });\n  };\n};\nexport const changeSearchInput = input => {\n  return {\n    type: 'CHANGE_SEARCH_INPUT',\n    input\n  };\n}; // export const emptySearchInput = () => {\n//   return {\n//     type: 'EMPTY_SEARCH_INPUT',\n//   }\n// }\n// Fetch Page\n\nconst fetchPageStart = () => {\n  return {\n    type: 'FETCH_PAGE_START'\n  };\n};\n\nconst fetchPageSuccess = (page, pageSize, pageOfUsers) => {\n  return {\n    type: 'FETCH_PAGE_SUCCESS',\n    page,\n    pageSize,\n    pageOfUsers\n  };\n};\n\nconst fetchPageFail = err => {\n  return {\n    type: 'FETCH_PAGE_FAIL',\n    err\n  };\n};\n\nexport const fetchPage = (page, size) => {\n  const startIndex = (page - 1) * size;\n  return dispatch => {\n    dispatch(fetchPageStart());\n    axios.get(\"http://localhost:8080/api/range/\".concat(startIndex, \"/\").concat(size)).then(response => {\n      dispatch(fetchPageSuccess(page, size, response.data));\n    }).catch(err => {\n      dispatch(fetchPageFail(err));\n    });\n  };\n}; // Count Page\n\nconst getCountStart = () => {\n  return {\n    type: 'GET_COUNT_START'\n  };\n};\n\nconst getCountSuccess = count => {\n  return {\n    type: 'GET_COUNT_SUCCESS',\n    count\n  };\n};\n\nconst getCountFail = err => {\n  return {\n    type: 'GET_COUNT_FAIL',\n    err\n  };\n};\n\nexport const getCount = () => {\n  return dispatch => {\n    dispatch(getCountStart());\n    axios.get('http://localhost:8080/api/count').then(response => {\n      const count = parseInt(response.data.count);\n      dispatch(getCountSuccess(count));\n    }).catch(err => {\n      dispatch(getCountFail(err));\n    });\n  };\n}; // export const nextPage = () => {\n//   return{\n//     type: 'NEXT_PAGE',\n//   }\n// }\n// export const jumpToPage = page => {\n//   return{\n//     type: 'JUMP_TO_PAGE',\n//     page,\n//   }\n// }\n// Set Status\n\nexport const setStatusCurPage = curPage => {\n  return {\n    type: 'SET_STATUS_CUR_PAGE',\n    curPage\n  };\n}; // export const setStatusOrder = order => {\n//   return {\n//     type: 'SET_STATUS_ORDER',\n//     order\n//   };\n// };","map":{"version":3,"sources":["/Users/Flora/myapp/src/redux/action-creators/index.js"],"names":["axios","createUserStart","type","createUserFail","error","createUserSuccess","user","createUser","dispatch","method","url","data","then","response","console","log","newUser","catch","editUserStart","editUserFail","editUserSuccess","id","editUser","put","deleteUserStart","deleteUserFail","deleteUserSuccess","deleteUser","delete","fetchPage","props","curPage","redirect","resetRedirect","sortUsers","key","searchStart","searchSuccess","users","searchFail","backToHome","search","keyword","get","changeSearchInput","input","fetchPageStart","fetchPageSuccess","page","pageSize","pageOfUsers","fetchPageFail","err","size","startIndex","getCountStart","getCountSuccess","count","getCountFail","getCount","parseInt","setStatusCurPage"],"mappings":"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","sourcesContent":["import axios from 'axios';\n// Create User\nconst createUserStart = () => {\n  return {\n    type: 'CREATE_USER_START'\n  };  \n};\nconst createUserFail = (error) => {\n  return {\n    type:'CREATE_USER_FAIL',\n    error\n  };\n};\n\nconst createUserSuccess = (user) => {\n  return {\n    type:'CREATE_USER_SUCCESS',\n    user\n  }\n};\n\n \nexport const createUser = (user) => {\n  return (dispatch) => {\n    dispatch(createUserStart());\n    axios({\n      method: 'POST',\n      url: 'http://localhost:8080/api/users',\n      data: user\n    })\n      .then(response => {\n        console.log(response.data);\n        dispatch(createUserSuccess(response.data.newUser));\n      })\n      .catch(error => {\n        dispatch(createUserFail(error));\n      });\n  };\n};\n\n// Edit User\nconst editUserStart = () => {\n  return {\n    type: 'EDIT_USER_START'\n  };\n};\n\nconst editUserFail = (error) => {\n  return {\n    type: 'EDIT_USER_ERROR',\n    error\n  };\n};\n\nconst editUserSuccess = (id, user) => {\n  return {\n    type: 'EDIT_USER_SUCCESS',\n    id,\n    user\n  };\n};\n\nexport const editUser = (id, user) => {\n  return (dispatch) => {\n    dispatch(editUserStart());\n    axios\n      .put(`http://localhost:8080/api/users/${id}`, user)\n      .then(response => {\n        dispatch(editUserSuccess(id, user));\n        // console.log('this is in the edit user');\n        // console.log('test: edit user success!!!');\n        // console.log('test edit user id is', id);\n        // console.log('test edit user is', user);\n        //dispatch(getUsers());\n        //console.log(getUsers());\n      })\n      .catch(error => {\n        dispatch(editUserFail(error));\n      });\n   };\n};\n\n// Delete User\nconst deleteUserStart = () => {\n  return {\n    type: 'DELETE_USER_START'\n  };\n};\n\nconst deleteUserFail = (error) => {\n  return {\n    type: 'DELETE_USER_ERROR',\n    error\n  };\n};\n\nconst deleteUserSuccess = (id) => {\n  return {\n    type: 'DELETE_USER_SUCCESS',\n    id\n  };\n};\n\nexport const deleteUser = (id, deleteUser) => {\n  return (dispatch) => {\n    dispatch(deleteUserStart());\n    axios\n      .delete(`http://localhost:8080/api/users/${id}`, deleteUser)\n      .then(response => {\n        dispatch(deleteUserSuccess(id));\n        dispatch(fetchPage(this.props.curPage, 5));\n        console.log('delete user success');\n      })\n      .catch(error => {\n        dispatch(deleteUserFail(error));\n      });\n  };\n};\n\n// // Get User\n// const getUserStart = () => {\n//   return {\n//     type: 'GET_USER_START'\n//   };\n// };\n\n// const getUserFail = (error) => {\n//   return {\n//     type: 'GET_USER_ERROR',\n//     error\n//   };\n// };\n\n// const getUserSuccess = (id) => {\n//   return {\n//     type: 'GET_USER_SUCCESS',\n//     id\n//   };\n// }\n\n// export const getUser = (id, getUser) => {\n//   return (dispatch) => {\n//     dispatch(getUserStart());\n//     axios\n//       .get(`http://localhost:8080/api/users/${id}`, getUser)\n//       .then(response => {\n//         dispatch(getUserSuccess(id));\n//         console.log('get user success');\n//       })\n//       .catch(error => {\n//         dispatch(getUserFail(error));\n//       });\n//   };\n// };\n\n// Get Userlist\n// const getUsersStart = () => {\n//   return {\n//     type: 'GET_USERS_START'\n//   };\n// };\n\n// const getUsersFail = (error) => {\n//   return {\n//     type: 'GET_USERS_ERROR',\n//     error\n//   };\n// };\n\n// const getUsersSuccess = (response) => {\n//   return {\n//     type: 'GET_USERS_SUCCESS',\n//     data: response\n//   };\n// };\n\n// export const getUsers = () => {\n//   return (dispatch) => {\n//     dispatch(getUsersStart());\n//     axios\n//       .get('http://localhost:8080/api/users', getUsers)\n//       .then(response => {\n//         dispatch(getUsersSuccess(response.data));\n//       })\n//       .catch(error => {\n//         dispatch(getUsersFail(error));\n//       });\n//   };\n// };\n\n// Redirect\nexport const redirect = () => {\n  return {\n    type: 'REDIRECT'\n  };\n};\n\nexport const resetRedirect = () => {\n  return {\n    type: 'RESET_REDIRECT'\n  };\n};\n\n\n// Sort\nexport const sortUsers = key => {\n  return {\n    type: 'SORT_USERS',\n    key\n  };\n};\n\n\n// Search\nconst searchStart = () => {\n  return {\n    type: 'SEARCH_START'\n  };\n};\n\nconst searchSuccess = (users) => {\n  return {\n    type: 'SEARCH_SUCCESS',\n    users,\n  };\n};\n\nconst searchFail = error => {\n  return {\n    type: 'SEARCH_FAIL',\n    error\n  };\n};\n\nexport const backToHome = () => {\n  return {\n    type: 'BACK_TO_HOME'\n  }\n}\nexport const search = (keyword) => {\n  return (dispatch) => {\n    dispatch(searchStart());\n    axios\n      .get(`http://localhost:8080/api/search/${keyword}`)\n      .then(response => {\n        console.log(`keyword is ${keyword}`);\n        dispatch(searchSuccess(response.data));\n        //dispatch(getUsers());\n      })\n      .catch(error => {\n        dispatch(searchFail(error));\n      });\n  }\n}\n\nexport const changeSearchInput = (input) => {\n  return {\n    type: 'CHANGE_SEARCH_INPUT',\n    input\n  };\n};\n\n// export const emptySearchInput = () => {\n//   return {\n//     type: 'EMPTY_SEARCH_INPUT',\n//   }\n// }\n\n// Fetch Page\nconst fetchPageStart = () => {\n  return {\n    type: 'FETCH_PAGE_START'\n  };\n};\n\nconst fetchPageSuccess = (page, pageSize, pageOfUsers) => {\n  return {\n    type: 'FETCH_PAGE_SUCCESS',\n    page,\n    pageSize,\n    pageOfUsers\n  };\n};\n\nconst fetchPageFail = err => {\n  return {\n    type: 'FETCH_PAGE_FAIL',\n    err\n  };\n};\n\nexport const fetchPage = (page, size) => {\n  const startIndex = (page - 1) * size;\n  return (dispatch) => {\n    dispatch(fetchPageStart());\n    axios\n      .get(`http://localhost:8080/api/range/${startIndex}/${size}`)\n      .then(response => {\n        dispatch(fetchPageSuccess(page, size, response.data));\n      })\n      .catch(err => {\n        dispatch(fetchPageFail(err));\n      });\n  }\n}\n\n// Count Page\nconst getCountStart = () => {\n  return {\n    type: 'GET_COUNT_START'\n  };\n};\n\nconst getCountSuccess = count => {\n  return {\n    type: 'GET_COUNT_SUCCESS',\n    count\n  };\n};\n\nconst getCountFail = err => {\n  return {\n    type: 'GET_COUNT_FAIL',\n    err\n  };\n};\n\nexport const getCount = () => {\n  return (dispatch) => {\n    dispatch(getCountStart());\n    axios\n      .get('http://localhost:8080/api/count')\n      .then(response => {\n        const count = parseInt(response.data.count);\n        dispatch(getCountSuccess(count));\n      })\n      .catch(err => {\n        dispatch(getCountFail(err));\n      });\n  };\n};\n\n// export const nextPage = () => {\n//   return{\n//     type: 'NEXT_PAGE',\n//   }\n// }\n\n// export const jumpToPage = page => {\n//   return{\n//     type: 'JUMP_TO_PAGE',\n//     page,\n//   }\n// }\n\n// Set Status\nexport const setStatusCurPage = curPage => {\n  return {\n    type: 'SET_STATUS_CUR_PAGE',\n    curPage\n  };\n};\n\n// export const setStatusOrder = order => {\n//   return {\n//     type: 'SET_STATUS_ORDER',\n//     order\n//   };\n// };"]},"metadata":{},"sourceType":"module"}