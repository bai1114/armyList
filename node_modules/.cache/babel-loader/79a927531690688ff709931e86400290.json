{"ast":null,"code":"import axios from 'axios'; // Create User\n\nconst createSoldierStart = () => {\n  return {\n    type: 'CREATE_SOLDIER_START'\n  };\n};\n\nconst createSoldierFail = error => {\n  return {\n    type: 'CREATE_SOLDIER_FAIL',\n    error\n  };\n};\n\nconst createSoldierSuccess = user => {\n  return {\n    type: 'CREATE_SOLDIER_SUCCESS',\n    user\n  };\n};\n\nexport const createSoldier = soldier => {\n  return dispatch => {\n    dispatch(createSoldierStart());\n    axios({\n      method: 'POST',\n      url: 'http://localhost:5000/api',\n      data: soldier\n    }).then(response => {\n      console.log(response.data);\n      dispatch(createSoldierSuccess(response.data.soldier));\n    }).catch(error => {\n      dispatch(createSoldierFail(error));\n    });\n  };\n}; // Edit User\n\nconst editSoldierStart = () => {\n  return {\n    type: 'EDIT_SOLDIER_START'\n  };\n};\n\nconst editSoldierFail = error => {\n  return {\n    type: 'EDIT_SOLDIER_ERROR',\n    error\n  };\n};\n\nconst editSoldierSuccess = (id, user) => {\n  return {\n    type: 'EDIT_SOLDIER_SUCCESS',\n    id,\n    user\n  };\n};\n\nexport const editSoldier = (id, soldier) => {\n  return dispatch => {\n    dispatch(editSoldierStart());\n    axios.put(\"http://localhost:5000/api/edit/\".concat(id), soldier).then(response => {\n      dispatch(editSoldierSuccess(id, soldier)); //redirect home\n    }).catch(error => {\n      dispatch(editSoldierFail(error));\n    });\n  };\n}; // Delete User\n\nconst deleteSoldierStart = () => {\n  return {\n    type: 'DELETE_SOLDIER_START'\n  };\n};\n\nconst deleteSoldierFail = error => {\n  return {\n    type: 'DELETE_SOLDIER_ERROR',\n    error\n  };\n};\n\nconst deleteSoldierSuccess = id => {\n  return {\n    type: 'DELETE_SOLDIER_SUCCESS',\n    id\n  };\n};\n\nexport const deleteSoldier = id => {\n  return dispatch => {\n    dispatch(deleteSoldierStart());\n    console.log('delete id is ', id);\n    axios.delete(\"http://localhost:5000/api/delete/\".concat(id)).then(response => {\n      dispatch(deleteSoldierSuccess(id));\n      console.log('delete soldier success');\n    }).catch(error => {\n      dispatch(deleteSoldierFail(error));\n    });\n  };\n}; // Get Users\n// const getUsersStart = () => {\n//   return {\n//     type: 'GET_USERS_START'\n//   };\n// };\n// const getUsersFail = (error) => {\n//   return {\n//     type: 'GET_USERS_ERROR',\n//     error\n//   };\n// };\n// const getUsersSuccess = (response) => {\n//   return {\n//     type: 'GET_USERS_SUCCESS',\n//     data: response\n//   };\n// };\n// export const getUsers = () => {\n//   return (dispatch) => {\n//     dispatch(getUsersStart());\n//     axios\n//       .get('http://localhost:8080/api/', getUsers)\n//       .then(response => {\n//         dispatch(getUsersSuccess(response.data.users));\n//       })\n//       .catch(error => {\n//         dispatch(getUsersFail(error));\n//       });\n//   };\n// };\n// Redirect\n// export const redirect = () => {\n//   return {\n//     type: 'REDIRECT'\n//   };\n// };\n// export const resetRedirect = () => {\n//   return {\n//     type: 'RESET_REDIRECT'\n//   };\n// };\n// Sort\n// export const sortUsers = key => {\n//   return {\n//     type: 'SORT_USERS',\n//     key\n//   };\n// };\n// Search\n// const searchStart = () => {\n//   return {\n//     type: 'SEARCH_START'\n//   };\n// };\n// const searchSuccess = (users) => {\n//   return {\n//     type: 'SEARCH_SUCCESS',\n//     users,\n//   };\n// };\n// const searchFail = error => {\n//   return {\n//     type: 'SEARCH_FAIL',\n//     error\n//   };\n// };\n// export const search = (keyword) => {\n//   return (dispatch) => {\n//     dispatch(searchStart());\n//     axios\n//       .get(`http://localhost:8080/api/search/${keyword}`)\n//       .then(response => {\n//         console.log(`keyword is ${keyword}`);\n//         dispatch(searchSuccess(response.data));\n//       })\n//       .catch(error => {\n//         dispatch(searchFail(error));\n//       });\n//   }\n// }\n// export const changeSearchInput = (input) => {\n//   return {\n//     type: 'CHANGE_SEARCH_INPUT',\n//     input\n//   };\n// };\n// Fetch Page\n\nconst fetchSoldiersStart = () => {\n  return {\n    type: 'FETCH_SOLDIERS_START'\n  };\n};\n\nconst fetchSoldiersSuccess = soldiers => {\n  return {\n    type: 'FETCH_SOLDIERS_SUCCESS',\n    soldiers\n  };\n};\n\nconst fetchSoldiersFail = err => {\n  return {\n    type: 'FETCH_SOLDIERS_FAIL',\n    err\n  };\n};\n\nexport const fetchSoldiers = () => {\n  return dispatch => {\n    dispatch(fetchSoldiersStart());\n    axios.get('http://localhost:5000/api/').then(response => {\n      console.log('action test', response.data.soldiers);\n      dispatch(fetchSoldiersSuccess(response.data.soldiers));\n    }).catch(err => {\n      dispatch(fetchSoldiersFail(err));\n    });\n  };\n}; // // Count Page\n// const getCountStart = () => {\n//   return {\n//     type: 'GET_COUNT_START'\n//   };\n// };\n// const getCountSuccess = count => {\n//   return {\n//     type: 'GET_COUNT_SUCCESS',\n//     count\n//   };\n// };\n// const getCountFail = err => {\n//   return {\n//     type: 'GET_COUNT_FAIL',\n//     err\n//   };\n// };\n// export const getCount = () => {\n//   return (dispatch) => {\n//     dispatch(getCountStart());\n//     axios\n//       .get('http://localhost:8080/api/count')\n//       .then(response => {\n//         const count = parseInt(response.data.count);\n//         dispatch(getCountSuccess(count));\n//       })\n//       .catch(err => {\n//         dispatch(getCountFail(err));\n//       });\n//   };\n// };\n// Set Status\n// export const setStatusCurPage = curPage => {\n//   return {\n//     type: 'SET_STATUS_CUR_PAGE',\n//     curPage\n//   };\n// };","map":{"version":3,"sources":["/Users/Flora/myapp/src/redux/action-creators/index.js"],"names":["axios","createSoldierStart","type","createSoldierFail","error","createSoldierSuccess","user","createSoldier","soldier","dispatch","method","url","data","then","response","console","log","catch","editSoldierStart","editSoldierFail","editSoldierSuccess","id","editSoldier","put","deleteSoldierStart","deleteSoldierFail","deleteSoldierSuccess","deleteSoldier","delete","fetchSoldiersStart","fetchSoldiersSuccess","soldiers","fetchSoldiersFail","err","fetchSoldiers","get"],"mappings":"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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,MAAMyB,kBAAkB,GAAG,MAAM;AAC/B,SAAO;AACL3B,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJD;;AAMA,MAAM4B,oBAAoB,GAAIC,QAAD,IAAc;AACzC,SAAO;AACL7B,IAAAA,IAAI,EAAE,wBADD;AAEL6B,IAAAA;AAFK,GAAP;AAID,CALD;;AAOA,MAAMC,iBAAiB,GAAGC,GAAG,IAAI;AAC/B,SAAO;AACL/B,IAAAA,IAAI,EAAE,qBADD;AAEL+B,IAAAA;AAFK,GAAP;AAID,CALD;;AAOA,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC,SAAQzB,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACoB,kBAAkB,EAAnB,CAAR;AACA7B,IAAAA,KAAK,CACFmC,GADH,CACO,4BADP,EAEGtB,IAFH,CAEQC,QAAQ,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BF,QAAQ,CAACF,IAAT,CAAcmB,QAAxC;AACAtB,MAAAA,QAAQ,CAACqB,oBAAoB,CAAChB,QAAQ,CAACF,IAAT,CAAcmB,QAAf,CAArB,CAAR;AACD,KALH,EAMGd,KANH,CAMSgB,GAAG,IAAI;AACZxB,MAAAA,QAAQ,CAACuB,iBAAiB,CAACC,GAAD,CAAlB,CAAR;AACD,KARH;AASD,GAXD;AAYD,CAbM,C,CAeP;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from 'axios';\n// Create User\nconst createSoldierStart = () => {\n  return {\n    type: 'CREATE_SOLDIER_START'\n  };  \n};\nconst createSoldierFail = (error) => {\n  return {\n    type:'CREATE_SOLDIER_FAIL',\n    error\n  };\n};\n\nconst createSoldierSuccess = (user) => {\n  return {\n    type:'CREATE_SOLDIER_SUCCESS',\n    user\n  }\n};\n\n \nexport const createSoldier = (soldier) => {\n  return (dispatch) => {\n    dispatch(createSoldierStart());\n    axios({\n      method: 'POST',\n      url: 'http://localhost:5000/api',\n      data: soldier\n    })\n      .then(response => {\n        console.log(response.data);\n        dispatch(createSoldierSuccess(response.data.soldier));\n      })\n      .catch(error => {\n        dispatch(createSoldierFail(error));\n      });\n  };\n};\n\n// Edit User\nconst editSoldierStart = () => {\n  return {\n    type: 'EDIT_SOLDIER_START'\n  };\n};\n\nconst editSoldierFail = (error) => {\n  return {\n    type: 'EDIT_SOLDIER_ERROR',\n    error\n  };\n};\n\nconst editSoldierSuccess = (id, user) => {\n  return {\n    type: 'EDIT_SOLDIER_SUCCESS',\n    id,\n    user\n  };\n};\n\nexport const editSoldier = (id, soldier) => {\n  return (dispatch) => {\n    dispatch(editSoldierStart());\n    axios\n      .put(`http://localhost:5000/api/edit/${id}`, soldier)\n      .then(response => {\n        dispatch(editSoldierSuccess(id, soldier));\n        //redirect home\n      })\n      .catch(error => {\n        dispatch(editSoldierFail(error));\n      });\n   };\n};\n\n// Delete User\nconst deleteSoldierStart = () => {\n  return {\n    type: 'DELETE_SOLDIER_START'\n  };\n};\n\nconst deleteSoldierFail = (error) => {\n  return {\n    type: 'DELETE_SOLDIER_ERROR',\n    error\n  };\n};\n\nconst deleteSoldierSuccess = (id) => {\n  return {\n    type: 'DELETE_SOLDIER_SUCCESS',\n    id\n  };\n};\n\nexport const deleteSoldier = (id) => {\n  return (dispatch) => {\n    dispatch(deleteSoldierStart());\n    console.log('delete id is ', id);\n    axios\n      .delete(`http://localhost:5000/api/delete/${id}`)\n      \n      .then(response => {\n        dispatch(deleteSoldierSuccess(id));\n        console.log('delete soldier success');\n      })\n      .catch(error => {\n        dispatch(deleteSoldierFail(error));\n      });\n  };\n};\n\n// Get Users\n// const getUsersStart = () => {\n//   return {\n//     type: 'GET_USERS_START'\n//   };\n// };\n\n// const getUsersFail = (error) => {\n//   return {\n//     type: 'GET_USERS_ERROR',\n//     error\n//   };\n// };\n\n// const getUsersSuccess = (response) => {\n//   return {\n//     type: 'GET_USERS_SUCCESS',\n//     data: response\n//   };\n// };\n\n// export const getUsers = () => {\n//   return (dispatch) => {\n//     dispatch(getUsersStart());\n//     axios\n//       .get('http://localhost:8080/api/', getUsers)\n//       .then(response => {\n//         dispatch(getUsersSuccess(response.data.users));\n//       })\n//       .catch(error => {\n//         dispatch(getUsersFail(error));\n//       });\n//   };\n// };\n\n// Redirect\n// export const redirect = () => {\n//   return {\n//     type: 'REDIRECT'\n//   };\n// };\n\n// export const resetRedirect = () => {\n//   return {\n//     type: 'RESET_REDIRECT'\n//   };\n// };\n\n\n// Sort\n// export const sortUsers = key => {\n//   return {\n//     type: 'SORT_USERS',\n//     key\n//   };\n// };\n\n\n// Search\n// const searchStart = () => {\n//   return {\n//     type: 'SEARCH_START'\n//   };\n// };\n\n// const searchSuccess = (users) => {\n//   return {\n//     type: 'SEARCH_SUCCESS',\n//     users,\n//   };\n// };\n\n// const searchFail = error => {\n//   return {\n//     type: 'SEARCH_FAIL',\n//     error\n//   };\n// };\n\n// export const search = (keyword) => {\n//   return (dispatch) => {\n//     dispatch(searchStart());\n//     axios\n//       .get(`http://localhost:8080/api/search/${keyword}`)\n//       .then(response => {\n//         console.log(`keyword is ${keyword}`);\n//         dispatch(searchSuccess(response.data));\n//       })\n//       .catch(error => {\n//         dispatch(searchFail(error));\n//       });\n//   }\n// }\n\n// export const changeSearchInput = (input) => {\n//   return {\n//     type: 'CHANGE_SEARCH_INPUT',\n//     input\n//   };\n// };\n\n// Fetch Page\nconst fetchSoldiersStart = () => {\n  return {\n    type: 'FETCH_SOLDIERS_START'\n  };\n};\n\nconst fetchSoldiersSuccess = (soldiers) => {\n  return {\n    type: 'FETCH_SOLDIERS_SUCCESS',\n    soldiers\n  };\n};\n\nconst fetchSoldiersFail = err => {\n  return {\n    type: 'FETCH_SOLDIERS_FAIL',\n    err\n  };\n};\n\nexport const fetchSoldiers = () => {\n  return (dispatch) => {\n    dispatch(fetchSoldiersStart());\n    axios\n      .get('http://localhost:5000/api/')\n      .then(response => {\n        console.log('action test',response.data.soldiers);\n        dispatch(fetchSoldiersSuccess(response.data.soldiers));\n      })\n      .catch(err => {\n        dispatch(fetchSoldiersFail(err));\n      });\n  }\n}\n\n// // Count Page\n// const getCountStart = () => {\n//   return {\n//     type: 'GET_COUNT_START'\n//   };\n// };\n\n// const getCountSuccess = count => {\n//   return {\n//     type: 'GET_COUNT_SUCCESS',\n//     count\n//   };\n// };\n\n// const getCountFail = err => {\n//   return {\n//     type: 'GET_COUNT_FAIL',\n//     err\n//   };\n// };\n\n// export const getCount = () => {\n//   return (dispatch) => {\n//     dispatch(getCountStart());\n//     axios\n//       .get('http://localhost:8080/api/count')\n//       .then(response => {\n//         const count = parseInt(response.data.count);\n//         dispatch(getCountSuccess(count));\n//       })\n//       .catch(err => {\n//         dispatch(getCountFail(err));\n//       });\n//   };\n// };\n\n\n// Set Status\n// export const setStatusCurPage = curPage => {\n//   return {\n//     type: 'SET_STATUS_CUR_PAGE',\n//     curPage\n//   };\n// };\n\n"]},"metadata":{},"sourceType":"module"}