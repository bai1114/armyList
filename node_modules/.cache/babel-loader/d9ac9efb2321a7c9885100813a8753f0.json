{"ast":null,"code":"var _jsxFileName = \"/Users/Flora/myapp/src/containers/App/index.js\";\nimport React, { Component } from 'react'; //import { getUsers } from '../../redux/action-creators';\n\nimport { BrowserRouter, Router, Switch } from 'react-router-dom';\nimport UserList from '../../components/UserList'; // import CreateUser from '../../components/CreateUser';\n// import EditUser from '../../components/EditUser';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.getUsers();\n  }\n\n  render() {\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(Router, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(UserList, {\n        users: this.props.users,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }), React.createElement(Router, {\n      path: \"/\",\n      render: props => React.createElement(Home, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.getUsers.users\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUsers: () => {\n      dispatch(getUsers());\n    }\n  };\n};\n\nexport default connect((mapStateToProps, mapDispatchToProps), App);","map":{"version":3,"sources":["/Users/Flora/myapp/src/containers/App/index.js"],"names":["React","Component","BrowserRouter","Router","Switch","UserList","App","componentDidMount","props","getUsers","render","users","mapStateToProps","state","mapDispatchToProps","dispatch","connect"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,MAAhC,QAA8C,kBAA9C;AACA,OAAOC,QAAP,MAAqB,2BAArB,C,CACA;AACA;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAC1BM,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,QAAX;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAI,IAAjB;AAAuB,MAAA,IAAI,EAAG,GAA9B;AACE,MAAA,MAAM,EAAKF,KAAD,IAAW,oBAAC,QAAD;AACnB,QAAA,KAAK,EAAI,KAAKA,KAAL,CAAWG,KADD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAG,GAAf;AAAmB,MAAA,MAAM,EAAKH,KAAD,IAAW,oBAAC,IAAD,oBAAUA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADJ,CADF;AAeD;;AApByB;;AAuB5B,MAAMI,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLF,IAAAA,KAAK,EAAEE,KAAK,CAACJ,QAAN,CAAeE;AADjB,GAAP;AAGD,CAJD;;AAMA,MAAMG,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLN,IAAAA,QAAQ,EAAE,MAAM;AACdM,MAAAA,QAAQ,CAACN,QAAQ,EAAT,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;AAOA,eAAeO,OAAO,EAAEJ,eAAe,EAAEE,kBAAnB,GAAuCR,GAAvC,CAAtB","sourcesContent":["import React, { Component } from 'react';\n//import { getUsers } from '../../redux/action-creators';\nimport { BrowserRouter, Router, Switch } from 'react-router-dom';\nimport UserList from '../../components/UserList';\n// import CreateUser from '../../components/CreateUser';\n// import EditUser from '../../components/EditUser';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.getUsers();\n  }\n  render() {\n    return (\n      <BrowserRouter>\n          <Switch>\n            <Router exact = {true} path = '/' \n              render = {(props) => <UserList \n                users = {this.props.users}\n\n              /> } \n            />\n            <Router path = '/' render = {(props) => <Home {...props}/>} />\n            {/* <Router path = '/users' component = {CreateUser} /> */}\n            {/* <Router path = '/users/:user_id' component = {EditUser} /> */}\n          </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    users: state.getUsers.users\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getUsers: () => {\n      dispatch(getUsers());\n    },\n  }\n};\nexport default connect((mapStateToProps, mapDispatchToProps),App);\n\n"]},"metadata":{},"sourceType":"module"}