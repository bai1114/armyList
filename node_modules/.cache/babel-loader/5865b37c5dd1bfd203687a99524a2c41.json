{"ast":null,"code":"import _objectSpread from \"/Users/Flora/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nconst initState = {\n  soldiers: [],\n  isLoading: false,\n  isFetching: false,\n  err: null,\n  isSearching: false,\n  showSoldiers: [],\n  sorted: false\n};\n\nconst soldiers = (state = initState, action) => {\n  switch (action.type) {\n    // Delete User\n    case 'DELETE_SOLDIER_START':\n      return _objectSpread({}, state, {\n        isLoading: true\n      });\n\n    case 'DELETE_SOLDIER_ERROR':\n      return _objectSpread({}, state, {\n        isLoading: false,\n        err: action.error\n      });\n\n    case 'DELETE_SOLDIER_SUCCESS':\n      let index = state.pageOfUsers.findIndex(item => item._id === action.id);\n      let newCurPage = state.curPage;\n\n      if (state.pageOfUsers.length === 1) {\n        newCurPage -= 1;\n      }\n\n      return _objectSpread({}, state, {\n        curPage: newCurPage,\n        pageOfUsers: [...state.pageOfUsers.slice(0, index), ...state.pageOfUsers.slice(index + 1)],\n        isLoading: false,\n        count: state.count - 1,\n        err: null\n      });\n    // Create New User \n    // case 'CREATE_USER_START':\n    //   return {\n    //     ...state,\n    //     isLoading: true\n    //   };\n    // case 'CREATE_USER_FAIL':\n    //   return {\n    //     ...state,\n    //     isLoading: false,\n    //     err: action.error\n    //   };\n    // case 'CREATE_USER_SUCCESS':\n    //   const totalPages = Math.ceil(state.count / state.pageSize);\n    //   let newPage = totalPages;\n    //   if(state.pageOfUsers.length === state.pageSize) {\n    //     newPage += 1;\n    //   }\n    //     return {\n    //       ...state,\n    //       isLoading: false,\n    //       pageOfUsers:[\n    //         ...state.pageOfUsers,\n    //         action.user,\n    //       ],\n    //       curPage : newPage,\n    //     };\n    //Edit User \n    // case 'EDIT_SOLDIER_START':\n    //   return {\n    //     ...state,\n    //     isLoading: true\n    //   };\n    // case 'EDIT_SOLDIER_ERROR':\n    //   return {\n    //     ...state,\n    //     isLoading: false,\n    //     err: action.error\n    //   };\n    // case 'EDIT_SOLDIER_SUCCESS':\n    //   let newUser = state.pageOfUsers.map(user => {\n    //     if (user._id === action.id) {\n    //       return action.user;\n    //     } else {\n    //       return user;\n    //     }\n    //   });\n    //   return {\n    //     ...state,\n    //     isLoading: false,\n    //     pageOfUsers: newUser\n    //   };\n    // Sort Users\n    // case 'SORT_USERS': {\n    //   const sortedUsers = [...state.pageOfUsers]; \n    //   const key = action.key;\n    //   sortedUsers.sort((user1, user2) => {\n    //     if (typeof(user1[key]) === 'number') {\n    //       if (user1[key] === user2[key]) {\n    //         return 0;\n    //       }\n    //       return user1[key] < user2[key] ? -1 : 1;\n    //     }\n    //     return user1[key].toLowerCase().localeCompare(user2[key].toLowerCase());\n    //   });\n    //   return {\n    //     ...state,\n    //     pageOfUsers: sortedUsers,\n    //   };\n    // }\n    // Fetch Soldiers\n\n    case 'FETCH_SOLDIERS_START':\n      return _objectSpread({}, state, {\n        isLoading: true,\n        isFetching: true\n      });\n\n    case 'FETCH_SOLDIERS_SUCCESS':\n      {\n        return _objectSpread({}, state, {\n          soldiers: action.soldiers,\n          isLoading: false,\n          isFetching: false,\n          err: null,\n          sorted: true\n        });\n      }\n\n    case 'FETCH_SOLDIERS_FAIL':\n      return {\n        // ...state,\n        isLoading: false,\n        isFetching: false,\n        err: action.error\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default soldiers; // Get UserList \n// case 'GET_USERS_START':\n//   return {\n//     ...state,\n//     isLoading: true,\n//     err: null\n//   };\n// case 'GET_USERS_FAIL':\n//   return {\n//     ...state,\n//     isLoading: false,\n//     err: action.error\n//   };\n// case 'GET_USERS_SUCCESS':\n//   return {\n//     ...state,\n//     isLoading: false,\n//     err: null,\n//     users: action.data\n//   };\n// Count Page\n//  case 'GET_COUNT_START':\n//   return {\n//     ...state,\n//     isLoading: true\n//   };\n// case 'GET_COUNT_SUCCESS':\n// return {\n//   ...state,\n//   count: action.count,\n//   isLoading: false,\n//   err: null\n// };\n// case 'GET_COUNT_FAIL':\n// return {\n//   ...state,\n//   isLoading: false,\n//   err: action.error\n// }\n// Search User\n// case 'SEARCH_START' : {\n//   return {\n//     ...state,\n//     isLoading: true,\n//   }\n// }\n// case 'SEARCH_SUCCESS' : {\n//   return {\n//       ...state,\n//       searchUsers : action.users,\n//       isSearching : true,\n//       isLoading: false,\n//   }\n// }\n// case 'SEARCH_FAIL' : {\n//   return {\n//     ...state,\n//     isLoading: false,\n//     isSearching: false,\n//     err: action.error\n//   }\n// }","map":{"version":3,"sources":["/Users/Flora/myapp/src/redux/reducer/soldiers.js"],"names":["initState","soldiers","isLoading","isFetching","err","isSearching","showSoldiers","sorted","state","action","type","error","index","pageOfUsers","findIndex","item","_id","id","newCurPage","curPage","length","slice","count"],"mappings":";AAAA,MAAMA,SAAS,GAAG;AAChBC,EAAAA,QAAQ,EAAE,EADM;AAEhBC,EAAAA,SAAS,EAAE,KAFK;AAGhBC,EAAAA,UAAU,EAAE,KAHI;AAIhBC,EAAAA,GAAG,EAAE,IAJW;AAKhBC,EAAAA,WAAW,EAAE,KALG;AAMhBC,EAAAA,YAAY,EAAE,EANE;AAOhBC,EAAAA,MAAM,EAAE;AAPQ,CAAlB;;AAUA,MAAMN,QAAQ,GAAG,CAACO,KAAK,GAAGR,SAAT,EAAoBS,MAApB,KAA+B;AAC9C,UAAOA,MAAM,CAACC,IAAd;AAGE;AACA,SAAK,sBAAL;AACE,+BACKF,KADL;AAEEN,QAAAA,SAAS,EAAE;AAFb;;AAIF,SAAK,sBAAL;AACE,+BACKM,KADL;AAEEN,QAAAA,SAAS,EAAE,KAFb;AAGEE,QAAAA,GAAG,EAAEK,MAAM,CAACE;AAHd;;AAKF,SAAK,wBAAL;AACE,UAAIC,KAAK,GAAGJ,KAAK,CAACK,WAAN,CAAkBC,SAAlB,CAA6BC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaP,MAAM,CAACQ,EAA1D,CAAZ;AACA,UAAIC,UAAU,GAAGV,KAAK,CAACW,OAAvB;;AACA,UAAGX,KAAK,CAACK,WAAN,CAAkBO,MAAlB,KAA6B,CAAhC,EAAmC;AACjCF,QAAAA,UAAU,IAAI,CAAd;AACD;;AACD,+BACKV,KADL;AAEEW,QAAAA,OAAO,EAAED,UAFX;AAGEL,QAAAA,WAAW,EAAE,CACX,GAAGL,KAAK,CAACK,WAAN,CAAkBQ,KAAlB,CAAwB,CAAxB,EAA2BT,KAA3B,CADQ,EAEX,GAAGJ,KAAK,CAACK,WAAN,CAAkBQ,KAAlB,CAAwBT,KAAK,GAAG,CAAhC,CAFQ,CAHf;AAOEV,QAAAA,SAAS,EAAC,KAPZ;AAQEoB,QAAAA,KAAK,EAAEd,KAAK,CAACc,KAAN,GAAc,CARvB;AASElB,QAAAA,GAAG,EAAE;AATP;AAYF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AACA,SAAK,sBAAL;AACE,+BACKI,KADL;AAEEN,QAAAA,SAAS,EAAE,IAFb;AAGEC,QAAAA,UAAU,EAAE;AAHd;;AAKF,SAAK,wBAAL;AAA+B;AAC7B,iCACKK,KADL;AAEEP,UAAAA,QAAQ,EAAEQ,MAAM,CAACR,QAFnB;AAGEC,UAAAA,SAAS,EAAE,KAHb;AAIEC,UAAAA,UAAU,EAAE,KAJd;AAKEC,UAAAA,GAAG,EAAE,IALP;AAMEG,UAAAA,MAAM,EAAE;AANV;AAQD;;AACD,SAAK,qBAAL;AACE,aAAO;AACL;AACAL,QAAAA,SAAS,EAAE,KAFN;AAGLC,QAAAA,UAAU,EAAE,KAHP;AAILC,QAAAA,GAAG,EAAEK,MAAM,CAACE;AAJP,OAAP;;AAMF;AACE,aAAOH,KAAP;AApIJ;AAsID,CAvID;;AAyIA,eAAeP,QAAf,C,CAIC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["const initState = {\n  soldiers: [],\n  isLoading: false,\n  isFetching: false,\n  err: null,\n  isSearching: false,\n  showSoldiers: [],\n  sorted: false,\n};\n\nconst soldiers = (state = initState, action) => {\n  switch(action.type) {\n   \n    \n    // Delete User\n    case 'DELETE_SOLDIER_START':\n      return {\n        ...state,\n        isLoading: true\n      };\n    case 'DELETE_SOLDIER_ERROR':\n      return {\n        ...state,\n        isLoading: false,\n        err: action.error\n      };\n    case 'DELETE_SOLDIER_SUCCESS':\n      let index = state.pageOfUsers.findIndex((item) => item._id === action.id);\n      let newCurPage = state.curPage;\n      if(state.pageOfUsers.length === 1) {\n        newCurPage -= 1;\n      }\n      return {\n        ...state,\n        curPage: newCurPage,\n        pageOfUsers: [\n          ...state.pageOfUsers.slice(0, index),\n          ...state.pageOfUsers.slice(index + 1)\n        ],\n        isLoading:false,\n        count: state.count - 1,\n        err: null,\n      };\n    \n    // Create New User \n    // case 'CREATE_USER_START':\n    //   return {\n    //     ...state,\n    //     isLoading: true\n    //   };\n    // case 'CREATE_USER_FAIL':\n    //   return {\n    //     ...state,\n    //     isLoading: false,\n    //     err: action.error\n    //   };\n    // case 'CREATE_USER_SUCCESS':\n    //   const totalPages = Math.ceil(state.count / state.pageSize);\n    //   let newPage = totalPages;\n    //   if(state.pageOfUsers.length === state.pageSize) {\n    //     newPage += 1;\n    //   }\n    //     return {\n    //       ...state,\n    //       isLoading: false,\n    //       pageOfUsers:[\n    //         ...state.pageOfUsers,\n    //         action.user,\n    //       ],\n    //       curPage : newPage,\n    //     };\n    \n    //Edit User \n    // case 'EDIT_SOLDIER_START':\n    //   return {\n    //     ...state,\n    //     isLoading: true\n    //   };\n    // case 'EDIT_SOLDIER_ERROR':\n    //   return {\n    //     ...state,\n    //     isLoading: false,\n    //     err: action.error\n    //   };\n    // case 'EDIT_SOLDIER_SUCCESS':\n    //   let newUser = state.pageOfUsers.map(user => {\n    //     if (user._id === action.id) {\n    //       return action.user;\n    //     } else {\n    //       return user;\n    //     }\n    //   });\n    //   return {\n    //     ...state,\n    //     isLoading: false,\n    //     pageOfUsers: newUser\n    //   };\n    \n    // Sort Users\n    // case 'SORT_USERS': {\n    //   const sortedUsers = [...state.pageOfUsers]; \n    //   const key = action.key;\n    //   sortedUsers.sort((user1, user2) => {\n    //     if (typeof(user1[key]) === 'number') {\n    //       if (user1[key] === user2[key]) {\n    //         return 0;\n    //       }\n    //       return user1[key] < user2[key] ? -1 : 1;\n    //     }\n    //     return user1[key].toLowerCase().localeCompare(user2[key].toLowerCase());\n    //   });\n    //   return {\n    //     ...state,\n    //     pageOfUsers: sortedUsers,\n    //   };\n    // }\n\n\n    // Fetch Soldiers\n    case 'FETCH_SOLDIERS_START':\n      return {\n        ...state,\n        isLoading: true,\n        isFetching: true,\n      };\n    case 'FETCH_SOLDIERS_SUCCESS': {   \n      return {\n        ...state,\n        soldiers: action.soldiers,\n        isLoading: false,\n        isFetching: false,\n        err: null,\n        sorted: true\n      };\n    }\n    case 'FETCH_SOLDIERS_FAIL':\n      return {\n        // ...state,\n        isLoading: false,\n        isFetching: false,\n        err: action.error\n      };\n    default:\n      return state;\n  }\n};\n\nexport default soldiers;\n\n\n\n // Get UserList \n// case 'GET_USERS_START':\n//   return {\n//     ...state,\n//     isLoading: true,\n//     err: null\n//   };\n// case 'GET_USERS_FAIL':\n//   return {\n//     ...state,\n//     isLoading: false,\n//     err: action.error\n//   };\n// case 'GET_USERS_SUCCESS':\n//   return {\n//     ...state,\n//     isLoading: false,\n//     err: null,\n//     users: action.data\n//   };\n\n // Count Page\n//  case 'GET_COUNT_START':\n//   return {\n//     ...state,\n//     isLoading: true\n//   };\n// case 'GET_COUNT_SUCCESS':\n// return {\n//   ...state,\n//   count: action.count,\n//   isLoading: false,\n//   err: null\n// };\n// case 'GET_COUNT_FAIL':\n// return {\n//   ...state,\n//   isLoading: false,\n//   err: action.error\n// }\n\n  // Search User\n// case 'SEARCH_START' : {\n//   return {\n//     ...state,\n//     isLoading: true,\n//   }\n// }\n// case 'SEARCH_SUCCESS' : {\n//   return {\n//       ...state,\n//       searchUsers : action.users,\n//       isSearching : true,\n//       isLoading: false,\n//   }\n// }\n// case 'SEARCH_FAIL' : {\n//   return {\n//     ...state,\n//     isLoading: false,\n//     isSearching: false,\n//     err: action.error\n//   }\n// }\n    \n\n"]},"metadata":{},"sourceType":"module"}