{"ast":null,"code":"import _objectSpread from \"/Users/Flora/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nconst initState = {\n  isLoading: false,\n  //users:[],\n  err: null,\n  isSearching: false,\n  searchUsers: [],\n  curPage: 1,\n  count: 0,\n  pageSize: 5,\n  startIndex: 0,\n  pageOfUsers: [],\n  pageNumber: 0\n};\n\nconst getUsers = (state = initState, action) => {\n  switch (action.type) {\n    // Get UserList \n    case 'GET_USERS_START':\n      return _objectSpread({}, state, {\n        isLoading: true,\n        err: null\n      });\n\n    case 'GET_USERS_FAIL':\n      return _objectSpread({}, state, {\n        isLoading: false,\n        err: action.error\n      });\n\n    case 'GET_USERS_SUCCESS':\n      return _objectSpread({}, state, {\n        isLoading: false,\n        err: null,\n        users: action.data\n      });\n    // Delete User\n\n    case 'DELETE_USER_START':\n      return _objectSpread({}, state, {\n        isLoading: true\n      });\n\n    case 'DELETE_USER_ERROR':\n      return _objectSpread({}, state, {\n        isLoading: false,\n        err: action.error\n      });\n\n    case 'DELETE_USER_SUCCESS':\n      let index = state.pageOfUsers.findIndex(item => item._id === action.id);\n      return _objectSpread({}, state, {\n        pageOfUsers: [...state.pageOfUsers.slice(0, index), ...state.pageOfUsers.slice(index + 1)],\n        // users: state.users.filter(user => user._id !== action.id),\n        isLoading: false,\n        err: null\n      });\n    // Create New User \n\n    case 'CREATE_USER_START':\n      return _objectSpread({}, state, {\n        isLoading: true\n      });\n\n    case 'CREATE_USER_FAIL':\n      return _objectSpread({}, state, {\n        isLoading: false,\n        err: action.error\n      });\n\n    case 'CREATE_USER_SUCCESS':\n      // const newUsers = state.users;\n      // newUsers.push(action.user);\n      if (state.pageOfUsers.length < state.pageSize) {\n        return _objectSpread({}, state, {\n          isLoading: false,\n          pageOfUsers: [...state.pageOfUsers, action.user]\n        });\n      } else {\n        return state;\n      }\n\n    // Edit User \n\n    case 'EDIT_USER_START':\n      return _objectSpread({}, state, {\n        isLoading: true\n      });\n\n    case 'EDIT_USER_ERROR':\n      return _objectSpread({}, state, {\n        isLoading: false,\n        err: action.error\n      });\n\n    case 'EDIT_USER_SUCCESS':\n      let newUser = state.pageOfUsers.map(user => {\n        if (user._id === action.id) {\n          return action.user;\n        } else {\n          return user;\n        }\n      });\n      return _objectSpread({}, state, {\n        isLoading: false,\n        // err: null,\n        pageNumber: newUser\n      });\n    // Sort Users\n\n    case 'SORT_USERS':\n      {\n        const sortedUsers = [...state.pageOfUsers]; //user -- page of users pagination之后需要改\n\n        const key = action.key;\n        sortedUsers.sort((user1, user2) => {\n          if (typeof user1[key] === 'number') {\n            if (user1[key] === user2[key]) {\n              return 0;\n            }\n\n            return user1[key] < user2[key] ? -1 : 1;\n          }\n\n          return user1[key].toLowerCase().localeCompare(user2[key].toLowerCase());\n        }); //做完search之后需要加的\n        // const newSearch = [...state.searchUsers]; \n        // sortedUsers.sort((user1, user2) => {\n        //   if (user1[key] === user2[key]) {\n        //     return 0;\n        //   }\n        //   return user1[key] < user2[key] ? -1 : 1;\n        // });\n\n        return _objectSpread({}, state, {\n          pageOfUsers: sortedUsers //searchUsers : newSearch\n\n        });\n      }\n    // Search User\n\n    case 'SEARCH_START':\n      {\n        return _objectSpread({}, state, {\n          isLoading: true\n        });\n      }\n\n    case 'SEARCH_SUCCESS':\n      {\n        return _objectSpread({}, state, {\n          searchUsers: action.users,\n          isSearching: true,\n          isLoading: false\n        });\n      }\n\n    case 'SEARCH_FAIL':\n      {\n        return _objectSpread({}, state, {\n          isLoading: false,\n          isSearching: false,\n          err: action.error\n        });\n      }\n\n    case 'BACK_TO_HOME':\n      {\n        return _objectSpread({}, state, {\n          searchedUser: [],\n          isSearching: false\n        });\n      }\n    // Fetch Page\n\n    case 'FETCH_PAGE_START':\n      return _objectSpread({}, state, {\n        isFetching: true\n      });\n\n    case 'FETCH_PAGE_SUCCESS':\n      {\n        const size = state.pageSize;\n        const curPage = action.page;\n        const startIndex = (curPage - 1) * size;\n        return _objectSpread({}, state, {\n          pageOfUsers: action.pageOfUsers,\n          isFetching: false,\n          err: '',\n          curPage,\n          startIndex,\n          pageSize: action.pageSize\n        });\n      }\n\n    case 'FETCH_PAGE_FAIL':\n      return _objectSpread({}, state, {\n        isFetching: false,\n        err: action.err\n      });\n\n    case 'FETCH_START':\n      {\n        return _objectSpread({}, state, {\n          isFetching: true\n        });\n      }\n\n    case 'FETCH_SUCCESS':\n      {\n        return {\n          type: 'FETCH_SUCCESS',\n          isFetching: false,\n          curUserList: action.users,\n          matrix: action.matrix\n        };\n      }\n\n    case 'FETCH_FAIL':\n      {\n        return _objectSpread({}, state, {\n          isFetching: false,\n          err: action.err\n        });\n      }\n    // Count Page\n\n    case 'GET_COUNT_START':\n      return _objectSpread({}, state, {\n        isFetching: true\n      });\n\n    case 'GET_COUNT_SUCCESS':\n      return _objectSpread({}, state, {\n        count: action.count,\n        isFetching: false,\n        err: ''\n      });\n\n    case 'GET_COUNT_FAIL':\n      return _objectSpread({}, state, {\n        isFetching: false,\n        err: action.err\n      });\n\n    case 'JUMP_TO_PAGE':\n      {\n        return _objectSpread({}, state, {\n          pageNumber: action.page\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default getUsers; // case 'GET_USER_START':\n//   return {\n//     ...state,\n//     isLoading: true\n//   };\n// case 'GET_USER_ERROR':\n//   return {\n//     ...state,\n//     isLoading: false,\n//     err: action.error\n//   };\n// case 'GET_USER_SUCCESS':\n//   return {\n//     ...state,\n//     users: state.users.filter(user => user._id === action.id),\n//     isLoading:false,\n//     err: null,\n//   };","map":{"version":3,"sources":["/Users/Flora/myapp/src/redux/reducer/getUsers.js"],"names":["initState","isLoading","err","isSearching","searchUsers","curPage","count","pageSize","startIndex","pageOfUsers","pageNumber","getUsers","state","action","type","error","users","data","index","findIndex","item","_id","id","slice","length","user","newUser","map","sortedUsers","key","sort","user1","user2","toLowerCase","localeCompare","searchedUser","isFetching","size","page","curUserList","matrix"],"mappings":"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","sourcesContent":["const initState = {\n  isLoading: false,\n  //users:[],\n  err: null,\n  isSearching: false,\n  searchUsers: [],\n\n  curPage: 1,\n  count: 0,\n  pageSize: 5,\n  startIndex: 0,\n  pageOfUsers: [],\n  pageNumber: 0,\n};\n\nconst getUsers = (state = initState, action) => {\n  switch(action.type) {\n    // Get UserList \n    case 'GET_USERS_START':\n      return {\n        ...state,\n        isLoading: true,\n        err: null\n      };\n    case 'GET_USERS_FAIL':\n      return {\n        ...state,\n        isLoading: false,\n        err: action.error\n      };\n    case 'GET_USERS_SUCCESS':\n      return {\n        ...state,\n        isLoading: false,\n        err: null,\n        users: action.data\n      };\n    \n    // Delete User\n    case 'DELETE_USER_START':\n      return {\n        ...state,\n        isLoading: true\n      };\n    case 'DELETE_USER_ERROR':\n      return {\n        ...state,\n        isLoading: false,\n        err: action.error\n      };\n    case 'DELETE_USER_SUCCESS':\n      let index = state.pageOfUsers.findIndex((item) => item._id === action.id);\n\n      return {\n        ...state,\n        pageOfUsers: [\n          ...state.pageOfUsers.slice(0, index),\n          ...state.pageOfUsers.slice(index + 1)\n        ],\n       // users: state.users.filter(user => user._id !== action.id),\n        isLoading:false,\n        err: null,\n      };\n    \n    // Create New User \n    case 'CREATE_USER_START':\n      return {\n        ...state,\n        isLoading: true\n      };\n    case 'CREATE_USER_FAIL':\n      return {\n        ...state,\n        isLoading: false,\n        err: action.error\n      };\n    case 'CREATE_USER_SUCCESS':\n      // const newUsers = state.users;\n      // newUsers.push(action.user);\n      if (state.pageOfUsers.length < state.pageSize) {\n        return {\n          ...state,\n          isLoading: false,\n          pageOfUsers:[\n            ...state.pageOfUsers,\n            action.user,\n          ]\n        };\n      } else {\n        return state;\n      }\n     \n    \n    // Edit User \n    case 'EDIT_USER_START':\n      return {\n        ...state,\n        isLoading: true\n      };\n    case 'EDIT_USER_ERROR':\n      return {\n        ...state,\n        isLoading: false,\n        err: action.error\n      };\n    case 'EDIT_USER_SUCCESS':\n      let newUser = state.pageOfUsers.map(user => {\n        if (user._id === action.id) {\n          return action.user;\n        } else {\n          return user;\n        }\n      });\n      return {\n        ...state,\n        isLoading: false,\n        // err: null,\n        pageNumber: newUser\n      };\n    \n    // Sort Users\n    case 'SORT_USERS': {\n      const sortedUsers = [...state.pageOfUsers]; //user -- page of users pagination之后需要改\n      const key = action.key;\n      sortedUsers.sort((user1, user2) => {\n        if (typeof(user1[key]) === 'number') {\n          if (user1[key] === user2[key]) {\n            return 0;\n          }\n          return user1[key] < user2[key] ? -1 : 1;\n        }\n        return user1[key].toLowerCase().localeCompare(user2[key].toLowerCase());\n      });\n      //做完search之后需要加的\n      // const newSearch = [...state.searchUsers]; \n      // sortedUsers.sort((user1, user2) => {\n      //   if (user1[key] === user2[key]) {\n      //     return 0;\n      //   }\n      //   return user1[key] < user2[key] ? -1 : 1;\n      // });\n      return {\n        ...state,\n        pageOfUsers: sortedUsers,\n        //searchUsers : newSearch\n      };\n    }\n\n    // Search User\n    case 'SEARCH_START' : {\n      return {\n        ...state,\n        isLoading: true,\n      }\n    }\n    case 'SEARCH_SUCCESS' : {\n      return {\n          ...state,\n          searchUsers : action.users,\n          isSearching : true,\n          isLoading: false,\n      }\n    }\n    case 'SEARCH_FAIL' : {\n      return {\n        ...state,\n        isLoading: false,\n        isSearching: false,\n        err: action.error\n      }\n    }\n    case 'BACK_TO_HOME' : {\n      \n      return{\n        ...state,\n        searchedUser : [],\n        isSearching : false,\n      }\n      \n    }\n    \n    // Fetch Page\n    case 'FETCH_PAGE_START':\n      return {\n        ...state,\n        isFetching: true\n      };\n    case 'FETCH_PAGE_SUCCESS': {\n      const size = state.pageSize;\n      const curPage = action.page;\n      const startIndex = (curPage - 1) * size;\n      return {\n        ...state,\n        pageOfUsers: action.pageOfUsers,\n        isFetching: false,\n        err: '',\n        curPage,\n        startIndex,\n        pageSize: action.pageSize\n      };\n    }\n    case 'FETCH_PAGE_FAIL':\n      return {\n        ...state,\n        isFetching: false,\n        err: action.err\n      };\n    \n    case 'FETCH_START' : {\n      return {\n        ...state,\n        isFetching : true,\n      };\n    }\n    case 'FETCH_SUCCESS' : {\n      return {\n        type: 'FETCH_SUCCESS',\n        isFetching : false,\n        curUserList : action.users,\n        matrix: action.matrix,\n      };\n    }\n    case 'FETCH_FAIL' : {\n      return {\n        ...state,\n        isFetching: false,\n        err: action.err\n      };\n    }\n    // Count Page\n    case 'GET_COUNT_START':\n        return {\n          ...state,\n          isFetching: true\n        };\n    case 'GET_COUNT_SUCCESS':\n      return {\n        ...state,\n        count: action.count,\n        isFetching: false,\n        err: ''\n      };\n    case 'GET_COUNT_FAIL':\n      return {\n        ...state,\n        isFetching: false,\n        err: action.err\n      }\n    case 'JUMP_TO_PAGE' : {\n      return{\n        ...state,\n        pageNumber : action.page,\n        \n      }\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport default getUsers;\n\n\n  // case 'GET_USER_START':\n    //   return {\n    //     ...state,\n    //     isLoading: true\n    //   };\n    // case 'GET_USER_ERROR':\n    //   return {\n    //     ...state,\n    //     isLoading: false,\n    //     err: action.error\n    //   };\n    // case 'GET_USER_SUCCESS':\n    //   return {\n    //     ...state,\n    //     users: state.users.filter(user => user._id === action.id),\n    //     isLoading:false,\n    //     err: null,\n    //   };"]},"metadata":{},"sourceType":"module"}