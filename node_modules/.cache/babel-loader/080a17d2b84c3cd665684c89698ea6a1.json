{"ast":null,"code":"import axios from 'axios';\n\nconst createUserStart = () => {\n  return {\n    type: 'CREATE_USER_START'\n  };\n};\n\nconst createUserFail = error => {\n  return {\n    type: 'CREATE_USER_FAIL',\n    error\n  };\n};\n\nconst createUserSuccess = response => {\n  return {\n    type: 'CREATE_USER_SUCCESS',\n    data: response\n  };\n};\n\nconst updateUserStart = () => {\n  return {\n    type: 'UPDATE_USER_START'\n  };\n};\n\nconst updateUserFail = error => {\n  return {\n    type: 'UPDATE_USER_ERROR',\n    error\n  };\n};\n\nconst updateUserSuccess = response => {\n  return {\n    type: 'UPDATE_USER_SUCCESS',\n    data: response\n  };\n};\n\nexport const createUsers = () => {\n  return dispatch => {\n    dispatch(createUserStart());\n    axios.put('https://api.github.com/users').then(response => {\n      dispatch(createUserSuccess(response.data));\n    }).catch(error => {\n      dispatch(createUserFail(error));\n    });\n  };\n};\nexport const updateUser = (id, updateUser) => {\n  return dispatch => {\n    dispatch(updateUserStart());\n    axios.put(\"https://localhost:8080/api/users/\".concat(id), updateUser).then(response => {\n      dispatch(updateUserSuccess(response.data));\n    }).catch(error => {\n      dispatch(updateUserFail(error));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/Flora/myapp/src/redux/action-creators/index.js"],"names":["axios","createUserStart","type","createUserFail","error","createUserSuccess","response","data","updateUserStart","updateUserFail","updateUserSuccess","createUsers","dispatch","put","then","catch","updateUser","id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAC5B,SAAO;AACLC,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJD;;AAKA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAChC,SAAO;AACLF,IAAAA,IAAI,EAAC,kBADA;AAELE,IAAAA;AAFK,GAAP;AAID,CALD;;AAOA,MAAMC,iBAAiB,GAAIC,QAAD,IAAc;AACtC,SAAO;AACLJ,IAAAA,IAAI,EAAC,qBADA;AAELK,IAAAA,IAAI,EAAED;AAFD,GAAP;AAID,CALD;;AAOA,MAAME,eAAe,GAAG,MAAM;AAC5B,SAAO;AACLN,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJD;;AAMA,MAAMO,cAAc,GAAIL,KAAD,IAAW;AAChC,SAAO;AACLF,IAAAA,IAAI,EAAE,mBADD;AAELE,IAAAA;AAFK,GAAP;AAID,CALD;;AAOA,MAAMM,iBAAiB,GAAIJ,QAAD,IAAc;AACtC,SAAO;AACLJ,IAAAA,IAAI,EAAE,qBADD;AAELK,IAAAA,IAAI,EAAED;AAFD,GAAP;AAID,CALD;;AAOA,OAAO,MAAMK,WAAW,GAAG,MAAM;AAC/B,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACX,eAAe,EAAhB,CAAR;AACAD,IAAAA,KAAK,CAACa,GAAN,CAAU,8BAAV,EACGC,IADH,CACQR,QAAQ,IAAI;AAChBM,MAAAA,QAAQ,CAACP,iBAAiB,CAACC,QAAQ,CAACC,IAAV,CAAlB,CAAR;AACD,KAHH,EAIGQ,KAJH,CAISX,KAAK,IAAI;AACdQ,MAAAA,QAAQ,CAACT,cAAc,CAACC,KAAD,CAAf,CAAR;AACD,KANH;AAOD,GATD;AAUD,CAXM;AAeP,OAAO,MAAMY,UAAU,GAAG,CAACC,EAAD,EAAKD,UAAL,KAAoB;AAC5C,SAAQJ,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACJ,eAAe,EAAhB,CAAR;AACAR,IAAAA,KAAK,CAACa,GAAN,4CAA8CI,EAA9C,GAAoDD,UAApD,EACGF,IADH,CACQR,QAAQ,IAAI;AAChBM,MAAAA,QAAQ,CAACF,iBAAiB,CAACJ,QAAQ,CAACC,IAAV,CAAlB,CAAR;AACD,KAHH,EAIGQ,KAJH,CAISX,KAAK,IAAI;AACdQ,MAAAA,QAAQ,CAACH,cAAc,CAACL,KAAD,CAAf,CAAR;AACD,KANH;AAOD,GATD;AAUD,CAXM","sourcesContent":["import axios from 'axios';\n\nconst createUserStart = () => {\n  return {\n    type: 'CREATE_USER_START'\n  };  \n};\nconst createUserFail = (error) => {\n  return {\n    type:'CREATE_USER_FAIL',\n    error\n  };\n};\n\nconst createUserSuccess = (response) => {\n  return {\n    type:'CREATE_USER_SUCCESS',\n    data: response\n  }\n};\n\nconst updateUserStart = () => {\n  return {\n    type: 'UPDATE_USER_START'\n  };\n};\n\nconst updateUserFail = (error) => {\n  return {\n    type: 'UPDATE_USER_ERROR',\n    error\n  };\n};\n\nconst updateUserSuccess = (response) => {\n  return {\n    type: 'UPDATE_USER_SUCCESS',\n    data: response\n  };\n}\n\nexport const createUsers = () => {\n  return (dispatch) => {\n    dispatch(createUserStart());\n    axios.put('https://api.github.com/users')\n      .then(response => {\n        dispatch(createUserSuccess(response.data));\n      })\n      .catch(error => {\n        dispatch(createUserFail(error));\n      });\n  };\n};\n\n\n\nexport const updateUser = (id, updateUser) => {\n  return (dispatch) => {\n    dispatch(updateUserStart());\n    axios.put(`https://localhost:8080/api/users/${id}`, updateUser)\n      .then(response => {\n        dispatch(updateUserSuccess(response.data));\n      })\n      .catch(error => {\n        dispatch(updateUserFail(error));\n      });\n  };\n};\n\n"]},"metadata":{},"sourceType":"module"}