{"ast":null,"code":"var _jsxFileName = \"/Users/Flora/myapp/src/containers/Pagination/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPage, getCount, setStatusCurPage, resetRedirect } from '../../redux/action-creators';\n\nclass Pagination extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setCurPage = curPage => {\n      //const { dispatch } = this.props;\n      this.props.getCount();\n      this.props.fetchPage(curPage, 5); // this.props.setStatusCurPage(curPage);\n      // dispatch(fetchPage(curPage, 5));\n      // dispatch(setStatusCurPage(curPage));\n\n      const pageSize = this.props.pageSize;\n      const count = this.props.count;\n      const pageNumber = [];\n      const totalPages = Math.ceil(count / pageSize); //console.log('Testing totalPages is~~ ', totalPages);\n\n      let startPage = 1,\n          endPage = totalPages;\n\n      for (let i = startPage; i <= endPage; i++) {\n        pageNumber.push(i);\n      }\n\n      this.setState({\n        pageNumber\n      }); //console.log('Testing pageProp is~~ ', this.props.pageProp);\n    };\n\n    this.state = {\n      pageNumber: []\n    };\n  } // componentDidMount() {\n  //   this.setCurPage(1);\n  //   this.props.resetRedirect();\n  // }\n  //一会加上\n\n\n  componentDidUpdate(prevProps) {\n    if (this.props.count !== prevProps.count) {\n      this.setCurPage(this.props.status.curPage);\n    } //console.log('componentDidUpdate count', this.props.count);\n\n  }\n\n  render() {\n    // const pageProp = this.props.page;\n    // const pageNumber = this.state.pageNumber;\n    // const { count } = pageProp.count;\n    // const { pageSize } = pageProp.pageSize;\n    // const totalPages = Math.ceil(count / pageSize);\n    const pageNumber = this.state.pageNumber;\n    const count = this.props.count;\n    const pageSize = this.props.pageSize;\n    const totalPages = Math.ceil(count / pageSize);\n    console.log('Testing count is~~ ', count);\n    console.log('Testing pageNumber is~~ ', pageNumber);\n    console.log('Testing pageSize is~~ ', pageSize);\n    return React.createElement(\"ul\", {\n      className: \"pagination\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"page-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.props.curPage === 1 ? '' : React.createElement(\"a\", {\n      className: \"page-link\",\n      onClick: () => this.setCurPage(this.props.curPage - 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Previous\")), pageNumber.map(page => {\n      return React.createElement(\"li\", {\n        key: page,\n        className: \"page-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: () => this.setCurPage(page),\n        className: \"page-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, page));\n    }), React.createElement(\"li\", {\n      className: \"page-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.props.curPage === totalPages ? '' : React.createElement(\"a\", {\n      onClick: () => this.setCurPage(this.props.curPage + 1),\n      className: \"page-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Next\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    status: state.status,\n    pageOfUsers: state.getUsers.pageOfUsers,\n    curPage: state.getUsers.curPage,\n    pageSize: state.getUsers.pageSize,\n    count: state.getUsers.count\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    resetRedirect: () => {\n      dispatch(resetRedirect());\n    },\n    fetchPage: (page, size) => {\n      dispatch(fetchPage(page, size));\n    },\n    setStatusCurPage: page => {\n      dispatch(setStatusCurPage(page));\n    },\n    getCount: () => {\n      dispatch(getCount());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pagination);","map":{"version":3,"sources":["/Users/Flora/myapp/src/containers/Pagination/index.js"],"names":["React","Component","connect","fetchPage","getCount","setStatusCurPage","resetRedirect","Pagination","constructor","props","setCurPage","curPage","pageSize","count","pageNumber","totalPages","Math","ceil","startPage","endPage","i","push","setState","state","componentDidUpdate","prevProps","status","render","console","log","map","page","mapStateToProps","pageOfUsers","getUsers","mapDispatchToProps","dispatch","size"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPage, getCount, setStatusCurPage, resetRedirect } from '../../redux/action-creators';\n\nclass Pagination extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pageNumber: []\n    };\n  }\n\n  // componentDidMount() {\n  //   this.setCurPage(1);\n  //   this.props.resetRedirect();\n  // }\n\n  //一会加上\n  componentDidUpdate(prevProps) {\n    if (this.props.count !== prevProps.count) {\n      this.setCurPage(this.props.status.curPage);\n    }\n    //console.log('componentDidUpdate count', this.props.count);\n  }\n\n  setCurPage = curPage => {\n    //const { dispatch } = this.props;\n    this.props.getCount();\n    this.props.fetchPage(curPage, 5);\n    // this.props.setStatusCurPage(curPage);\n    // dispatch(fetchPage(curPage, 5));\n    // dispatch(setStatusCurPage(curPage));\n    const pageSize = this.props.pageSize;\n    const count = this.props.count;\n    const pageNumber = [];\n  \n    const totalPages = Math.ceil(count / pageSize);\n    //console.log('Testing totalPages is~~ ', totalPages);\n    let startPage = 1, endPage = totalPages;\n    for (let i = startPage; i <= endPage; i++) {\n      pageNumber.push(i);\n    }\n    this.setState({ pageNumber });\n\n    //console.log('Testing pageProp is~~ ', this.props.pageProp);\n    \n  };\n\n\n\n  render() {\n    // const pageProp = this.props.page;\n    // const pageNumber = this.state.pageNumber;\n    // const { count } = pageProp.count;\n    // const { pageSize } = pageProp.pageSize;\n    // const totalPages = Math.ceil(count / pageSize);\n    const pageNumber = this.state.pageNumber;\n    const  count  = this.props.count;\n    const  pageSize  = this.props.pageSize;\n    const totalPages = Math.ceil(count / pageSize);\n\n    console.log('Testing count is~~ ', count);\n    console.log('Testing pageNumber is~~ ', pageNumber);\n    console.log('Testing pageSize is~~ ', pageSize);\n    return (\n      <ul className=\"pagination\">\n        <li className=\"page-item\">\n          {this.props.curPage === 1 ? '' : <a className=\"page-link\" onClick={() => this.setCurPage(this.props.curPage - 1)} >Previous</a>}\n        </li>\n        {pageNumber.map(page => {\n          return (\n            <li key={page} className=\"page-item\">\n              <a onClick={() => this.setCurPage(page)} className=\"page-link\">{page}</a>\n            </li>\n          );\n        })}\n        <li className=\"page-item\">\n          {this.props.curPage === totalPages ? '' : <a onClick={() => this.setCurPage(this.props.curPage + 1)} className=\"page-link\" >Next</a>}\n        </li>\n      </ul>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    status: state.status,\n    pageOfUsers: state.getUsers.pageOfUsers,\n    curPage: state.getUsers.curPage,\n    pageSize: state.getUsers.pageSize,\n    count: state.getUsers.count\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    resetRedirect: () => {\n      dispatch(resetRedirect());\n    },\n    fetchPage: (page, size) => {\n      dispatch(fetchPage(page, size));\n    },\n    setStatusCurPage: (page) => {\n      dispatch(setStatusCurPage(page));\n    },\n    getCount: () => {\n      dispatch(getCount());\n    }\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pagination);"]},"metadata":{},"sourceType":"module"}