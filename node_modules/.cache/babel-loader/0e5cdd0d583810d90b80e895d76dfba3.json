{"ast":null,"code":"import _objectSpread from \"/Users/Flora/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/Flora/myapp/src/components/EditSoldier/index.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nclass EditSoldier extends Component {\n  constructor(props) {\n    super(props);\n\n    this.filterSuperior = () => {\n      const result = [];\n      this.traverse(this.props._id, result);\n      this.setState({\n        filteredSuperiors: result\n      });\n    };\n\n    this.traverse = (_id, list) => {\n      if (!_id || _id === '') {\n        return;\n      }\n\n      list.push(_id);\n      let directSubs = this.getDirectSubs(_id);\n\n      for (let ds of directSubs) {\n        this.traverse(ds, list);\n      }\n    };\n\n    this.getDirectSubs = _id => {\n      let result = [];\n      const soldiers = this.props.soldiers;\n\n      for (let soldier of soldiers) {\n        if (soldier.superiorId === _id) {\n          result.push(soldier._id);\n        }\n      }\n\n      return result;\n    };\n\n    this.handleChange = (e, key) => {\n      e.preventDefault();\n      const newObject = {};\n      newObject[key] = e.target.value;\n\n      const info = _objectSpread({}, this.state.info, newObject);\n\n      const changed = _objectSpread({}, this.state.changedInfo);\n\n      changed[key] = e.target.value;\n      this.setState({\n        info,\n        changedInfo: changed\n      });\n    };\n\n    this.handleSuperiorChange = e => {\n      let idName = e.target.value.split(' ');\n      const superiorId = idName[0];\n      const superiorName = idName[1];\n      const newObject = {\n        superiorId,\n        superiorName\n      };\n\n      const info = _objectSpread({}, this.state.info, newObject);\n\n      const changed = _objectSpread({}, this.state.changedInfo, {\n        superiorId\n      });\n\n      this.setState({\n        info,\n        changedInfo: changed\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      let changedInfo;\n\n      if (this.props.image.imgUrl !== '') {\n        changedInfo = _objectSpread({}, this.state.changedInfo, {\n          imgUrl: this.props.image.imgUrl\n        });\n      } else {\n        changedInfo = _objectSpread({}, this.state.changedInfo);\n      }\n\n      this.props.editSoldier(this.props.id, changedInfo);\n      this.setState({\n        redirect: true\n      });\n    };\n\n    this.state = {\n      info: {\n        _id: null,\n        name: '',\n        sex: '',\n        rank: '',\n        startDate: '',\n        phone: '',\n        email: '',\n        superiorId: null,\n        superiorName: '',\n        numberOfDirectSubs: 0,\n        imgUrl: ''\n      },\n      changedInfo: {},\n      redirect: false,\n      filteredSuperiors: []\n    };\n  }\n\n  componentDidMount() {\n    for (let i = 0; i < this.props.soldiers.length; i++) {\n      if (this.props.soldiers[i]._id === this.props.id) {\n        this.setState({\n          info: this.props.soldiers[i]\n        });\n        console.log('startDate', this.props.soldiers[i].startDate);\n      }\n    }\n\n    this.filterSuperior();\n    setTimeout(() => {\n      this.setState({\n        filteredSuperiors: [...this.state.filteredSuperiors, this.state.info.superiorId]\n      });\n    }, 0);\n  }\n\n  render() {\n    console.log('id', this.props.id);\n    const candidateSuperiors = this.props.soldiers.filter(superior => {\n      return !this.state.filteredSuperiors.includes(superior._id);\n    });\n    const _this$state = this.state,\n          info = _this$state.info,\n          redirect = _this$state.redirect;\n    console.log('redirect', redirect);\n    console.log('isloading', this.props.isLoading);\n\n    if (redirect && !this.props.isLoading) {\n      return React.createElement(Redirect, {\n        to: {\n          pathname: '/'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      });\n    } else {\n      console.log('month', info.startDate.getMonth());\n      return React.createElement(\"div\", {\n        className: \"edit_user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Edit Soldier\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group col-md-50\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Name:\"), React.createElement(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        id: \"name\",\n        value: info.name,\n        onChange: e => this.handleChange(e, 'name'),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group col-md-50\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"sex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Sex:\"), React.createElement(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        id: \"sex\",\n        value: info.sex,\n        onChange: e => this.handleChange(e, 'sex'),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group col-md-50\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"rank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Rank:\"), React.createElement(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        id: \"rank\",\n        value: info.rank,\n        onChange: e => this.handleChange(e, 'rank'),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group col-md-50\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"startDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Start Date:\"), React.createElement(\"input\", {\n        type: \"date\",\n        class: \"form-control\",\n        id: \"startDate\",\n        value: info.startDate.getMonth(),\n        onChange: e => this.handleChange(e, 'startDate'),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group col-md-50\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"phone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Phone:\"), React.createElement(\"input\", {\n        type: \"number\",\n        class: \"form-control\",\n        id: \"phone\",\n        value: info.phone,\n        onChange: e => this.handleChange(e, 'phone'),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group col-md-50\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Email:\"), React.createElement(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        id: \"email\",\n        value: info.email,\n        onChange: e => this.handleChange(e, 'email'),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group col-md-50\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"Superior:\"), React.createElement(\"div\", {\n        className: \"col col-sm-10 col-lg-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        id: \"manager\",\n        onChange: this.handleSuperiorChange,\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, info.superiorName), candidateSuperiors.map(superior => {\n        return React.createElement(\"option\", {\n          key: superior._id,\n          value: superior._id + \" \" + superior.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, superior.name);\n      })))), React.createElement(\"button\", {\n        className: \"btn btn-success\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Save Change\")));\n    }\n  }\n\n}\n\nexport default EditSoldier;","map":{"version":3,"sources":["/Users/Flora/myapp/src/components/EditSoldier/index.js"],"names":["React","Component","Redirect","EditSoldier","constructor","props","filterSuperior","result","traverse","_id","setState","filteredSuperiors","list","push","directSubs","getDirectSubs","ds","soldiers","soldier","superiorId","handleChange","e","key","preventDefault","newObject","target","value","info","state","changed","changedInfo","handleSuperiorChange","idName","split","superiorName","handleSubmit","image","imgUrl","editSoldier","id","redirect","name","sex","rank","startDate","phone","email","numberOfDirectSubs","componentDidMount","i","length","console","log","setTimeout","render","candidateSuperiors","filter","superior","includes","isLoading","pathname","getMonth","map"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAClCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAmCnBC,cAnCmB,GAmCF,MAAM;AACrB,YAAMC,MAAM,GAAG,EAAf;AACA,WAAKC,QAAL,CAAc,KAAKH,KAAL,CAAWI,GAAzB,EAA8BF,MAA9B;AACA,WAAKG,QAAL,CAAc;AAACC,QAAAA,iBAAiB,EAAEJ;AAApB,OAAd;AACD,KAvCkB;;AAAA,SAyCnBC,QAzCmB,GAyCR,CAACC,GAAD,EAAMG,IAAN,KAAe;AACxB,UAAI,CAACH,GAAD,IAAQA,GAAG,KAAK,EAApB,EAAwB;AACtB;AACD;;AACDG,MAAAA,IAAI,CAACC,IAAL,CAAUJ,GAAV;AACA,UAAIK,UAAU,GAAG,KAAKC,aAAL,CAAmBN,GAAnB,CAAjB;;AACA,WAAK,IAAIO,EAAT,IAAeF,UAAf,EAA2B;AACzB,aAAKN,QAAL,CAAcQ,EAAd,EAAkBJ,IAAlB;AACD;AACF,KAlDkB;;AAAA,SAmDnBG,aAnDmB,GAmDHN,GAAG,IAAI;AACrB,UAAIF,MAAM,GAAG,EAAb;AACA,YAAMU,QAAQ,GAAG,KAAKZ,KAAL,CAAWY,QAA5B;;AACA,WAAK,IAAIC,OAAT,IAAoBD,QAApB,EAA8B;AAC5B,YAAIC,OAAO,CAACC,UAAR,KAAuBV,GAA3B,EAAgC;AAC9BF,UAAAA,MAAM,CAACM,IAAP,CAAYK,OAAO,CAACT,GAApB;AACD;AACF;;AACD,aAAOF,MAAP;AACD,KA5DkB;;AAAA,SA+DnBa,YA/DmB,GA+DJ,CAACC,CAAD,EAAIC,GAAJ,KAAY;AACzBD,MAAAA,CAAC,CAACE,cAAF;AACA,YAAMC,SAAS,GAAG,EAAlB;AACAA,MAAAA,SAAS,CAACF,GAAD,CAAT,GAAiBD,CAAC,CAACI,MAAF,CAASC,KAA1B;;AACA,YAAMC,IAAI,qBACL,KAAKC,KAAL,CAAWD,IADN,EAELH,SAFK,CAAV;;AAIA,YAAMK,OAAO,qBAAO,KAAKD,KAAL,CAAWE,WAAlB,CAAb;;AACAD,MAAAA,OAAO,CAACP,GAAD,CAAP,GAAeD,CAAC,CAACI,MAAF,CAASC,KAAxB;AACA,WAAKhB,QAAL,CAAc;AAAEiB,QAAAA,IAAF;AAAQG,QAAAA,WAAW,EAAED;AAArB,OAAd;AACD,KA1EkB;;AAAA,SA4EnBE,oBA5EmB,GA4EIV,CAAC,IAAI;AAC1B,UAAIW,MAAM,GAAGX,CAAC,CAACI,MAAF,CAASC,KAAT,CAAeO,KAAf,CAAqB,GAArB,CAAb;AACA,YAAMd,UAAU,GAAGa,MAAM,CAAC,CAAD,CAAzB;AACA,YAAME,YAAY,GAAGF,MAAM,CAAC,CAAD,CAA3B;AACA,YAAMR,SAAS,GAAG;AAAEL,QAAAA,UAAF;AAAce,QAAAA;AAAd,OAAlB;;AACA,YAAMP,IAAI,qBACL,KAAKC,KAAL,CAAWD,IADN,EAELH,SAFK,CAAV;;AAIA,YAAMK,OAAO,qBAAO,KAAKD,KAAL,CAAWE,WAAlB;AAA+BX,QAAAA;AAA/B,QAAb;;AACA,WAAKT,QAAL,CAAc;AAAEiB,QAAAA,IAAF;AAAQG,QAAAA,WAAW,EAAED;AAArB,OAAd;AACD,KAvFkB;;AAAA,SAyFnBM,YAzFmB,GAyFJd,CAAC,IAAI;AAClBA,MAAAA,CAAC,CAACE,cAAF;AACA,UAAIO,WAAJ;;AACA,UAAI,KAAKzB,KAAL,CAAW+B,KAAX,CAAiBC,MAAjB,KAA4B,EAAhC,EAAoC;AAClCP,QAAAA,WAAW,qBAAO,KAAKF,KAAL,CAAWE,WAAlB;AAA+BO,UAAAA,MAAM,EAAE,KAAKhC,KAAL,CAAW+B,KAAX,CAAiBC;AAAxD,UAAX;AACD,OAFD,MAEO;AACLP,QAAAA,WAAW,qBAAO,KAAKF,KAAL,CAAWE,WAAlB,CAAX;AACD;;AACD,WAAKzB,KAAL,CAAWiC,WAAX,CAAuB,KAAKjC,KAAL,CAAWkC,EAAlC,EAAsCT,WAAtC;AACA,WAAKpB,QAAL,CAAc;AAAE8B,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACD,KAnGkB;;AAEjB,SAAKZ,KAAL,GAAa;AACXD,MAAAA,IAAI,EAAE;AACJlB,QAAAA,GAAG,EAAE,IADD;AAEJgC,QAAAA,IAAI,EAAE,EAFF;AAGJC,QAAAA,GAAG,EAAE,EAHD;AAIJC,QAAAA,IAAI,EAAE,EAJF;AAKJC,QAAAA,SAAS,EAAE,EALP;AAMJC,QAAAA,KAAK,EAAE,EANH;AAOJC,QAAAA,KAAK,EAAE,EAPH;AAQJ3B,QAAAA,UAAU,EAAE,IARR;AASJe,QAAAA,YAAY,EAAE,EATV;AAUJa,QAAAA,kBAAkB,EAAE,CAVhB;AAWJV,QAAAA,MAAM,EAAE;AAXJ,OADK;AAcXP,MAAAA,WAAW,EAAE,EAdF;AAeXU,MAAAA,QAAQ,EAAE,KAfC;AAgBX7B,MAAAA,iBAAiB,EAAE;AAhBR,KAAb;AAkBD;;AAEDqC,EAAAA,iBAAiB,GAAG;AAClB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK5C,KAAL,CAAWY,QAAX,CAAoBiC,MAAxC,EAAgDD,CAAC,EAAjD,EAAoD;AAClD,UAAI,KAAK5C,KAAL,CAAWY,QAAX,CAAoBgC,CAApB,EAAuBxC,GAAvB,KAA+B,KAAKJ,KAAL,CAAWkC,EAA9C,EAAkD;AAChD,aAAK7B,QAAL,CAAc;AAACiB,UAAAA,IAAI,EAAG,KAAKtB,KAAL,CAAWY,QAAX,CAAoBgC,CAApB;AAAR,SAAd;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,KAAK/C,KAAL,CAAWY,QAAX,CAAoBgC,CAApB,EAAuBL,SAAhD;AACD;AACF;;AACD,SAAKtC,cAAL;AACA+C,IAAAA,UAAU,CAAC,MAAM;AACf,WAAK3C,QAAL,CAAc;AAACC,QAAAA,iBAAiB,EAAE,CAAC,GAAG,KAAKiB,KAAL,CAAWjB,iBAAf,EAAiC,KAAKiB,KAAL,CAAWD,IAAX,CAAgBR,UAAjD;AAApB,OAAd;AACD,KAFS,EAEP,CAFO,CAAV;AAGD;;AAoEDmC,EAAAA,MAAM,GAAG;AACPH,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkB,KAAK/C,KAAL,CAAWkC,EAA7B;AACA,UAAMgB,kBAAkB,GAAG,KAAKlD,KAAL,CAAWY,QAAX,CAAoBuC,MAApB,CAA2BC,QAAQ,IAAI;AAChE,aAAO,CAAC,KAAK7B,KAAL,CAAWjB,iBAAX,CAA6B+C,QAA7B,CAAsCD,QAAQ,CAAChD,GAA/C,CAAR;AACD,KAF0B,CAA3B;AAFO,wBAKoB,KAAKmB,KALzB;AAAA,UAKCD,IALD,eAKCA,IALD;AAAA,UAKOa,QALP,eAKOA,QALP;AAMPW,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBZ,QAAxB;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,KAAK/C,KAAL,CAAWsD,SAApC;;AACA,QAAInB,QAAQ,IAAI,CAAC,KAAKnC,KAAL,CAAWsD,SAA5B,EAAuC;AACrC,aAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAI;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFD,MAEO;AACLT,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBzB,IAAI,CAACiB,SAAL,CAAeiB,QAAf,EAArB;AACA,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAM,QAAA,QAAQ,EAAI,KAAK1B,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,GAAG,EAAG,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAIE;AAAO,QAAA,IAAI,EAAG,MAAd;AAAqB,QAAA,KAAK,EAAG,cAA7B;AAA4C,QAAA,EAAE,EAAG,MAAjD;AAAwD,QAAA,KAAK,EAAIR,IAAI,CAACc,IAAtE;AAA4E,QAAA,QAAQ,EAAIpB,CAAC,IAAI,KAAKD,YAAL,CAAkBC,CAAlB,EAAqB,MAArB,CAA7F;AAA2H,QAAA,QAAQ,EAAI,IAAvI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF,EAQE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIE;AAAO,QAAA,IAAI,EAAG,MAAd;AAAqB,QAAA,KAAK,EAAG,cAA7B;AAA4C,QAAA,EAAE,EAAG,KAAjD;AAAuD,QAAA,KAAK,EAAIM,IAAI,CAACe,GAArE;AAA0E,QAAA,QAAQ,EAAIrB,CAAC,IAAI,KAAKD,YAAL,CAAkBC,CAAlB,EAAqB,KAArB,CAA3F;AAAwH,QAAA,QAAQ,EAAI,IAApI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CARF,EAeE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,OAAO,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAIE;AAAO,QAAA,IAAI,EAAG,MAAd;AAAqB,QAAA,KAAK,EAAG,cAA7B;AAA4C,QAAA,EAAE,EAAG,MAAjD;AAAwD,QAAA,KAAK,EAAIM,IAAI,CAACgB,IAAtE;AAA4E,QAAA,QAAQ,EAAItB,CAAC,IAAI,KAAKD,YAAL,CAAkBC,CAAlB,EAAqB,MAArB,CAA7F;AAA2H,QAAA,QAAQ,EAAI,IAAvI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CAfF,EAsBE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAIE;AAAO,QAAA,IAAI,EAAG,MAAd;AAAqB,QAAA,KAAK,EAAG,cAA7B;AAA4C,QAAA,EAAE,EAAG,WAAjD;AAA6D,QAAA,KAAK,EAAIM,IAAI,CAACiB,SAAL,CAAeiB,QAAf,EAAtE;AAAiG,QAAA,QAAQ,EAAIxC,CAAC,IAAI,KAAKD,YAAL,CAAkBC,CAAlB,EAAqB,WAArB,CAAlH;AAAqJ,QAAA,QAAQ,EAAI,IAAjK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CAtBF,EA6BE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAIE;AAAO,QAAA,IAAI,EAAG,QAAd;AAAuB,QAAA,KAAK,EAAG,cAA/B;AAA8C,QAAA,EAAE,EAAG,OAAnD;AAA2D,QAAA,KAAK,EAAIM,IAAI,CAACkB,KAAzE;AAAgF,QAAA,QAAQ,EAAIxB,CAAC,IAAI,KAAKD,YAAL,CAAkBC,CAAlB,EAAqB,OAArB,CAAjG;AAAgI,QAAA,QAAQ,EAAI,IAA5I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CA7BF,EAoCE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAIE;AAAO,QAAA,IAAI,EAAG,MAAd;AAAqB,QAAA,KAAK,EAAG,cAA7B;AAA4C,QAAA,EAAE,EAAG,OAAjD;AAAyD,QAAA,KAAK,EAAIM,IAAI,CAACmB,KAAvE;AAA8E,QAAA,QAAQ,EAAIzB,CAAC,IAAI,KAAKD,YAAL,CAAkBC,CAAlB,EAAqB,OAArB,CAA/F;AAA8H,QAAA,QAAQ,EAAI,IAA1I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CApCF,EA2CE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAIE;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,EAAE,EAAC,SAAX;AAAqB,QAAA,QAAQ,EAAE,KAAKU,oBAApC;AAA0D,QAAA,SAAS,EAAC,cAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAQ,QAAA,KAAK,EAAE,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsBJ,IAAI,CAACO,YAA3B,CADA,EAECqB,kBAAkB,CAACO,GAAnB,CAAuBL,QAAQ,IAAI;AAClC,eACE;AAAQ,UAAA,GAAG,EAAEA,QAAQ,CAAChD,GAAtB;AAA2B,UAAA,KAAK,EAAEgD,QAAQ,CAAChD,GAAT,GAAe,GAAf,GAAqBgD,QAAQ,CAAChB,IAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGgB,QAAQ,CAAChB,IADZ,CADF;AAKD,OANA,CAFD,CADF,CAJF,CA3CF,EA6DE;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,IAAI,EAAG,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA7DF,CAHF,CADF;AAqED;AACF;;AAxLiC;;AA2LpC,eAAetC,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nclass EditSoldier extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      info: {\n        _id: null,\n        name: '',\n        sex: '',\n        rank: '',\n        startDate: '',\n        phone: '',\n        email: '',\n        superiorId: null,\n        superiorName: '',\n        numberOfDirectSubs: 0,\n        imgUrl: '',\n      },\n      changedInfo: {},\n      redirect: false,\n      filteredSuperiors: []\n    };\n  }\n\n  componentDidMount() {\n    for (let i = 0; i < this.props.soldiers.length; i++){\n      if (this.props.soldiers[i]._id === this.props.id) {\n        this.setState({info : this.props.soldiers[i]});\n        console.log('startDate', this.props.soldiers[i].startDate);\n      }\n    }\n    this.filterSuperior();\n    setTimeout(() => {\n      this.setState({filteredSuperiors: [...this.state.filteredSuperiors,this.state.info.superiorId]});\n    }, 0); \n  }\n\n  filterSuperior = () => {\n    const result = [];\n    this.traverse(this.props._id, result);\n    this.setState({filteredSuperiors: result});\n  }\n\n  traverse = (_id, list) => {\n    if (!_id || _id === '') {\n      return;\n    }\n    list.push(_id);\n    let directSubs = this.getDirectSubs(_id);\n    for (let ds of directSubs) {\n      this.traverse(ds, list);\n    }\n  };\n  getDirectSubs = _id => {\n    let result = [];\n    const soldiers = this.props.soldiers;\n    for (let soldier of soldiers) {\n      if (soldier.superiorId === _id) {\n        result.push(soldier._id);\n      }\n    }\n    return result;\n  };\n\n  \n  handleChange = (e, key) => {\n    e.preventDefault();\n    const newObject = {};\n    newObject[key] = e.target.value;\n    const info = {\n      ...this.state.info,\n      ...newObject\n    };\n    const changed = {...this.state.changedInfo};\n    changed[key] = e.target.value;\n    this.setState({ info, changedInfo: changed});\n  }\n\n  handleSuperiorChange = e => {\n    let idName = e.target.value.split(' ');\n    const superiorId = idName[0];\n    const superiorName = idName[1];\n    const newObject = { superiorId, superiorName };\n    const info = {\n      ...this.state.info,\n      ...newObject\n    };\n    const changed = {...this.state.changedInfo, superiorId};\n    this.setState({ info, changedInfo: changed });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    let changedInfo;\n    if (this.props.image.imgUrl !== '') {\n      changedInfo = {...this.state.changedInfo, imgUrl: this.props.image.imgUrl};\n    } else {\n      changedInfo = {...this.state.changedInfo};\n    }\n    this.props.editSoldier(this.props.id, changedInfo);\n    this.setState({ redirect: true });\n  };\n\n  render() {\n    console.log('id', this.props.id);\n    const candidateSuperiors = this.props.soldiers.filter(superior => {\n      return !this.state.filteredSuperiors.includes(superior._id);\n    });\n    const { info, redirect } = this.state;\n    console.log('redirect', redirect);\n    console.log('isloading', this.props.isLoading);\n    if (redirect && !this.props.isLoading) {\n      return <Redirect to = {{ pathname: '/' }}/>\n    } else {\n      console.log('month', info.startDate.getMonth());\n      return (\n        <div className='edit_user'>\n          <h2>Edit Soldier</h2>\n          <br></br>\n          <form onSubmit = {this.handleSubmit}>\n            <div className=\"form-group col-md-50\" >\n              <label for = 'name'>\n                Name:\n              </label>\n              <input type = 'text' class = 'form-control' id = 'name' value = {info.name} onChange = {e => this.handleChange(e, 'name')} required = {true} />\n            </div> \n\n            <div className=\"form-group col-md-50\" >\n              <label htmlFor=\"sex\">\n                Sex:\n              </label>\n              <input type = 'text' class = 'form-control' id = 'sex' value = {info.sex} onChange = {e => this.handleChange(e, 'sex')} required = {true} />\n            </div>  \n            \n            <div className=\"form-group col-md-50\" >\n              <label  htmlFor=\"rank\">\n                Rank:\n              </label>\n              <input type = 'text' class = 'form-control' id = 'rank' value = {info.rank} onChange = {e => this.handleChange(e, 'rank')} required = {true}/>\n            </div>\n\n            <div className=\"form-group col-md-50\" >\n              <label htmlFor=\"startDate\">\n                Start Date:\n              </label>\n              <input type = 'date' class = 'form-control' id = 'startDate' value = {info.startDate.getMonth()} onChange = {e => this.handleChange(e, 'startDate')} required = {true}/>\n            </div>\n\n            <div className=\"form-group col-md-50\" >\n              <label htmlFor=\"phone\">\n                Phone:\n              </label>\n              <input type = 'number' class = 'form-control' id = 'phone' value = {info.phone} onChange = {e => this.handleChange(e, 'phone')} required = {true} />\n            </div>\n\n            <div className=\"form-group col-md-50\" > \n              <label htmlFor='text'>\n                Email: \n              </label> \n              <input type = 'text' class = 'form-control' id = 'email' value = {info.email} onChange = {e => this.handleChange(e, 'email')} required = {true} />\n            </div>\n\n            <div className=\"form-group col-md-50\" > \n              <label htmlFor='text'>\n                Superior: \n              </label> \n              <div className=\"col col-sm-10 col-lg-4\">\n                <select id=\"manager\" onChange={this.handleSuperiorChange} className=\"form-control\">\n                <option value={null}>{info.superiorName}</option>\n                {candidateSuperiors.map(superior => {\n                  return (\n                    <option key={superior._id} value={superior._id + \" \" + superior.name}>\n                      {superior.name}\n                    </option>\n                  );\n                })}\n                </select>\n              </div>\n            </div>\n\n            <button className=\"btn btn-success\" type = \"submit\">Save Change</button> \n          </form>\n        </div>\n      );\n    } \n  }\n}\n\nexport default EditSoldier;\n\n"]},"metadata":{},"sourceType":"module"}