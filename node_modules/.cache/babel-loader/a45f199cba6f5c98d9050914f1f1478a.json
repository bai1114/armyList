{"ast":null,"code":"var _jsxFileName = \"/Users/Flora/myapp/src/containers/App/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { getUser, getUsers, deleteUser, createUser, cancelRedirect, redirect, editUser } from '../../redux/action-creators';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport UserList from '../../components/UserList';\nimport CreateUser from '../../components/CreateUser';\nimport EditUser from '../../components/EditUser';\n\nclass App extends Component {\n  // getUser = _id => {\n  //   console.log('get edit user is called');\n  //   console.log('id: ', _id)\n  //   const users = this.props.pageOfUsers;\n  //   for (let user of users) {\n  //     if (user._id === _id) {\n  //       return user;\n  //     }\n  //   }\n  // };\n  render() {\n    //console.log(this.props.users);\n    //console.log(this.props.getUsers);\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => React.createElement(UserList, {\n        users: this.props.users,\n        getUsers: this.props.getUsers,\n        deleteUser: this.props.deleteUser,\n        isLoading: this.props.isLoading,\n        cancelRedirect: this.props.cancelRedirect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/users\",\n      render: () => React.createElement(CreateUser, {\n        createUser: this.props.createUser,\n        redirect: this.props.redirect,\n        redirectToUserlist: this.props.redirectToUserlist,\n        isLoading: this.props.isLoading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/users/:user_id\",\n      render: ({\n        match\n      }) => {\n        return React.createElement(EditUser, {\n          id: match.params.user_id,\n          editUser: this.props.editUser,\n          getUsers: this.props.getUsers,\n          getUser: this.props.getUser,\n          redirect: this.props.redirect,\n          redirectToUserlist: this.props.redirectToUserlist,\n          isLoading: this.props.isLoading,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.getUsers.users,\n    redirect: state.redirect,\n    isLoading: state.getUsers.isLoading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUsers: () => {\n      dispatch(getUsers());\n    },\n    deleteUser: _id => {\n      dispatch(deleteUser(_id));\n    },\n    createUser: user => {\n      dispatch(createUser(user));\n    },\n    redirectToUserlist: () => {\n      dispatch(redirect());\n    },\n    cancelRedirect: () => {\n      dispatch(cancelRedirect());\n    },\n    editUser: (id, user) => {\n      dispatch(editUser(id, user));\n    },\n    getUser: _id => {\n      dispatch(getUser(_id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/Flora/myapp/src/containers/App/index.js"],"names":["React","Component","connect","getUser","getUsers","deleteUser","createUser","cancelRedirect","redirect","editUser","BrowserRouter","Route","Switch","UserList","CreateUser","EditUser","App","render","props","users","isLoading","redirectToUserlist","match","params","user_id","mapStateToProps","state","mapDispatchToProps","dispatch","_id","user","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { getUser, getUsers, deleteUser, createUser, cancelRedirect, redirect, editUser } from '../../redux/action-creators';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport UserList from '../../components/UserList';\nimport CreateUser from '../../components/CreateUser';\nimport EditUser from '../../components/EditUser';\n\nclass App extends Component { \n  // getUser = _id => {\n  //   console.log('get edit user is called');\n  //   console.log('id: ', _id)\n  //   const users = this.props.pageOfUsers;\n\n  //   for (let user of users) {\n  //     if (user._id === _id) {\n  //       return user;\n  //     }\n  //   }\n  // };\n  render() {\n    //console.log(this.props.users);\n    //console.log(this.props.getUsers);\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route\n            exact = {true} \n            path = '/' \n            render = {() => \n              <UserList \n                users = {this.props.users}\n                getUsers = {this.props.getUsers}\n                deleteUser = {this.props.deleteUser}\n                isLoading = {this.props.isLoading}\n                cancelRedirect = {this.props.cancelRedirect}\n              /> \n            } \n          />\n          <Route \n            exact = {true}\n            path = '/users' \n            render = {() => \n              <CreateUser \n                createUser = {this.props.createUser} \n                redirect = {this.props.redirect}\n                redirectToUserlist = {this.props.redirectToUserlist}\n                isLoading = {this.props.isLoading}\n              />\n            }\n          />\n           <Route \n            path = '/users/:user_id' \n            render = {({ match }) => {\n              return (\n                <EditUser\n                  id = {match.params.user_id}\n                  editUser = {this.props.editUser}\n                  getUsers = {this.props.getUsers}\n                  getUser = {this.props.getUser}\n                  redirect = {this.props.redirect}\n                  redirectToUserlist = {this.props.redirectToUserlist}\n                  isLoading = {this.props.isLoading}\n                /> \n              );\n            }}\n          />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    users: state.getUsers.users,\n    redirect: state.redirect,\n    isLoading: state.getUsers.isLoading\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getUsers: () => {\n      dispatch(getUsers());\n    },\n    deleteUser: (_id) => {\n      dispatch(deleteUser(_id));\n    },\n    createUser: (user) => {\n      dispatch(createUser(user));\n    },\n    redirectToUserlist: () => {\n      dispatch(redirect());\n    },\n    cancelRedirect: () => {\n      dispatch(cancelRedirect());\n    },\n    editUser: (id, user) => {\n      dispatch(editUser(id, user));\n    },\n    getUser: (_id) => {\n      dispatch(getUser(_id));\n    },\n  }\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n"]},"metadata":{},"sourceType":"module"}