{"ast":null,"code":"var _jsxFileName = \"/Users/Flora/myapp/src/containers/App/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { getUsers, deleteUser, createUser, resetRedirect, redirect, editUser, sortUsers, backToHome, search, changeSearchInput } from '../../redux/action-creators';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport UserList from '../../components/UserList';\nimport CreateUser from '../../components/CreateUser';\nimport EditUser from '../../components/EditUser';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getUser = _id => {\n      console.log('get edit user is called');\n      const users = this.props.users;\n\n      for (let user of users) {\n        if (user._id === _id) {\n          return user;\n        }\n      }\n    };\n  }\n\n  render() {\n    console.log('tesing in App isSearching', isSearching);\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => React.createElement(UserList, {\n        users: this.props.users,\n        getUsers: this.props.getUsers,\n        deleteUser: this.props.deleteUser,\n        sortUsers: this.props.sortUsers,\n        isLoading: this.props.isLoading,\n        resetRedirect: this.props.resetRedirect,\n        search: this.props.search,\n        isSearching: this.props.isSearching,\n        searchUsers: this.props.searchUsers,\n        searchChange: this.props.changeSearchInput,\n        searchInput: this.props.searchInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/users\",\n      render: () => React.createElement(CreateUser, {\n        createUser: this.props.createUser,\n        redirect: this.props.redirect,\n        redirectToUserlist: this.props.redirectToUserlist,\n        isLoading: this.props.isLoading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/users/:user_id\",\n      render: ({\n        match\n      }) => {\n        return React.createElement(EditUser, {\n          users: this.props.users,\n          id: match.params.user_id,\n          editUser: this.props.editUser,\n          getUsers: this.props.getUsers,\n          getUser: this.getUser,\n          redirect: this.props.redirect,\n          redirectToUserlist: this.props.redirectToUserlist,\n          isLoading: this.props.isLoading,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.getUsers.users,\n    redirect: state.redirect,\n    isLoading: state.getUsers.isLoading,\n    isSearching: state.isSearching,\n    searchUsers: state.searchUsers,\n    searchInput: state.searchInput\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUsers: () => {\n      dispatch(getUsers());\n    },\n    deleteUser: _id => {\n      dispatch(deleteUser(_id));\n    },\n    createUser: user => {\n      dispatch(createUser(user));\n    },\n    redirectToUserlist: () => {\n      dispatch(redirect());\n    },\n    resetRedirect: () => {\n      dispatch(resetRedirect());\n    },\n    editUser: (id, user) => {\n      dispatch(editUser(id, user));\n    },\n    sortUsers: key => {\n      dispatch(sortUsers(key));\n    },\n    backToHome: () => {\n      dispatch(backToHome());\n    },\n    search: keyword => {\n      dispatch(search(keyword));\n    },\n    changeSearchInput: input => {\n      dispatch(changeSearchInput(input));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/Flora/myapp/src/containers/App/index.js"],"names":["React","Component","connect","getUsers","deleteUser","createUser","resetRedirect","redirect","editUser","sortUsers","backToHome","search","changeSearchInput","BrowserRouter","Route","Switch","UserList","CreateUser","EditUser","App","getUser","_id","console","log","users","props","user","render","isSearching","isLoading","searchUsers","searchInput","redirectToUserlist","match","params","user_id","mapStateToProps","state","mapDispatchToProps","dispatch","id","key","keyword","input"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,UAA/B,EAA2CC,aAA3C,EAA0DC,QAA1D,EAAoEC,QAApE,EAA8EC,SAA9E,EAAyFC,UAAzF,EAAqGC,MAArG,EAA6GC,iBAA7G,QAAsI,6BAAtI;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,QAA6C,kBAA7C;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,QAAP,MAAqB,2BAArB;;AAEA,MAAMC,GAAN,SAAkBlB,SAAlB,CAA4B;AAAA;AAAA;;AAAA,SAC1BmB,OAD0B,GACfC,GAAD,IAAS;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,YAAMC,KAAK,GAAG,KAAKC,KAAL,CAAWD,KAAzB;;AACA,WAAK,IAAIE,IAAT,IAAiBF,KAAjB,EAAwB;AACtB,YAAIE,IAAI,CAACL,GAAL,KAAaA,GAAjB,EAAsB;AACpB,iBAAOK,IAAP;AACD;AACF;AACF,KATyB;AAAA;;AAW1BC,EAAAA,MAAM,GAAG;AACPL,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCK,WAAzC;AACA,WACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAI,IADX;AAEE,MAAA,IAAI,EAAG,GAFT;AAGE,MAAA,MAAM,EAAI,MACR,oBAAC,QAAD;AACE,QAAA,KAAK,EAAI,KAAKH,KAAL,CAAWD,KADtB;AAEE,QAAA,QAAQ,EAAI,KAAKC,KAAL,CAAWtB,QAFzB;AAGE,QAAA,UAAU,EAAI,KAAKsB,KAAL,CAAWrB,UAH3B;AAIE,QAAA,SAAS,EAAI,KAAKqB,KAAL,CAAWhB,SAJ1B;AAKE,QAAA,SAAS,EAAI,KAAKgB,KAAL,CAAWI,SAL1B;AAME,QAAA,aAAa,EAAI,KAAKJ,KAAL,CAAWnB,aAN9B;AAOE,QAAA,MAAM,EAAI,KAAKmB,KAAL,CAAWd,MAPvB;AAQE,QAAA,WAAW,EAAI,KAAKc,KAAL,CAAWG,WAR5B;AASE,QAAA,WAAW,EAAI,KAAKH,KAAL,CAAWK,WAT5B;AAUE,QAAA,YAAY,EAAI,KAAKL,KAAL,CAAWb,iBAV7B;AAWE,QAAA,WAAW,EAAI,KAAKa,KAAL,CAAWM,WAX5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAoBE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAI,IADX;AAEE,MAAA,IAAI,EAAG,QAFT;AAGE,MAAA,MAAM,EAAI,MACR,oBAAC,UAAD;AACE,QAAA,UAAU,EAAI,KAAKN,KAAL,CAAWpB,UAD3B;AAEE,QAAA,QAAQ,EAAI,KAAKoB,KAAL,CAAWlB,QAFzB;AAGE,QAAA,kBAAkB,EAAI,KAAKkB,KAAL,CAAWO,kBAHnC;AAIE,QAAA,SAAS,EAAI,KAAKP,KAAL,CAAWI,SAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBF,EAgCG,oBAAC,KAAD;AACC,MAAA,IAAI,EAAG,iBADR;AAEC,MAAA,MAAM,EAAI,CAAC;AAAEI,QAAAA;AAAF,OAAD,KAAe;AACvB,eACE,oBAAC,QAAD;AACE,UAAA,KAAK,EAAI,KAAKR,KAAL,CAAWD,KADtB;AAEE,UAAA,EAAE,EAAIS,KAAK,CAACC,MAAN,CAAaC,OAFrB;AAGE,UAAA,QAAQ,EAAI,KAAKV,KAAL,CAAWjB,QAHzB;AAIE,UAAA,QAAQ,EAAI,KAAKiB,KAAL,CAAWtB,QAJzB;AAKE,UAAA,OAAO,EAAI,KAAKiB,OALlB;AAME,UAAA,QAAQ,EAAI,KAAKK,KAAL,CAAWlB,QANzB;AAOE,UAAA,kBAAkB,EAAI,KAAKkB,KAAL,CAAWO,kBAPnC;AAQE,UAAA,SAAS,EAAI,KAAKP,KAAL,CAAWI,SAR1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,OAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhCH,CADF,CADF;AAsDD;;AAnEyB;;AAsE5B,MAAMO,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLb,IAAAA,KAAK,EAAEa,KAAK,CAAClC,QAAN,CAAeqB,KADjB;AAELjB,IAAAA,QAAQ,EAAE8B,KAAK,CAAC9B,QAFX;AAGLsB,IAAAA,SAAS,EAAEQ,KAAK,CAAClC,QAAN,CAAe0B,SAHrB;AAILD,IAAAA,WAAW,EAAES,KAAK,CAACT,WAJd;AAKLE,IAAAA,WAAW,EAAEO,KAAK,CAACP,WALd;AAMLC,IAAAA,WAAW,EAAEM,KAAK,CAACN;AANd,GAAP;AAQD,CATD;;AAWA,MAAMO,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLpC,IAAAA,QAAQ,EAAE,MAAM;AACdoC,MAAAA,QAAQ,CAACpC,QAAQ,EAAT,CAAR;AACD,KAHI;AAILC,IAAAA,UAAU,EAAGiB,GAAD,IAAS;AACnBkB,MAAAA,QAAQ,CAACnC,UAAU,CAACiB,GAAD,CAAX,CAAR;AACD,KANI;AAOLhB,IAAAA,UAAU,EAAGqB,IAAD,IAAU;AACpBa,MAAAA,QAAQ,CAAClC,UAAU,CAACqB,IAAD,CAAX,CAAR;AACD,KATI;AAULM,IAAAA,kBAAkB,EAAE,MAAM;AACxBO,MAAAA,QAAQ,CAAChC,QAAQ,EAAT,CAAR;AACD,KAZI;AAaLD,IAAAA,aAAa,EAAE,MAAM;AACnBiC,MAAAA,QAAQ,CAACjC,aAAa,EAAd,CAAR;AACD,KAfI;AAgBLE,IAAAA,QAAQ,EAAE,CAACgC,EAAD,EAAKd,IAAL,KAAc;AACtBa,MAAAA,QAAQ,CAAC/B,QAAQ,CAACgC,EAAD,EAAKd,IAAL,CAAT,CAAR;AACD,KAlBI;AAmBLjB,IAAAA,SAAS,EAAGgC,GAAD,IAAS;AAClBF,MAAAA,QAAQ,CAAC9B,SAAS,CAACgC,GAAD,CAAV,CAAR;AACD,KArBI;AAsBL/B,IAAAA,UAAU,EAAE,MAAM;AAChB6B,MAAAA,QAAQ,CAAC7B,UAAU,EAAX,CAAR;AACD,KAxBI;AAyBLC,IAAAA,MAAM,EAAG+B,OAAD,IAAa;AACnBH,MAAAA,QAAQ,CAAC5B,MAAM,CAAC+B,OAAD,CAAP,CAAR;AACD,KA3BI;AA4BL9B,IAAAA,iBAAiB,EAAG+B,KAAD,IAAW;AAC5BJ,MAAAA,QAAQ,CAAC3B,iBAAiB,CAAC+B,KAAD,CAAlB,CAAR;AACD;AA9BI,GAAP;AAgCD,CAjCD;;AAkCA,eAAezC,OAAO,CAACkC,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CnB,GAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { getUsers, deleteUser, createUser, resetRedirect, redirect, editUser, sortUsers, backToHome, search, changeSearchInput } from '../../redux/action-creators';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport UserList from '../../components/UserList';\nimport CreateUser from '../../components/CreateUser';\nimport EditUser from '../../components/EditUser';\n\nclass App extends Component { \n  getUser = (_id) => {\n    console.log('get edit user is called');\n    const users = this.props.users;\n    for (let user of users) {\n      if (user._id === _id) {\n        return user;\n      }\n    }\n  };\n  \n  render() {\n    console.log('tesing in App isSearching', isSearching);\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route\n            exact = {true} \n            path = '/' \n            render = {() => \n              <UserList \n                users = {this.props.users}\n                getUsers = {this.props.getUsers}\n                deleteUser = {this.props.deleteUser}\n                sortUsers = {this.props.sortUsers}\n                isLoading = {this.props.isLoading}\n                resetRedirect = {this.props.resetRedirect}\n                search = {this.props.search}\n                isSearching = {this.props.isSearching}\n                searchUsers = {this.props.searchUsers}\n                searchChange = {this.props.changeSearchInput}\n                searchInput = {this.props.searchInput}\n              /> \n            } \n          />\n          <Route \n            exact = {true}\n            path = '/users' \n            render = {() => \n              <CreateUser \n                createUser = {this.props.createUser} \n                redirect = {this.props.redirect}\n                redirectToUserlist = {this.props.redirectToUserlist}\n                isLoading = {this.props.isLoading}\n              />\n            }\n          />\n           <Route \n            path = '/users/:user_id' \n            render = {({ match }) => {\n              return (\n                <EditUser\n                  users = {this.props.users}\n                  id = {match.params.user_id}\n                  editUser = {this.props.editUser}\n                  getUsers = {this.props.getUsers}\n                  getUser = {this.getUser}\n                  redirect = {this.props.redirect}\n                  redirectToUserlist = {this.props.redirectToUserlist}\n                  isLoading = {this.props.isLoading}\n                /> \n              );\n            }}\n          />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    users: state.getUsers.users,\n    redirect: state.redirect,\n    isLoading: state.getUsers.isLoading,\n    isSearching: state.isSearching,\n    searchUsers: state.searchUsers,\n    searchInput: state.searchInput\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getUsers: () => {\n      dispatch(getUsers());\n    },\n    deleteUser: (_id) => {\n      dispatch(deleteUser(_id));\n    },\n    createUser: (user) => {\n      dispatch(createUser(user));\n    },\n    redirectToUserlist: () => {\n      dispatch(redirect());\n    },\n    resetRedirect: () => {\n      dispatch(resetRedirect());\n    },\n    editUser: (id, user) => {\n      dispatch(editUser(id, user));\n    },\n    sortUsers: (key) => {\n      dispatch(sortUsers(key));\n    },\n    backToHome: () => {\n      dispatch(backToHome());\n    },\n    search: (keyword) => {\n      dispatch(search(keyword));\n    },\n    changeSearchInput: (input) => {\n      dispatch(changeSearchInput(input));\n    },\n  }\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n"]},"metadata":{},"sourceType":"module"}