{"ast":null,"code":"import _objectSpread from \"/Users/Flora/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nconst initState = {\n  soldiers: [],\n  isLoading: false,\n  isFetching: false,\n  err: null,\n  isSearching: false,\n  showSoldiers: [],\n  deleteErr: false,\n  hasMore: true,\n  index: 0,\n  order: 0,\n  sortKey: \"\",\n  sorted: false,\n  searchInput: ''\n};\n\nconst soldiers = (state = initState, action) => {\n  switch (action.type) {\n    // Delete User\n    case 'DELETE_SOLDIER_START':\n      return _objectSpread({}, state, {\n        isLoading: true\n      });\n\n    case 'DELETE_SOLDIER_ERROR':\n      return _objectSpread({}, state, {\n        isLoading: false,\n        err: action.error,\n        deleteErr: true\n      });\n\n    case 'DELETE_SOLDIER_SUCCESS':\n      let index = 0;\n      const soldiers = state.soldiers;\n\n      for (let i = 0; i < soldiers.length; i++) {\n        if (soldiers[i]._id === action.id) {\n          index = i;\n          break;\n        }\n      }\n\n      const deletedSoldiers = [...soldiers.slice(0, index), ...soldiers.slice(index + 1)];\n      return _objectSpread({}, state, {\n        isLoading: false,\n        soldiers: deletedSoldiers,\n        deleteErr: false,\n        err: null\n      });\n    // Create New User \n\n    case 'CREATE_SOLDIER_START':\n      return _objectSpread({}, state, {\n        isLoading: true\n      });\n\n    case 'CREATE_SOLDIER_FAIL':\n      return _objectSpread({}, state, {\n        isLoading: false,\n        err: action.error\n      });\n\n    case 'CREATE_SOLDIER_SUCCESS':\n      const newSoldiers = [...state.soldiers, action.newSoldier];\n      console.log('action newSoldier', action.newSoldier);\n      return _objectSpread({}, state, {\n        soldiers: newSoldiers,\n        isLoading: false,\n        err: null //Edit Soldier \n\n      });\n\n    case 'EDIT_SOLDIER_START':\n      return _objectSpread({}, state, {\n        isLoading: true\n      });\n\n    case 'EDIT_SOLDIER_ERROR':\n      return _objectSpread({}, state, {\n        isLoading: false,\n        err: action.err\n      });\n\n    case 'EDIT_SOLDIER_SUCCESS':\n      let editedSoldiers = state.soldiers.map(soldier => {\n        if (soldier._id === action._id) {\n          return action.soldier;\n        } else {\n          return soldier;\n        }\n      });\n      return _objectSpread({}, state, {\n        isLoading: false,\n        soldiers: editedSoldiers,\n        err: null // showSoldiers: show\n\n      });\n\n    case 'SORT_SOLDIERS':\n      {\n        const soldiers = [...state.soldiers];\n        const key = action.keep === true ? state.sortKey : action.key;\n        const keep = action.keep;\n        var sorted = false;\n        var newOrder = state.order === 1 ? -1 : 1;\n\n        if (keep === true) {\n          newOrder = state.order;\n          sorted = false;\n        }\n\n        soldiers.sort((soldier1, soldier2) => {\n          if (soldier1[key] === soldier2[key]) {\n            return 0;\n          }\n\n          if (newOrder === 1) return soldier1[key] < soldier2[key] ? -1 : 1;else return soldier1[key] > soldier2[key] ? -1 : 1;\n        });\n        return _objectSpread({}, state, {\n          soldiers,\n          order: newOrder,\n          sortKey: key,\n          sorted: sorted\n        });\n      }\n    // Sort Users\n    // case 'SORT_USERS': {\n    //   const sortedUsers = [...state.pageOfUsers]; \n    //   const key = action.key;\n    //   sortedUsers.sort((user1, user2) => {\n    //     if (typeof(user1[key]) === 'number') {\n    //       if (user1[key] === user2[key]) {\n    //         return 0;\n    //       }\n    //       return user1[key] < user2[key] ? -1 : 1;\n    //     }\n    //     return user1[key].toLowerCase().localeCompare(user2[key].toLowerCase());\n    //   });\n    //   return {\n    //     ...state,\n    //     pageOfUsers: sortedUsers,\n    //   };\n    // }\n    // Fetch Soldiers\n\n    case 'FETCH_SOLDIERS_START':\n      return _objectSpread({}, state, {\n        isLoading: true,\n        isFetching: true\n      });\n\n    case 'FETCH_SOLDIERS_SUCCESS':\n      {\n        return _objectSpread({}, state, {\n          soldiers: action.soldiers,\n          isLoading: false,\n          isFetching: false,\n          err: null,\n          sorted: true\n        });\n      }\n\n    case 'FETCH_SOLDIERS_FAIL':\n      return {\n        // ...state,\n        isLoading: false,\n        isFetching: false,\n        err: action.error\n      };\n\n    case 'ADD_RANGE_SOLDIERS_START':\n      return _objectSpread({}, state, {\n        isLoading: true\n      });\n\n    case 'ADD_RANGE_SOLDIERS_SUCCESS':\n      {\n        const newSoldiers = [...state.soldiers, ...action.soldiers];\n        return _objectSpread({}, state, {\n          isLoading: false,\n          err: null,\n          soldiers: newSoldiers,\n          hasMore: action.hasMore\n        });\n      }\n\n    case 'ADD_RANGE_SOLDIERS_FAIL':\n      return _objectSpread({}, state, {\n        isLoadng: false,\n        err: action.err // const searchInput = (state = '', action) => {\n        //   switch(action.type) {\n\n      });\n\n    case 'CHANGE_INPUT':\n      return {\n        searchInput: action.input //   default:\n        //     return state;\n        // }\n        // }\n        // export default searchInput;\n\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default soldiers; // Search User\n// case 'SEARCH_START' : {\n//   return {\n//     ...state,\n//     isLoading: true,\n//   }\n// }\n// case 'SEARCH_SUCCESS' : {\n//   return {\n//       ...state,\n//       searchUsers : action.users,\n//       isSearching : true,\n//       isLoading: false,\n//   }\n// }\n// case 'SEARCH_FAIL' : {\n//   return {\n//     ...state,\n//     isLoading: false,\n//     isSearching: false,\n//     err: action.error\n//   }\n// }","map":{"version":3,"sources":["/Users/Flora/myapp/src/redux/reducer/soldiers.js"],"names":["initState","soldiers","isLoading","isFetching","err","isSearching","showSoldiers","deleteErr","hasMore","index","order","sortKey","sorted","searchInput","state","action","type","error","i","length","_id","id","deletedSoldiers","slice","newSoldiers","newSoldier","console","log","editedSoldiers","map","soldier","key","keep","newOrder","sort","soldier1","soldier2","isLoadng","input"],"mappings":"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","sourcesContent":["const initState = {\n  soldiers: [],\n  isLoading: false,\n  isFetching: false,\n  err: null,\n  isSearching: false,\n  showSoldiers: [],\n  deleteErr: false,\n  hasMore: true,\n  index: 0,\n  order: 0,\n  sortKey: \"\",\n  sorted:false,\n  searchInput: '',\n};\n\nconst soldiers = (state = initState, action) => {\n  switch(action.type) {\n   \n    \n    // Delete User\n    case 'DELETE_SOLDIER_START':\n      return {\n        ...state,\n        isLoading: true\n      };\n    case 'DELETE_SOLDIER_ERROR':\n      return {\n        ...state,\n        isLoading: false,\n        err: action.error,\n        deleteErr: true\n      };\n    case 'DELETE_SOLDIER_SUCCESS':\n      let index = 0;\n      const { soldiers } = state;\n      for (let i = 0; i < soldiers.length; i++) {\n        if(soldiers[i]._id === action.id) {\n          index = i;\n          break;\n        }\n      }\n      const deletedSoldiers = [...soldiers.slice(0, index), ...soldiers.slice(index + 1)];\n      return {\n        ...state,\n        isLoading: false,\n        soldiers: deletedSoldiers,\n        deleteErr: false,\n        err: null,\n      };\n    \n    // Create New User \n    case 'CREATE_SOLDIER_START':\n      return {\n        ...state,\n        isLoading: true\n      };\n    case 'CREATE_SOLDIER_FAIL':\n      return {\n        ...state,\n        isLoading: false,\n        err: action.error\n      };\n    case 'CREATE_SOLDIER_SUCCESS':\n      const newSoldiers = [...state.soldiers, action.newSoldier];\n      console.log('action newSoldier', action.newSoldier);\n      return {\n        ...state,\n        soldiers: newSoldiers,\n        isLoading: false,\n        err: null\n      }\n    \n    //Edit Soldier \n    case 'EDIT_SOLDIER_START':\n      return {\n        ...state,\n        isLoading: true\n      };\n    case 'EDIT_SOLDIER_ERROR':\n      return {\n        ...state,\n        isLoading: false,\n        err: action.err\n      };\n    case 'EDIT_SOLDIER_SUCCESS':\n      let editedSoldiers = state.soldiers.map(soldier => {\n        if (soldier._id === action._id) {\n          return action.soldier;\n        } else {\n          return soldier;\n        }\n      });\n      return {\n        ...state,\n        isLoading: false,\n        soldiers: editedSoldiers,\n        err: null,\n        // showSoldiers: show\n      };\n    \n    case 'SORT_SOLDIERS': {\n      const soldiers = [...state.soldiers];\n      const key = action.keep === true ? state.sortKey : action.key;\n      const keep = action.keep;\n      var sorted = false;\n      var newOrder = state.order === 1 ? -1 : 1;\n      if(keep === true){ newOrder = state.order; sorted = false;}\n      soldiers.sort((soldier1, soldier2) => {\n        if (soldier1[key] === soldier2[key]) {\n          return 0;\n        }\n        if(newOrder === 1)\n        return soldier1[key] < soldier2[key] ? -1 : 1;\n        else return soldier1[key] > soldier2[key] ? -1 : 1;\n      });\n      return {\n        ...state,\n        soldiers,\n        order : newOrder,\n        sortKey : key,\n        sorted:sorted,\n      };\n    }\n\n    // Sort Users\n    // case 'SORT_USERS': {\n    //   const sortedUsers = [...state.pageOfUsers]; \n    //   const key = action.key;\n    //   sortedUsers.sort((user1, user2) => {\n    //     if (typeof(user1[key]) === 'number') {\n    //       if (user1[key] === user2[key]) {\n    //         return 0;\n    //       }\n    //       return user1[key] < user2[key] ? -1 : 1;\n    //     }\n    //     return user1[key].toLowerCase().localeCompare(user2[key].toLowerCase());\n    //   });\n    //   return {\n    //     ...state,\n    //     pageOfUsers: sortedUsers,\n    //   };\n    // }\n\n\n  \n\n\n    // Fetch Soldiers\n    case 'FETCH_SOLDIERS_START':\n      return {\n        ...state,\n        isLoading: true,\n        isFetching: true,\n      };\n    case 'FETCH_SOLDIERS_SUCCESS': {   \n      return {\n        ...state,\n        soldiers: action.soldiers,\n        isLoading: false,\n        isFetching: false,\n        err: null,\n        sorted: true\n      };\n    }\n    case 'FETCH_SOLDIERS_FAIL':\n      return {\n        // ...state,\n        isLoading: false,\n        isFetching: false,\n        err: action.error\n      };\n\n\n    case 'ADD_RANGE_SOLDIERS_START':\n      return {\n        ...state,\n        isLoading: true\n      };\n    case 'ADD_RANGE_SOLDIERS_SUCCESS': {\n      const newSoldiers = [...state.soldiers, ...action.soldiers];\n      return {\n        ...state,\n        isLoading: false,\n        err: null,\n        soldiers: newSoldiers,\n        hasMore: action.hasMore\n      };\n    }\n    case 'ADD_RANGE_SOLDIERS_FAIL': \n      return {\n        ...state,\n        isLoadng: false,\n        err: action.err,\n      }\n      // const searchInput = (state = '', action) => {\n      //   switch(action.type) {\n          case 'CHANGE_INPUT':\n            return {\n            searchInput: action.input\n            }\n        //   default:\n        //     return state;\n        // }\n      // }\n      \n      // export default searchInput;\n\n    default:\n      return state;\n  }\n};\n\nexport default soldiers;\n\n\n\n\n\n  // Search User\n// case 'SEARCH_START' : {\n//   return {\n//     ...state,\n//     isLoading: true,\n//   }\n// }\n// case 'SEARCH_SUCCESS' : {\n//   return {\n//       ...state,\n//       searchUsers : action.users,\n//       isSearching : true,\n//       isLoading: false,\n//   }\n// }\n// case 'SEARCH_FAIL' : {\n//   return {\n//     ...state,\n//     isLoading: false,\n//     isSearching: false,\n//     err: action.error\n//   }\n// }\n    \n\n"]},"metadata":{},"sourceType":"module"}